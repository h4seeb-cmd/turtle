{
  
    
        "post0": {
            "title": "LECTURE 3",
            "content": "Notes . - You can remotely git pull using bash. . export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/turtle # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/h4seeb-cmd/turtle.git&quot; # change to project of choice .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/2022/08/25/bash-lecture.html",
            "relUrl": "/fastpages/jupyter/2022/08/25/bash-lecture.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "LECTURE 2",
            "content": "NOTES . Make a google doc, put it on docx, then proceed to somehow organize it in the blog. . | In front matter, there is a key and a value. . Ex:branch: master (branch is the key master is the value.) . | If key is present you MUST have a value. . | Go to _pages to add/edit subpages. . ie:About Me . | Special key known as site.baseurl. If you add on it you can make a directory to a file. . | Secrets are in _config.yml, you can add images there. . | In config.yml, you can make show_image: true and you can now add images to posts. . to add an img to a post, do /image:{insert image link here, it should start with /images} . | .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/2022/08/24/lecture-2.html",
            "relUrl": "/fastpages/jupyter/2022/08/24/lecture-2.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "My First Notebook",
            "content": "Welcome to... my FIRST NOTEBOOK! . WOAH IS THAT PYTHON? . print(&quot;YES IT IS!!!&quot;) . YES IT IS!!! .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/2022/08/24/first-notebook.html",
            "relUrl": "/fastpages/jupyter/2022/08/24/first-notebook.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Quiz Time",
            "content": "import getpass, sys QUESTIONS = { &quot;What is used to create parameters in Python?&quot;: [ &quot;def&quot;, &quot;define&quot; ], &quot;Where are the secrets stored in your VSCode?&quot;: [ &quot;_config.yml&quot;, &quot;config.yml&quot;, &quot;config&quot; ], &quot;True or false: We can use docx files in our Fastpages site?&quot;: [ &quot;true&quot;, &quot;false&quot;, &quot;what in the world is docx?&quot; ], &quot;True or false: Static Text often changes when you run code&quot;: [ &quot;false&quot;, &quot;true&quot;, &quot;idk&quot; ], &quot;True or false: A sequence of code is only used on the AP exam and it is used to refer to mulitple lines of code&quot;: [ &quot;false&quot;, &quot;true&quot;, &quot;what&#39;s a sequence?&quot; ], &quot;Can we get an A in this class AND keep our sanity?&quot;: [ &quot;no&quot;, &quot;yes&quot;, &quot;maybe&quot; ], &quot;What is the syntax for remotely opening a file in VSCode from Terminal?&quot;: [ &quot;code .&quot;, &quot;Code.&quot;, &quot;. Code&quot; &quot;code.&quot; ], &quot;What do we call the defining parameters we set at the top of a markdown file or jupyter notebook?&quot;: [ &quot;front matter&quot;, &quot;define&quot; ], &quot;What is the name of the piece of code that lets you access and bring in other people&#39;s code?&quot;: [ &quot;import&quot;, &quot;port&quot;, &quot;rejuvenate&quot; ], &quot;What is the teacher&#39;s social security number?&quot;: [ &quot;how is that relevant&quot;, &quot;idk&quot;, &quot;why is this even a question&quot;, &quot;5014&quot; ], } for question, alternatives in QUESTIONS.items(): correct_answer = alternatives[0] for alternative in sorted(alternatives): print(f&quot; - {alternative}&quot;) answer = input(f&quot;{question}? &quot;) if answer == correct_answer: print(&quot;yay you got it right! here&#39;s your bronze medal!&quot;) else: print(f&quot;LOL imagine getting it wrong. The correct answer was {correct_answer!r}, not {answer!r}&quot;) # tomorrow&#39;s plan: clean up the quiz, push to git repo, start working on other hacks. . - def - define yay you got it right! here&#39;s your bronze medal! - _config.yml - config - config.yml yay you got it right! here&#39;s your bronze medal! - false - true - what in the world is docx? LOL imagine getting it wrong. The correct answer was &#39;true&#39;, not &#39;&#39; - false - idk - true LOL imagine getting it wrong. The correct answer was &#39;false&#39;, not &#39;&#39; - false - true - what&#39;s a sequence? LOL imagine getting it wrong. The correct answer was &#39;false&#39;, not &#39;&#39; - maybe - no - yes LOL imagine getting it wrong. The correct answer was &#39;no&#39;, not &#39;&#39; - Code. - code . - code. LOL imagine getting it wrong. The correct answer was &#39;code .&#39;, not &#39;&#39; - define - front matter LOL imagine getting it wrong. The correct answer was &#39;front matter&#39;, not &#39;&#39; - import - port - rejuvenate LOL imagine getting it wrong. The correct answer was &#39;import&#39;, not &#39;&#39; - 5014 - how is that relevant - idk - why is this even a question LOL imagine getting it wrong. The correct answer was &#39;how is that relevant&#39;, not &#39;&#39; .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/2022/08/23/quiz-time.html",
            "relUrl": "/fastpages/jupyter/2022/08/23/quiz-time.html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "LECTURE 1",
            "content": "Notes . -def = define, used to create parameters and functions in python. . -sequence = college board vocab for many lines of code in an order. . -static text = text that doesn&#39;t change. . ex:print(&quot;helloWorld&quot;) &gt; in this case, helloWorld is the static text, it doesn&#39;t change. . -import = imports commands that other people develop. . ex:import getpass sys -if statements are used in python to evaluate a correct or incorrect response. ex:if rsp == &quot;2&quot;&gt; print (rsp + &quot; is right!&quot;) correct += 1 else:print(rsp + &quot; is WRONG! :&lt; &quot;) -rsp is used in if statements, represents &quot;response&quot; .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/2022/08/23/intro-to-python-lecture.html",
            "relUrl": "/fastpages/jupyter/2022/08/23/intro-to-python-lecture.html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Welcome!",
            "content": "Hello World! . This is my very first blog post on this website! My name is Haseeb Beg, and I can’t wait to learn more about CS! . My Interests . I have a lot of things I like to do, some of them are: . Music Production 🎹 | Working Out 💪 | Gaming 🎮 | . Thanks For Reading! . Comment down below if you have any suggestions as to how I could improve my blog! .",
            "url": "https://h4seeb-cmd.github.io/turtle/markdown/2022/08/21/turtle-egg.html",
            "relUrl": "/markdown/2022/08/21/turtle-egg.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://h4seeb-cmd.github.io/turtle/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post7": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://h4seeb-cmd.github.io/turtle/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://h4seeb-cmd.github.io/turtle/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Class Lectures",
          "content": "All the class lectures: .",
          "url": "https://h4seeb-cmd.github.io/turtle/lectures/",
          "relUrl": "/lectures/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://h4seeb-cmd.github.io/turtle/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}