{
  
    
        "post0": {
            "title": "Unit 3 Lesson 9 & 11 HW",
            "content": "Developing Algorithms Tasks and HW . Tasks: . def mystery(num, num2): if (num % num2 == 0): print(&quot;True&quot;) else: print(&quot;False&quot;) mystery(20, 4) . What does the algorithm do? Please explain in words.An algorithm checks whether or not the remainder of the expression above = 0. If that&#39;s the case, it prints True, if it isn&#39;t, it prints False. . | What if I put in 30 as num and 4 as num2. What would be the output?The output would be False, as 30 divided by 4 does not equal 0. . | What is the output of this algorithm? . it is too hot outside . temp = 95 if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) if (temp &gt;= 65): print(&quot;I will go outside&quot;) else: print(&quot;it is too cold outside&quot;) . What is the output of this algorithm? it looks similar but the output is different! . it is too hot outside i will go outside . temp = 95 if (temp &gt;= 65): if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) else: print(&quot;i will go outside&quot;) if (temp &lt; 65): print(&quot;it is too cold outside&quot;) . sum = 0 counter = 1 sum = 0 for i in range (1, 10, 2): sum = sum + i print(sum) . 25 . HW: . def collatz(N): if N == 1: # If the variable = 1, simply print it print(N) return elif N % 2 == 0: # However, if this number is not one and an even number, print it and divide it by 2 print(N) collatz(N // 2) else: # If it&#39;s not 1 or even, it must be an odd number that isn&#39;t 1 and in that case, multiply by 3 and add 1 print(N) collatz(N * 3 + 1) collatz(6) # Calls the function with the argument 6 . 6 3 10 5 16 8 4 2 1 . Searching Introduction HW . HW: . def sqrt(N): # Checking to see if the number is 1 or 0, as the sqrt of 1 = 1 and the sqrt 0 = 0. if N &lt; 2: return N # If the number is not 1 or 0, it will proceed to do the following: else: y = N # Creating a variable y, and setting that = N, which is a variable that represents whatever integer that is put into the function z = (y + (N/y)) // 2 # creating the equation that divides N down while y - z &gt;= 0.00001: # this while loop continues this process until we get our desired answer y = z z = (y + (N/y)) / 2 return z # returns our answer if __name__ == &#39;__main__&#39;: # setting N to a placeholder value of 25 in this cell to test N = 25 answer = round(sqrt(N)) # set final answer to the rounded product of the function. print(answer) . 5 . test_cases = [0,1,4,85248289,22297284,18939904,91107025,69122596,9721924,37810201,1893294144,8722812816,644398225] answers = [int(sqrt(x)) for x in test_cases] def checkValid(): for i in range(len(test_cases)): if sqrt(test_cases[i]) == answers[i]: print(&quot;Check number {} passed&quot;.format(i+1)) else: print(&quot;Check number {} failed&quot;.format(i+1)) checkValid() . Check number 1 passed Check number 2 passed Check number 3 passed Check number 4 passed Check number 5 passed Check number 6 passed Check number 7 passed Check number 8 passed Check number 9 passed Check number 10 passed Check number 11 passed Check number 12 passed Check number 13 passed .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/04/30/u3L9&11.html",
            "relUrl": "/2023/04/30/u3L9&11.html",
            "date": " • Apr 30, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Title",
            "content": "from random import * def randomnum(): # function for generating random int x = randint(0,255) def convert(dec): x = dec i = 7 bin = [] while i &gt;= 0: if (x - 2 ** i) &gt;= 0: bin.append(1) i -= 1 else: bin.append(0) x -= 2**i i -= 1 print(bin) def survivors(): # function to assign position survivorList = [&quot;Jiya&quot;, &quot;Shruthi&quot;, &quot;Noor&quot;, &quot;Ananya&quot; , &quot;Peter Parker&quot;, &quot;Andrew Garfield&quot;, &quot;Tom Holland&quot;, &quot;Tobey Maguire&quot;] survivorChance = convert(randomnum()) return[survivorList[i] for i in range(8) if survivorChance[i] == 1] # replace the names above with your choice of people in the house def currentSurvivors(newSurvivors): newsurvivors = survivorList print(&quot;The survivors of the apocalypse are...&quot;) for i in survivorList: print(&quot; t - {}&quot;.format(i)) survivorList = survivors() currentSurvivors(survivorList) . import getpass, sys QUESTIONS = { &quot;What is used to create parameters in Python?&quot;: [ &quot;def&quot;, &quot;define&quot; ], &quot;Where are the secrets stored in your VSCode?&quot;: [ &quot;_config.yml&quot;, &quot;config.yml&quot;, &quot;config&quot; ], &quot;True or false: We can use docx files in our Fastpages site?&quot;: [ &quot;true&quot;, &quot;false&quot;, &quot;what in the world is docx?&quot; ], &quot;True or false: Static Text often changes when you run code&quot;: [ &quot;false&quot;, &quot;true&quot;, &quot;idk&quot; ], &quot;True or false: A sequence of code is only used on the AP exam and it is used to refer to mulitple lines of code&quot;: [ &quot;false&quot;, &quot;true&quot;, &quot;what&#39;s a sequence?&quot; ], &quot;Can we get an A in this class AND keep our sanity?&quot;: [ &quot;no&quot;, &quot;yes&quot;, &quot;maybe&quot; ], &quot;What is the syntax for remotely opening a file in VSCode from Terminal?&quot;: [ &quot;code .&quot;, &quot;Code.&quot;, &quot;. Code&quot; &quot;code.&quot; ], &quot;What do we call the defining parameters we set at the top of a markdown file or jupyter notebook?&quot;: [ &quot;front matter&quot;, &quot;define&quot; ], &quot;What is the name of the piece of code that lets you access and bring in other people&#39;s code?&quot;: [ &quot;import&quot;, &quot;port&quot;, &quot;rejuvenate&quot; ], &quot;What is the teacher&#39;s social security number?&quot;: [ &quot;how is that relevant&quot;, &quot;idk&quot;, &quot;why is this even a question&quot;, &quot;5014&quot; ], } for question, alternatives in QUESTIONS.items(): correct_answer = alternatives[0] for alternative in sorted(alternatives): print(f&quot; - {alternative}&quot;) answer = input(f&quot;{question}? &quot;) if answer == correct_answer: print(&quot;yay you got it right! here&#39;s your bronze medal!&quot;) else: print(f&quot;LOL imagine getting it wrong. The correct answer was {correct_answer!r}, not {answer!r}&quot;) .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/04/30/otherThings.html",
            "relUrl": "/2023/04/30/otherThings.html",
            "date": " • Apr 30, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "My First Notebook",
            "content": "Welcome to... my FIRST NOTEBOOK! . WOAH IS THAT PYTHON? . print(&quot;YES IT IS!!!&quot;) . YES IT IS!!! .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%200/2023/04/30/first-notebook.html",
            "relUrl": "/fastpages/jupyter/week%200/2023/04/30/first-notebook.html",
            "date": " • Apr 30, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "Title",
            "content": "dataset = { &#39;DelNorte&#39;:{ &#39;Westview&#39;:15, &#39;MtCarmel&#39;:20, &#39;Poway&#39;:35, &#39;RanchoBernrdo&#39;:50 }, &#39;Westview&#39;:{ &#39;DelNorte&#39;:15, &#39;MtCarmel&#39;:35, &#39;Poway&#39;:25, &#39;RanchoBernrdo&#39;: 45 }, &#39;MtCarmel&#39;:{ &#39;Westview&#39;:35, &#39;DelNorte&#39;:20, &#39;Poway&#39;:40, &#39;RanchoBernrdo&#39;:30 }, &#39;Poway&#39;:{ &#39;Westview&#39;:25, &#39;MtCarmel&#39;:40, &#39;DelNorte&#39;:35, &#39;RanchoBernrdo&#39;:15 }, &#39;RanchoBernardo&#39;:{ &#39;Westview&#39;:45, &#39;MtCarmel&#39;:30, &#39;Poway&#39;:15, &#39;DelNorte&#39;:50 } } def fastestroute(start,data): drivetime = 0 order = [] for key1, value1 in dataset.items(): print(&quot;key1&quot;, key1, &quot;value1&quot;, value1) print(value1) temp = &quot;&quot; temp += key1 lowestValue = 0 for key2, value2 in value1.items(): print(&quot;value2&quot;, value2) if lowestValue == 0: lowestValue = value2 if value2 &lt;= lowestValue: lowestValue = value2 drivetime = drivetime + lowestValue lowestKey = key2 order.append(key2) print(&quot;Lowest Value is:&quot;, lowestValue) print(&quot;Drivetime:&quot;, drivetime) print(&quot;Lowest Key&quot;, lowestKey) print(order) return(drivetime,order) dataset[&#39;start&#39;] for data in dataset: print(drivetime, order) def nested_dict_values_iterator(data): for value in data.values(): if isinstance(value, dict): for v in nested_dict_values_iterator(value): yield v else: yield value #for value in nested_dict_values_iterator(dataset): # print(value) def fastestroute2(start, data): drivetime = 0 order = [] order.append(start) global lowestKey lowestKey = start for i in dataset: #print(&quot;Dataset&quot;, dataset[i]) #print(&quot;data i: &quot;, data[i].keys()) #print(data[i].values()) #print(&quot;Data Poway&quot;, data[&#39;Poway&#39;]) for key2, value2 in dataset.items(): key2 = lowestKey print(&quot;First Dictionary key2&quot;, key2, &quot;value2&quot;, value2) #print(value2) temp = &quot;&quot; temp += key2 lowestValue = 0 for key2, value2 in value2.items(): print(&quot;Second Dictionary key2&quot;, key2) print(&quot;value2&quot;, value2) if lowestValue == 0: lowestValue = value2 if value2 &lt;= lowestValue and key2 not in order: lowestValue = value2 drivetime = drivetime + lowestValue lowestKey = key2 print(&quot;Lowest key inside Second Dictionary : &quot;, lowestKey) # check if key is not already in order[] if key2 not in order: order.append(key2) print(&quot;Lowest Value is:&quot;, lowestValue) print(&quot;Drivetime:&quot;, drivetime) print(&quot;Lowest Key&quot;, lowestKey) print(order) return(drivetime,order) start = &#39;DelNorte&#39; fastestroute2(start,dataset) # &#39;dataset&#39; is the name of the nested key value pair #fastestroute(start,dataset) #print(data) # print(data, dataset[data]) #print(dataset.values()) #min(dataset, key=dataset.get) #print(dataset.values()) #print(max(dataset.values())) .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/04/30/dictBackup.html",
            "relUrl": "/2023/04/30/dictBackup.html",
            "date": " • Apr 30, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "Happy Essay",
            "content": "Haseeb Beg . Mrs. Paulson . HSE-3 . 26 September 2022 . Happy Essay . In this day and age, there are many ways to be truly fulfilled and happy. Two ways that people find happiness are by working on their passions and by having a positive impact on the world. . Working on your passions is one of the things in life that can truly fulfill someone and give them a true sense of happiness. One person who has lived by this sentiment is Ronaldo Fadul. He has rejected the world’s materialistic nature for a humble house on the beach where he surfs day in and day out for over 50 years now. He expresses that, “This is the life that I chose. This is not the life of a PhD, but I live well.” He doesn’t quite have as much money as Elon Musk, but he lives a life that he is passionate about, and that’s enough for him. He has stepped off the hedonic treadmill, and in stepping away from the dystopian materialism that has affected Western society, he has found solace. . Another example of honing a skill and focusing on passions is actually a personal example. What surfing is to Ronaldo Fadul, making music is to me. I find tranquility and peace within the confines of my headphones, when making music, it seems as if everything else fades away. It’s just me and the music, in a sense. The thoughts that plague my mind in my day to day life seem to be silenced and my mind is whisked away into a state of flow. This state of flow has helped me through any mental health problems that I have struggled with in the past. One example I can give was a couple weeks ago. I knew that school was starting soon, and whatever I thought about it, I had a sense of dread and anxiety that would just not go away. Even as I would try to sleep, I would think about all the things that could go wrong. My only way of escaping this sense of dread was with music. Whenever I would go onto my DAW (Digital Audio Workstation) to work on projects, I would feel a sense of tranquility. As a result, eventually my passion for music helped me overcome the anxiety that gripped me during the summer. The flow state I was constantly entering on the daily helped me focus more on the present and what is happening right in front of me. . Additionally, it is known that doing acts of kindness and having a positive impact on the world is amazing for one’s mental health. A prime example of this is Andy Wimmer, who works at the Home for the Dying and Destitute in Kolkata, India. He has been helping people for 17 years and before his time in India, he was a rich banker. He lived a normal life, and he was quite into fashion. He spent lots of money on clothes, and materialistic things. However, when he was introduced to the Home for the Dying and Destitute, he thought that there must be more to life than a big house and a fast car. He started living in India and regularly volunteering, and he is living out his intrinsic goals. This is yet another example of people rejecting materialism and how it has made them happier. . Another example of the link between being kind and being happy was found in a study conducted by Kathyrn E. Buchanan and Anat Bardi in 2009. According to berkeley.edu, the study was conducted by sorting 86 participants into three groups for ten days and measuring their life satisfaction via survey before and after the study period. Group one was instructed to do at least one genuinely kind thing every day. Group two was instructed to do something new each day, and group three was not instructed to do anything. At the end of the study, it was found that after being surveyed, groups one and two had roughly equal increases in happiness. Even though group one only had to do one kind thing every day, they managed to feel the same amount of happiness as the group who were constantly doing new things. Additionally, both groups were focused on more intrinsic goals, and that’s why the happiness in the study grew. . Now looking back at this evidence, it’s no wonder that the general population has gotten unhappier and unhappier. If the American Dream of having a big house and fast cars was really the peak of the human experience, if money really was the key to happiness, then why did the suicide rate in the United States soar by 30 percent? .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/04/30/Happy-Essay.html",
            "relUrl": "/2023/04/30/Happy-Essay.html",
            "date": " • Apr 30, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Data Structures Guide",
            "content": "Objectives: . Students will be able to... . Understand the concept of data structures, including lists, dictionaries, and 2D arrays | Learn how to iterate through data structures using loops | Able to visualize data structures and iteration processes | Able to apply their knowledge to build simulations/interactions using lists and iteration | Learn how to store list and dictionary content in databases | . Lesson 1: Lists and Iteration . Lists (Ethan) . Lists are a type of data structure that can store multiple items in a single variable | Lists are defined using square brackets [ ] | Each item in a list is separated by a comma | Lists are indexed, starting at 0 | . fruits = [&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;, &quot;grape&quot;] print(fruits) . [&#39;apple&#39;, &#39;banana&#39;, &#39;orange&#39;, &#39;grape&#39;] . Accessing Lists . To access individual items in a list, we use the index of the item. | Python uses zero-based indexing, which means the first item in the list has an index of 0, the second item has an index of 1, and so on. | . print(fruits[0]) print(fruits[2]) . apple orange . Slicing Lists . We can also extract a specific portion of a list using slicing. | We use the colon : operator to specify a range of indices to include. | . print(fruits[0:2]) . [&#39;apple&#39;, &#39;banana&#39;] . Modifying List Items . Lists are mutable, meaning that we can change the value of an item in a list. | To change the value of an item in a list, we can use the indexing operator (square brackets) to access the item and then assign a new value to it. | . fruits[2] = &quot;pear&quot; print(fruits) . [&#39;apple&#39;, &#39;banana&#39;, &#39;pear&#39;, &#39;grape&#39;] . Adding and Removing List Items . Adding . Use the append() method to add an item to the end of a list. | . fruits.append(&quot;kiwi&quot;) # Adds &#39;kiwi&#39; to the end of the list print(fruits) . [&#39;apple&#39;, &#39;banana&#39;, &#39;pear&#39;, &#39;grape&#39;, &#39;kiwi&#39;] . Use the insert() method to add an item to a specific index in a list. | . fruits.insert(1, &quot;peach&quot;) # Inserts &quot;peach&quot; at index 1 print(fruits) . [&#39;apple&#39;, &#39;peach&#39;, &#39;banana&#39;, &#39;pear&#39;, &#39;grape&#39;, &#39;kiwi&#39;] . Removing . Use the remove() method to remove the first occurrence of an item from a list. | . fruits.remove(&#39;pear&#39;) # Removes the first occurrence of &#39;pear&#39; print(fruits) . [&#39;apple&#39;, &#39;peach&#39;, &#39;banana&#39;, &#39;grape&#39;, &#39;kiwi&#39;] . Use the pop() method to remove the item at a specific index from a list. | . fruits.pop(2) # Removes the item at index 2 print(fruits) . [&#39;apple&#39;, &#39;peach&#39;, &#39;grape&#39;, &#39;kiwi&#39;] . Use the clear() method to remove all items from a list. | . fruits.clear() # Removes all items from the list print(fruits) . [] . Function Explanation . InsertToList . This function is designed to insert a new item into a list at a specific index. | It first retrieves the new item to be added and the index at which to add it from the HTML document. | It checks if the retrieved values are both valid integers and if the index is within the range of the list. | If the values are valid, the function uses the splice() method to insert the new item into the list at the specified index. | In JavaScript, the splice() method modifies an array by removing, replacing, or adding elements. | The splice() method takes three arguments:the index at which to start changing the list, the number of elements to remove, and the new item to add. - The item is inserted without removing any elements, so we pass 0 as the second argument. | Finally, the function calls the visualizeList() function to display the updated list on the web page. | . // Get the value of the new item and the index where it should be inserted function insertToList() { let newItem = parseInt(document.getElementById(&quot;newItem&quot;).value); let index = parseInt(document.getElementById(&quot;index&quot;).value); if (!isNaN(newItem) &amp;&amp; !isNaN(index) &amp;&amp; index &gt;= 0 &amp;&amp; index &lt;= myList.length) { // splice() method to insert the new item into the list myList.splice(index - 1, 0, newItem); // Call the visualizeList() function to update the display of the list visualizeList(); } } . SortList . In JavaScript, sort() is a built-in method used to sort the elements of an array in place. The default sort order is ascending, but you can also specify a descending sort order. | In this case, the function sorts myList in ascending order based on their numerical value. | . // Sort myList array in ascending order function sortList() { // The function a - b is used, which subtracts the second element b from the first element a. // If the result is negative, a is sorted before b. If the result is positive, b is sorted before a. If the result is zero, the order of the elements is unchanged. myList.sort((a, b) =&gt; a - b); visualizeList(); } . Applications of Lists . Data processing: Lists are commonly used to store and process large amounts of data. In data analysis and machine learning, lists are often used to store datasets. . | Gaming: Lists are used extensively in game development to store game objects, player statistics, and game maps. . | Finance: Lists are used in finance to store and process financial data, such as stock prices and market trends. The data from these lists can also be used to calculate financial metrics and to create financial models. . | . Hacks (0.3) . Make your own list and manipulate it via accessing specific elements, adding or removing elements, etc. | Extra: Make an interactable visualization that can manipulate elements in a list such as the one demonstrated in our flask repository | . import random CSTeam = [&quot;Haseeb&quot;, &quot;Theo&quot;, &quot;Ananya&quot;, &quot;Ava&quot;, &quot;Alexa&quot;, &quot;Samarth&quot;] print(&quot;Original list: &quot; + str(CSTeam)) # Removing a team member CSTeam.pop(5) print(&quot;Removing a member: &quot; + str(CSTeam)) # Adding a team member CSTeam.append(&quot;Ethan&quot;) print(&quot;Adding a member: &quot; + str(CSTeam)) # Printing a random team member print(&quot;Random member: &quot; + str(CSTeam[random.randint(0,5)])) # Only printing a certain part of the list print(&quot;People in the CS Society Club: &quot; + str(CSTeam[0:2])) . Original list: [&#39;Haseeb&#39;, &#39;Theo&#39;, &#39;Ananya&#39;, &#39;Ava&#39;, &#39;Alexa&#39;, &#39;Samarth&#39;] Removing a member: [&#39;Haseeb&#39;, &#39;Theo&#39;, &#39;Ananya&#39;, &#39;Ava&#39;, &#39;Alexa&#39;] Adding a member: [&#39;Haseeb&#39;, &#39;Theo&#39;, &#39;Ananya&#39;, &#39;Ava&#39;, &#39;Alexa&#39;, &#39;Ethan&#39;] Random member: Alexa People in the CS Society Club: [&#39;Haseeb&#39;, &#39;Theo&#39;] . Iteration (Alex) . What is iteration? . In programming, iteration refers to the process of repeating a set of instructions until a specific condition is met. This can be achieved using loop structures like for loops and while loops. | . For Loops . A for loop is used to iterate over a sequence (e.g. a list, tuple, string, etc.) and execute a set of statements for each item in the sequence. Here&#39;s the basic syntax of a for loop in Python: | . sequence = [1,2,3,4,5,6,7] for variable in sequence: print(variable) . 1 2 3 4 5 6 7 . my_string = &quot;Hello, World!&quot; for character in my_string: print(character) . H e l l o , W o r l d ! . While Loops A while loop is used to repeat a set of statements as long as a condition is true. Here&#39;s the basic syntax of a while loop in Python: . num = 0 while num &lt; 5: print(num) num += 1 . 0 1 2 3 4 . Applications of Iteration . Iteration is a fundamental concept in computer programming and is used in a variety of real-life applications. Here are some examples:Data Processing . Data processing often involves iterating over large datasets to perform specific operations on each element. For example, in a data analysis task, you might iterate over a list of numbers to compute the average, or iterate over a list of strings to find the longest string. | . User Interfaces . User interfaces often involve iteration to display and handle data from various sources. For example, in a web application, you might iterate over a list of users to display their information in a table. Similarly, in a desktop application, you might iterate over a list of files to display them in a file explorer. | . Machine Learning . Machine learning algorithms often involve iterative processes to train models and improve their accuracy. For example, in a gradient descent algorithm, you might iterate over a set of training data to update the model&#39;s parameters and minimize the loss function. | . Popcorn hack (0.3) . Make a list related to your CPT project | Make a while loop that will print each term in the list | Make a for loop that will print each term in the list | . Simulation mechanics . In Python, pop() is a method that is used to remove and return an element from a list. The syntax for using pop() is as follows: | . questions = [input(&quot;what is AWS?&quot;), input(&quot;what is an example of a IDE we use?&quot;), input(&quot;what is 1+1&quot;)] answers = [&quot;Amazon Web Services&quot;, &quot;VSCode&quot;, &quot;2&quot;] lives = 2 # Inputted 5, idk, and yes as my answers while (lives &gt;= 0) == True: for question, answer in zip(questions, answers): if question == answer: print(&quot;correct!&quot;) else: print(&quot;L you got it wrong.&quot;) lives = lives - 1 break else: print(&quot;You Lose&quot;) . L you got it wrong. L you got it wrong. L you got it wrong. You Lose . my_list = [1, 2, 3, 4, 5] print(my_list) my_list.pop() print(my_list) my_list.pop(1) print(my_list) . [1, 2, 3, 4, 5] [1, 2, 3, 4] [1, 3, 4] . In Python, append() is a built-in method that is used to add an element to the end of a list. The syntax for using append() is as follows: . my_list = [] my_list.append(1) my_list.append(2) my_list.append(3) print(my_list) . [1, 2, 3] . Dictionary Lesson / 2D Arrays . Lesson 2: Dictionary&#39;s and 2 Dimensional Arrays . Advay Shindikar and Amay Advani . Objective: . Understand the concept of dictionaries and how they can be applied | Learn how to add, modify, and delete entries in a dictionary using the assignment operator and the del keyword | Understand the concept of 2D arrays and how they can be used to store data in rows and columns | Learn how to create a 2D array in Python using a nested list | Understand how to access values in a 2D array using row and column indices | Learn how to use indexing and slicing to access a subset of a 2D array | . . student = {&#39;name&#39;: &#39;Advay&#39;, &#39;age&#39;: 16, &#39;Sophomore&#39;} . students = [&#39;advay&#39;, &#39;amay&#39;, &#39;rohin&#39;, &#39;alex&#39;, &#39;ethan&#39;] . . Check In: . Of the above code segments, which is a list and which is a dictionary? The first code segment is a dictionary, as it uses keys and values to store values. The second code segment is a list, as it&#39;s a list of values with a generic, numerical index. | What is a dictionary and how is it used? A dictionary is a data structure that is navigated with keys and values. This system is useful when wanting to access data with a unique key instead of a numerical index. More complex data that needs more complex identification my work here. | What is a 2D Array? A 2D array, also known as a two-dimensional array, is an array data structure that contains a collection of elements arranged in a 2D grid, consisting of rows and columns. | How are 2D Arrays different from 1D Arrays or Lists and what can they be used for? A 2D array is different from a 1D array or list in that it represents a table or a grid of values arranged in rows and columns, whereas a 1D array or list is simply a linear sequence of values. In a 2D array, each element is accessed using two indices: one for the row and one for the column. | . Manipulating Dictionaries . grocery_dict = {} # ask the user to enter grocery items and their prices while True: item = input(&quot;Enter an item for your grocery list (or &#39;done&#39; to exit): &quot;) if item == &quot;done&quot;: break else: price = float(input(&quot;Enter the price of {}: &quot;.format(item))) grocery_dict[item] = price # print the grocery list and total cost total_cost = price while True: print(&quot;Your grocery list:&quot;) for item, price in grocery_dict.items(): print(&quot;- {}: ${}&quot;.format(item, price)) print(&quot;Total cost: ${}&quot;.format(total_cost)) # ask the user to choose an action action = input(&quot;What would you like to do? (add/remove/done) &quot;) # add a new item to the grocery list if action == &quot;add&quot;: item = input(&quot;Enter the name of the item you would like to add: &quot;) price = float(input(&quot;Enter the price of {}: &quot;.format(item))) grocery_dict[item] = price total_cost += price # remove an item from the j item = input(&quot;Enter the name of the item you would like to remove: &quot;) if item in grocery_dict: total_cost -= grocery_dict[item] del grocery_dict[item] else: print(&quot;Item not found in grocery list!&quot;) # exit the loop and print the final grocery list and total cost elif action == &quot;done&quot;: break print(&quot;Final grocery list:&quot;) for item, price in grocery_dict.items(): print(&quot;- {}: ${}&quot;.format(item, price)) print(&quot;Total cost: ${}&quot;.format(total_cost)) . Your grocery list: - apple: $1.0 Total cost: $1.0 Final grocery list: - apple: $1.0 Total cost: $1.0 .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/04/27/P4M-DataStructures-TeamEAAR.html",
            "relUrl": "/2023/04/27/P4M-DataStructures-TeamEAAR.html",
            "date": " • Apr 27, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "DevOps Lesson",
            "content": "import socket # Change the following host and see what IP it prints! host = &quot;crunchyroll.com&quot; ip = socket.gethostbyname(host) print(ip) . 104.18.40.133 . with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s: s.connect((ip, 80)) print(&quot;Successfully connected!&quot;) . Check-In . What is an IP address? A way to uniquely identify a device on the internet. IP is short for Internet Protocol. | What is a TCP port? TCP is used to send packets through computers. | with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s: s.connect((ip, 80)) # Send a GET request to &quot;/&quot; s.sendall(b&quot;GET / HTTP/1.1 r n r n&quot;) # Recieve &amp; print 2048 bytes of data data = s.recv(2048) print(data.decode()) . HTTP/1.1 400 Bad Request Server: cloudflare Date: Wed, 26 Apr 2023 21:15:36 GMT Content-Type: text/html Content-Length: 155 Connection: close CF-RAY: - &lt;html&gt; &lt;head&gt;&lt;title&gt;400 Bad Request&lt;/title&gt;&lt;/head&gt; &lt;body&gt; &lt;center&gt;&lt;h1&gt;400 Bad Request&lt;/h1&gt;&lt;/center&gt; &lt;hr&gt;&lt;center&gt;cloudflare&lt;/center&gt; &lt;/body&gt; &lt;/html&gt; . import requests # Change the URL to whatever you&#39;d like response = requests.get(&quot;https://google.com&quot;) print(&quot;Status code:&quot;, response.status_code) print(&quot;Headers:&quot;, response.headers) print(&quot;Response text:&quot;, response.text[:100]) # Add a line to print the &quot;Content-Type&quot; header of the response # Try an image URL! . Status code: 200 Headers: {&#39;Date&#39;: &#39;Mon, 01 May 2023 06:28:56 GMT&#39;, &#39;Expires&#39;: &#39;-1&#39;, &#39;Cache-Control&#39;: &#39;private, max-age=0&#39;, &#39;Content-Type&#39;: &#39;text/html; charset=ISO-8859-1&#39;, &#39;Content-Security-Policy-Report-Only&#39;: &#34;object-src &#39;none&#39;;base-uri &#39;self&#39;;script-src &#39;nonce-Uu1v_59mUOloEhr3asNxHw&#39; &#39;strict-dynamic&#39; &#39;report-sample&#39; &#39;unsafe-eval&#39; &#39;unsafe-inline&#39; https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp&#34;, &#39;P3P&#39;: &#39;CP=&#34;This is not a P3P policy! See g.co/p3phelp for more info.&#34;&#39;, &#39;Content-Encoding&#39;: &#39;gzip&#39;, &#39;Server&#39;: &#39;gws&#39;, &#39;X-XSS-Protection&#39;: &#39;0&#39;, &#39;X-Frame-Options&#39;: &#39;SAMEORIGIN&#39;, &#39;Set-Cookie&#39;: &#39;1P_JAR=2023-05-01-06; expires=Wed, 31-May-2023 06:28:56 GMT; path=/; domain=.google.com; Secure, AEC=AUEFqZeQUwzmoQc2Zg0UvLBzbH8xlQl8Dj-TkOqdEOx-7PBVYx67bvwnw4c; expires=Sat, 28-Oct-2023 06:28:56 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax, NID=511=JtXMys-FyetlTDfdF9d_NP05b_huDxND3M1LPDgZLxflrsgdp9zUWMsLr8onR4LghC4hbLue15-xRuWZUTX_d7kpHaNOXq3rXDI2A0VUTwpABVIY4OzNY79xtcBzmC5eu-dC2Q9fOJ3gqh0lQU2qkb_mrf8qK4UB0hbUSbdn9N4; expires=Tue, 31-Oct-2023 06:28:56 GMT; path=/; domain=.google.com; HttpOnly&#39;, &#39;Alt-Svc&#39;: &#39;h3=&#34;:443&#34;; ma=2592000,h3-29=&#34;:443&#34;; ma=2592000&#39;, &#39;Transfer-Encoding&#39;: &#39;chunked&#39;} Response text: &lt;!doctype html&gt;&lt;html itemscope=&#34;&#34; itemtype=&#34;http://schema.org/WebPage&#34; lang=&#34;en&#34;&gt;&lt;head&gt;&lt;meta content . NGINX . aws = &quot;3.130.255.192&quot; response = requests.get(&quot;http://&quot; + aws) print(response.text) . &lt;!doctype html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Cool site&lt;/title&gt; &lt;meta name=&#34;description&#34; content=&#34;cool site for apcsp&#34;&gt; &lt;/head&gt; &lt;body&gt; Hello, this is my cool site. Check out my products: &lt;a href=&#34;/products&#34;&gt;Products!!&lt;/a&gt; &lt;/body&gt; &lt;/html&gt; . Configuration . server { // Listen on virtual &quot;port 80&quot; listen 80; listen [::]:80; server_name 3.130.255.192; location / { // Inform server about original client proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; // Forward all requests transparently to the server running on our computer proxy_pass http://localhost:9099; } } . Load Balancing . upstream example.com { server server1.example.com; server server1.example.com; } . HTTP Headers . server { add_header X-Cool-Header &quot;I love APCSP!&quot;; location /pages { add_header X-Cooler-Header &quot;This is my secret header!&quot;; } } . Check In . Research 1 HTTP header and describe, in detail, its purpose. Content-Length specifies the length of the content being sent in the request or response. | Write a line in a sample NGINX configuration that will add that specific header to the /information locationadd_header Content-Length $content_length; . | Explain the purpose of the load balancing performed by NGINX: NGINX functions as a reverse proxy, and therefore, it is crucial to have load balancing to effectively distribute the incoming traffic across multiple servers, ensuring optimal performance and seamless operation. | Modify the following code block to obtain the value of the secret header on /products of the AWS site See below: | aws = &quot;3.130.255.192&quot; response = requests.get(&quot;http://&quot; + aws+ &quot;/products&quot;) print(&quot;The secret header is:&quot;, response.headers[&#39;X-Cooler-Header&#39;]) . The secret header is: This is my secret header! . Hacks . Complete the above check-in questions and change the hosts (0.1) | Complete the above code-segment to retrieve the secret header (0.1) | . Bonus (0.05) . Create a diagram showing the layers of abstraction that allow us to use HTTP (IP, TCP, etc.) . CORS Hacks . Explain what CORS is and what it stands for: CORS stands for Cross Origin Resource Sharing, and it&#39;s a security feature that prevents websites from stealing sensitive information. | Describe how you would be able to implement CORS into your own websites | Describe why you would want to implement CORS into your own websites: Without CORS, API requests are not possible, as API requests use Cross Origin requests. | How could use CORS to benefit yourself in the future?: I could use CORS to create a website that allows the user to access multiple domains without sacrificing security in any way. Total: 0.2 points | KASM Hacks . What is the purpose of &quot;sudo&quot; when running commands in terminal? sudo is used to provide admin access in order to run certain commands in bash. | What are some commands which allow us to look at how the storage of a machine is set up as? The df command provides information about the amount of free and used disk space on each file system that is mounted, while du displays the disk usage of files and directories. On the other hand, lsblk lists details about all the available or specific devices on the system. | What do you think are some alternatives to running &quot;curl -O&quot; to get the zip file for KASM? wget allows the user to download the zip file directly into the desired directory. | What kind of commands do you think the &quot;install.sh&quot; command has and why is it necessary to call it? It is possible that the &quot;install.sh&quot; command consists of instructions for the installation and setup of KASM on the server. These instructions could involve the downloading and extracting the KASM zip file, setting up any prerequisites required, and configuring the KASM service to automatically start up. To ensure the proper installation and configuration of KASM, executing the &quot;install.sh&quot; command is necessary. | Explain in at least 3-4 sentences how deploying KASM is related to/requires other topics talked about in the lesson and/or potential ways to add things mentioned in the lesson to this guide. In order to deploy KASM, it might be necessary to first configure firewall rules in order to permit communication to and from the KASM service. Next is setting up SSL/TLS certificates for secure communication, and managing user accounts and permissions. As a side note, the integration of KASM with other security tools such as IDS/IPS or SIEM systems can potentially boost its functionalities and offer a more complete security solution. To expand the guide to encompass these topics, one can add sections on firewall configuration, SSL/TLS certificates, user administration, and integration of KASM with other security tools. | Total: 0.2 points . AWS/RDS Hacks . deleted from hacks .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/04/26/devops-lesson.html",
            "relUrl": "/2023/04/26/devops-lesson.html",
            "date": " • Apr 26, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "P4-M 4/24 Big Idea 3",
            "content": "Introduction: Zeen . Hello, my name is zeen and today we will be presenting big idea 3. Our topics include 2d arrays, iteration, and lists and dictionaries. . Objectives . Master the concepts of iteration, list, 2d-arrays, Dictionaries, and APIs . Vocab . Here is some vocab during the lesson, you should be familar with them already no need for me to read these out, now I will pass the speaking off to Kush . Iteration: A process that repates itself | Array: Sometimes called a list, can keep strings and intergers inside it | 2D-Array: A collection of data elements arranged in a grid-like structure with rows and columns | Mutable: the ability to be changed or modified | Key: A Singular identifier that is associated with a certin value | . 1: 2D Array . Tic Tac Toe:Kush Sirohi . What are some examples of 2d Arrays | A seating plan for a room that is organized by rows and columns. | A spreadsheet, where each row represents a record and each column represents a specific field. | . What is a modern day game that could be classified as a 2D array | The Game of Life, as it takes place on a board with a grid on it, and each cell of the grid is either alive or dead. | Tetris is a modern day puzzle game where players must stack falling blocks into complete rows. The game board is a 2D array, with each row representing a row of the board and each column representing a column of the board. | . array = [&quot;Hello&quot;, &quot;Hi&quot;, &quot;Whats up&quot;] twoDArray = [[&quot;Name&quot;, &quot;ID&quot;, &quot;Age&quot;], [&quot;Kush&quot;, &quot;1&quot;, &quot;16&quot;], [&quot;Finn&quot;, &quot;2&quot;, &quot;16&quot;]] print(f&quot;This is a normal array: {array}&quot;) print(&quot;This is a 2D array&quot;) for row in twoDArray: print(row) . This is a normal array: [&#39;Hello&#39;, &#39;Hi&#39;, &#39;Whats up&#39;] This is a 2D array [&#39;Name&#39;, &#39;ID&#39;, &#39;Age&#39;] [&#39;Kush&#39;, &#39;1&#39;, &#39;16&#39;] [&#39;Finn&#39;, &#39;2&#39;, &#39;16&#39;] . How I used 2D Arrays (game example) . Describe a 2D array in your own words | A 2D array is an array which is constructed with an x and y axis, and it can be indexed by their rows and columns. | . board = [[&#39; &#39;, &#39; &#39;, &#39; &#39;], [&#39; &#39;, &#39; &#39;, &#39; &#39;], [&#39; &#39;, &#39; &#39;, &#39; &#39;]] # Function to print the current state of the game board def print_board(): print(&quot; 0 1 2&quot;) for i in range(3): print(i, end=&#39; &#39;) for j in range(3): print(board[i][j], end=&#39; &#39;) print() # Function to check if a player has won the game def check_win(player): # Check rows for a win for i in range(3): if board[i][0] == player and board[i][1] == player and board[i][2] == player: return True # Check columns for a win for j in range(3): if board[0][j] == player and board[1][j] == player and board[2][j] == player: return True # Check diagonals for a win if board[0][0] == player and board[1][1] == player and board[2][2] == player: return True if board[0][2] == player and board[1][1] == player and board[2][0] == player: return True # If no win condition is met, return False return False # Function to check if the game is a tie def check_tie(): for i in range(3): for j in range(3): if board[i][j] == &#39; &#39;: return False return True # Function to play the game def play_game(): # Initialize player and turn counter player = &#39;X&#39; turns = 0 # Loop until the game is over while True: # Print the current state of the board print_board() # Get the player’s move row = int(input(f&quot;{player}&#39;s turn. Enter row (0-2): &quot;)) col = int(input(f&quot;{player}&#39;s turn. Enter column (0-2): &quot;)) # Check if the move is valid if board[row][col] == &#39; &#39;: board[row][col] = player turns += 1 # Check if the player has won if check_win(player): print_board() print(f&quot;{player} wins!&quot;) return # Check if the game is a tie if check_tie(): print_board() print(&quot;It&#39;s a tie!&quot;) return # Switch players player = &#39;O&#39; if player == &#39;X&#39; else &#39;X&#39; else: print(&quot;That space is already taken. Try again.&quot;) # Start the game play_game() . 2: Iteration . Robot Game:Finn Carpenter- What is the defenition of iteration in your own words . Iteration involves repeating a process until a desired outcome is achieved. One way to accomplish this is through the use of a for loop, which can iterate over the elements of a list or array. | . times = 0 numbers = [1, 2, 3, 4, 5] ## Loops for i in range(5): print(&quot;hi&quot;) while times &lt;= 5: print(&quot;hello&quot;) times = times + 1 ## Function with a parameters def print_numbers(x): for num in x: print(num) print_numbers(numbers) . Iteration Game . Link to the game | Play the levels (only play the first 2 in class) | Explain how the game relates to itertation | To play the game, the player must use the arrow keys to navigate the square around the screen. This process involves iterating over the same action in order to reach a particular objective, such as scoring points or completing a level. | . How I used iteration (game example) . What parts of the code use iteration? | The for loop at line 16. | . function run() { // Read input values from the HTML document and convert them to integers. UPinput = parseInt(document.getElementById(&quot;up&quot;).value); DOWNinput = parseInt(document.getElementById(&quot;down&quot;).value); LEFTinput = parseInt(document.getElementById(&quot;left&quot;).value); RIGHTinput = parseInt(document.getElementById(&quot;right&quot;).value); looper = parseInt(document.getElementById(&quot;loop&quot;).value); runner.style.opacity = 0; // Create an array to hold the movements. let movements = []; // Push &#39;up&#39; movements to the array. for (let l = 0; l &lt; looper; l++) { for (let k = 0; k &lt; UPinput; k++) { movements.push(up); } // Push &#39;down&#39; movements to the array. for (let i = 0; i &lt; DOWNinput; i++) { movements.push(down); } // Push &#39;left&#39; movements to the array. for (let a = 0; a &lt; LEFTinput; a++) { movements.push(left); } // Push &#39;right&#39; movements to the array. for (let c = 0; c &lt; RIGHTinput; c++) { movements.push(right); } } // Set the initial index to 0 and execute each movement in sequence with a delay of 800 milliseconds. let index = 0; let intervalId = setInterval(() =&gt; { // If the end of the movements array has been reached, stop executing movements. if (index &gt;= movements.length) { clearInterval(intervalId); win(); // Call the win function. return; } movements[index](); // Execute the movement at the current index. index++; // Increment the index. }, 800); } . 3: List and Dictionaries . Scramble Game:Edwin . List = [1, 2, 3, 4, 5] Dict = { 1: &quot;Hi&quot;, 2: &quot;Hello&quot;, 3: &quot;Whats Up&quot; } # Why Do I call 0 for the first thing in a list, but 1 for Dict # print(List[0]) print(Dict[1]) . How I used a dictonary to make a game . Memory Game:James- Link . | . How I used List to make a game . Explain which parts of the code use lists To begin with, the word_list contains a collection of computer science-related words. Additionally, the scrambled_word variable represents the letters of a randomly chosen word, arranged in a haphazard sequence. Finally, the guesses variable tracks the number of attempts made by the user. | Explain what list manipulation is happening in that part Using the random.sample() function, one can randomly select a subset of elements from a given list. In this particular case, the function is applied to the letters in the word string to generate a random assortment of letters, which are subsequently rearranged in a random order to create the scrambled_word list. | . import random word_list = [&quot;python&quot;, &quot;computer&quot;, &quot;programming&quot;, &quot;algorithm&quot;, &quot;database&quot;, &quot;function&quot;, &quot;variable&quot;, &quot;loop&quot;, &quot;iteration&quot;, &quot;array&quot;, &quot;mutable&quot;, &quot;insertion&quot;, &quot;deletion&quot;, &quot;key&quot;, &quot;API&quot;] word = random.choice(word_list) scrambled_word = &quot;&quot;.join(random.sample(word, len(word))) print(f&quot;Unscramble the following Computer Science Word: {scrambled_word}&quot;) hints = 1 guesses = 1 guess = &quot;&quot; while guess != word and guesses &lt;= 4: guess = input(&quot;What&#39;s the unscrambled word? &quot;).lower() if guess != word: print(&quot;Sorry, that&#39;s not the word. Try again!&quot;) if guesses == 1: guesses += 1 elif guesses == 2: print(f&quot;Hint 1: The first letter of the word is &#39;{word[0]}&#39;&quot;) guesses += 1 elif guesses == 3: print(f&quot;Hint 2: The second letter of the word is &#39;{word[1]}&#39;&quot;) guesses += 1 else: print(f&quot;All 4 Guesses have been used, you didn&#39;t unscramble the word, the word was {word}&quot;) guesses += 1 else: print(&quot;Congratulations, you unscrambled the word!&quot;) . Unscramble the following Computer Science Word: yke Congratulations, you unscrambled the word! . Hacks: Your Score/1 . General 0.3 . Copy this noteboook into your personal fastpages | Answer all questions put the question in a new markdown block (so we can grade faster) | . | . Iteration 0.2 (can get up to 0.23) . Get to level 5 Take ScreenShots of your name inside the box an put them in your ticket | . | Create a code segment with iteration that does something cool | . 2D array 0.2 (can get up to 0.23) . Explain how the tic tac toe game works | Give 3 Examples of games that can be made from 2D arrays | . List and Dictionaries 0.2 (can get up to 0.23) . Explain the differences between Lists and Dictionaries | Make a code block that manipulates either a list or a dictionary | . General . What are some examples of 2d Arrays? | A seating plan for a room that is organized by rows and columns. | A spreadsheet, where each row represents a record and each column represents a specific field. | . What is a modern day game that could be classified as a 2D array? | The Game of Life, as it takes place on a board with a grid on it, and each cell of the grid is either alive or dead. | Tetris is a modern day puzzle game where players must stack falling blocks into complete rows. The game board is a 2D array, with each row representing a row of the board and each column representing a column of the board. | . Describe a 2D array in your own words. | A 2D array is an array which is constructed with an x and y axis, and it can be indexed by their rows and columns. | . What is the definition of iteration in your own words. | Iteration involves repeating a process until a desired outcome is achieved. One way to accomplish this is through the use of a for loop, which can iterate over the elements of a list or array. | . Explain how the game relates to iteration. | To play the game, the player must use the arrow keys to navigate the square around the screen. This process involves iterating over the same action in order to reach a particular objective, such as scoring points or completing a level. | . What parts of the code use iteration? | The for loops near line 16. These loops iterate over the UPinput, DOWNinput, LEFTinput, and RIGHTinput variables to create an array of movements. | . Explain which parts of the code use lists | To begin with, the word_list contains a collection of computer science-related words. Additionally, the scrambled_word variable represents the letters of a randomly chosen word, arranged in a haphazard sequence. Finally, the guesses variable tracks the number of attempts made by the user. | . Explain what list manipulation is happening in that part. | Using the random.sample() function, one can randomly select a subset of elements from a given list. In this particular case, the function is applied to the letters in the word string to generate a random assortment of letters, which are subsequently rearranged in a random order to create the scrambled_word list. | . Iteration . See Review Ticket . | Create a code segment with iteration: . | exampleList = [&quot;apple&quot;, &quot;bananna&quot;, &quot;orange&quot;, &quot;grape&quot;] print(&quot;Available punch flavors:&quot;) for example in exampleList: print(example) . Available punch flavors: apple bananna orange grape . 2D Array . The game code sets up a 3x3 grid where two players can take turns placing X&#39;s and O&#39;s. The goal is to get three of their symbols in a row before the opponent does. In case all the nine squares are occupied, and no player has a winning pattern, the game ends in a tie. . | Some examples of games that can be made using a 2D array are: . | Chess: A 2D, square board with pieces moving along the x and y axis. | The Game of Life: Takes place on a rectangular board with a grid on it, and each cell of the grid is either alive or dead. | Connect 4: A traditional game that requires two players involves dropping colored discs into a 7x6 grid, taking turns one after the other. The objective is to get a sequence of four discs in a row, either horizontally, vertically, or diagonally, before the opponent does. The player who accomplishes this first wins the game. | . Lists and Dictionaries . Lists are collections of data that have a specific order. They can contain various types of data, such as strings, numbers, or objects, and are denoted by square brackets with commas separating each element. On the other hand, dictionaries are unordered collections of information. They are created using curly brackets and consist of key-value pairs, where a key uniquely identifies a value. Values can take on any data type, including strings, numbers, and objects. . | In general: . Lists tend to be faster at indexing. | Dictionaries are more robust at accessing keys and values. | Lists can store duplicate values, however dictionaries cannot. | . | from random import randint as rI # Creating a list with my current group members group = [&quot;Samarth&quot;, &quot;Theo&quot;, &quot;Ava&quot;, &quot;Alexa&quot;, &quot;Ananya&quot;, &quot;Haseeb&quot;] # Adding Kush and James to my group group.append(&quot;Kush&quot;) group.append(&quot;James&quot;) # Removing Ananya from the group group.remove(&quot;Ananya&quot;) print(group) # Printing the amount of members in the group. print(len(group)) # Printing the name of a random group member print(&quot;Call 1: &quot; + group[rI(0,6)]) print(&quot;Call 2: &quot; + group[rI(0,6)]) print(&quot;Call 3: &quot; + group[rI(0,6)]) . [&#39;Samarth&#39;, &#39;Theo&#39;, &#39;Ava&#39;, &#39;Alexa&#39;, &#39;Haseeb&#39;, &#39;Kush&#39;, &#39;James&#39;] 7 Call 1: Alexa Call 2: Theo Call 3: James .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/04/21/EOYPLAYGROUND.html",
            "relUrl": "/2023/04/21/EOYPLAYGROUND.html",
            "date": " • Apr 21, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "Tri-3-Lesson",
            "content": "What you should Have to Start . Should have wget this file (tri3-lesson.ipynb) | wget this file: https://raw.githubusercontent.com/JoshuaW03628/Repository-1/master/nba_player_statistics.csv | Copy Path from nba_player_statistics.csv and replace prior path for it. | . Lesson Portion 1: ReIntroduction to Data Analysis, NumPy, and Pandas, Why is it important? . Data Analysis. . Data Analysis is the process of examining data sets in order to find trends and draw conclusions about the given information. Data analysis is important because it helps businesses optimize their performances. | . What is NunPy and Pandas . Pandas library involves a lot of data analysis in Python. NumPy Library is mostly used for working with numerical values and it makes it easy to apply with mathematical functions. | Imagine you have a lot of toys, but they are all mixed up in a big box. NumPy helps you to put all the same types of toys together, like all the cars in one pile and all the dolls in another. | Pandas is like a helper that helps you to remember where each toy is located. So, if you want to find a specific toy, like a red car, you can ask Pandas to find it for you. | Just like how it&#39;s easier to find a toy when they are sorted and organized, it&#39;s easier for grown-ups to understand and analyze big sets of numbers when they use NumPy and Pandas. | . Lesson Portion 2 More into NunPy . What we are covering; . Explanation of NumPy and its uses in data analysis | Importing NumPy library | Examining NumPy arrays | Creating NumPy arrays and performing intermediate array operations | Popcorn Hacks, Make your own percentile NunPy array | . What is NumPy&#39;s use in data analysis/ how to import NumPy. . NumPy is a tool in Python that helps with doing math and data analysis. It&#39;s great for working with large amounts of data, like numbers in a spreadsheet. NumPy is really good at doing calculations quickly and accurately, like finding averages, doing algebra, and making graphs. It&#39;s used a lot by scientists and people who work with data because it makes their work easier and faster. . import numpy as np . List of NunPy Functions, what they do, and examples. . Link; https://www.educba.com/numpy-functions/ | . Example of Using NunPy in Our Project . This code calculates the total plate appearances for a baseball player using NumPy&#39;s sum() function, similar to the original example. It then uses NumPy to calculate the total number of bases (hits plus walks) for the player, and divides that by the total number of plate appearances to get the on-base percentage. The results are then printed to the console. . import numpy as np # Example data player_hits = np.array([3, 1, 2, 0, 1, 2, 1, 2]) # Player&#39;s hits in each game player_walks = np.array([1, 0, 0, 1, 2, 1, 1, 0]) # Player&#39;s walks in each game player_strikeouts = np.array([2, 1, 0, 2, 1, 1, 0, 1]) # Player&#39;s strikeouts in each game # array to store plate appearances (PA) for the player total_pa = np.sum(player_hits != 0) + np.sum(player_walks) + np.sum(player_strikeouts) # array to store on-base percentage (OBP) for the player total_bases = np.sum(player_hits) + np.sum(player_walks) obp = total_bases / total_pa # Print the total plate appearances and on-base percentage for the player print(f&quot;Total plate appearances: {total_pa}&quot;) print(f&quot;On-base percentage: {obp:.3f}&quot;) . Activity 1; PopCorn Hacks; Creating a NunPy Array and Analyzing the Data using Array Operations . import numpy as np #Create a NumPy array of the heights of players in a basketball team heights = np.array([192, 195, 193, 200, 211, 199, 201, 198, 184, 190, 196, 203, 208, 182, 207]) # Calculate the percentile rank of each player&#39;s height percentiles = np.percentile(heights, [25, 50, 75]) # Print the results print(&quot;The 25th percentile height is&quot;, percentiles[0], &quot;cm.&quot;) print(&quot;The 50th percentile height is&quot;, percentiles[1], &quot;cm.&quot;) print(&quot;The 75th percentile height is&quot;, percentiles[2], &quot;cm.&quot;) # Determine the number of players who are in the top 10% tallest top_10_percent = np.percentile(heights, 90) tallest_players = heights[heights &gt;= top_10_percent] print(&quot;There are&quot;, len(tallest_players), &quot;players in the top 10% tallest.&quot;) . The 25th percentile height is 192.5 cm. The 50th percentile height is 198.0 cm. The 75th percentile height is 202.0 cm. There are 2 players in the top 10% tallest. . import numpy as np #Create a NumPy array of the x metascore = np.array([99, 90, 85, 30, 20, 45, 30, 5, 15, 23, 25, 88, 20, 40, 2, 11, 56,]) # Calculate the percentile rank of x y = np.percentile(metascore, [100, 75, 50]) # Print the results print(&quot;The highest rated album on metacritic is rated &quot;, y[0], &quot;&quot;) print(&quot;The 75th percentile rated album is&quot;, y[1], &quot;&quot;) print(&quot;The 50th percentile rated album is&quot;, y[2], &quot;&quot;) # Determine the number of players who are in the top 10% x t = np.percentile(metascore, 90) z = metascore[metascore &gt;= t] print(&quot;There are&quot;, len(z), &quot;albums in the top 10% (x).&quot;) . The highest rated album on metacritic is rated 99.0 The 75th percentile rated album is 56.0 The 50th percentile rated album is 30.0 There are 2 albums in the top 10% (x). . Lesson Portion 3 More into Pandas . What we are Covering . Explanation of Pandas and its uses in data analysis | Importing Pandas library | Loading data into Pandas DataFrames from CSV files | Manipulating and exploring data in Pandas DataFrames | Example of using Pandas for data analysis tasks such as filtering and sorting | . What are pandas and what is its purpose? . Pandas is a software library that is used in Python | Pandas are used for data analysis and data manipulation | Pandas offer data structures and operations for manipulating numerical tables and time series. | Pandas is free | . Things you can do using pandas . Data Cleansing; Identifying and correcting errors, inconsistencies, and inaccuracies in datasets. | Data fill; Filling in missing values in datasets. | Statistical Analysis; Analyzing datasets using statistical techniques to draw conclusions and make predictions. | Data Visualization; Representing datasets visually using graphs, charts, and other visual aids. | Data inspection; Examining datasets to identify potential issues or patterns, such as missing data, outliers, or trends. | . Pandas and Data analysis . The 2 most important data structures in Pandas are: . Series ; A Series is a one-dimensional labeled array that can hold data of any type (integer, float, string, etc.). It is similar to a column in a spreadsheet or a SQL table. Each element in a Series has a label, known as an index. A Series can be created from a list, a NumPy array, a dictionary, or another Pandas Series. | DataFrame ;A DataFrame is a two-dimensional labeled data structure that can hold data of different types (integer, float, string, etc.). It is similar to a spreadsheet or a SQL table. Each column in a DataFrame is a Series, and each row is indexed by a label, known as an index. A DataFrame can be created from a dictionary of Series or NumPy arrays, a list of dictionaries, or other Pandas DataFrame. | . Dataframes . import pandas as pd . pd.__version__ . &#39;1.4.2&#39; . Importing CSV Data . imports the Pandas library and assigns it an alias &#39;pd&#39;. | Loads a CSV file named &#39;nba_player_statistics.csv&#39; into a Pandas DataFrame called &#39;df&#39;. | Specifies a player&#39;s name &#39;Jimmy Butler&#39; to filter the DataFrame for that player&#39;s stats. It creates a new DataFrame called &#39;player_stats&#39; which only contains rows where the &#39;NAME&#39; column matches &#39;Jimmy Butler&#39;. | Displays the player&#39;s stats for points per game (PPG), rebounds per game (RPG), and assists per game (APG) using the print() function and string formatting. | The code uses the double square brackets [[PPG&#39;, &#39;RPG&#39;, &#39;APG&#39;]] to select only the columns corresponding to the player&#39;s points per game, rebounds per game, and assists per game from the player_stats DataFrame. | In summary, the code loads NBA player statistics data from a CSV file, filters it for a specific player, and displays the stats for that player&#39;s PPG, RPG, and APG using a Pandas DataFrame. | . import pandas as pd # Load the CSV file into a Pandas DataFrame df = pd.read_csv(&#39;/home/m1rza/vscode/turtle/_notebooks/files/nba_player_statistics.csv&#39;) # Filter the DataFrame to only include stats for a specific player (in this case, Jimmy Butler) player_name = &#39;Ja Morant&#39; player_stats = df[df[&#39;NAME&#39;] == player_name] # Display the stats for the player print(f&quot; nStats for {player_name}:&quot;) print(player_stats[[&#39;PPG&#39;, &#39;RPG&#39;, &#39;APG&#39;]]) . Stats for Ja Morant: PPG RPG APG 38 18.0 6.0 2.0 . In this code segment below we use Pandas to read a CSV file containing NBA player statistics and store it in a DataFrame. . The reason Pandas is useful in this scenario is because it provides various functionalities to filter, sort, and manipulate the NBA data efficiently. In this code, the DataFrame is filtered to only include the stats for the player you guys choose. . Imports the Pandas library and assigns it an alias &#39;pd&#39;. | Loads a CSV file named &#39;nba_player_statistics.csv&#39; into a Pandas DataFrame called &#39;df&#39;. | Asks the user to input a player name using the input() function and assigns it to the variable player_name. | Filters the DataFrame for the specified player name using the df[df[&#39;NAME&#39;] == player_name] syntax, and assigns the resulting DataFrame to the variable player_stats. | Checks if the player_stats DataFrame is empty using the empty attribute. If it is empty, prints &quot;No stats found for that player.&quot; Otherwise, it proceeds to step 6. | Displays the player&#39;s stats for points per game (PPG), rebounds per game (RPG), assists per game (APG), and total points + rebounds + assists (P+R+A) using the print() function and string formatting. | In summary, this code loads NBA player statistics data from a CSV file, asks the user to input a player name, filters the DataFrame for that player&#39;s stats, and displays the player&#39;s stats for PPG, RPG, APG, and P+R+A. If the player is not found in the DataFrame, it prints a message indicating that no stats were found. | . import pandas as pd df = pd.read_csv(&#39;/home/m1rza/vscode/turtle/_notebooks/files/nba_player_statistics.csv&#39;) # Load CSV file into a Pandas DataFrame player_name = input(&quot;Enter player name:&quot;) # Get player name input from user player_stats = df[df[&#39;NAME&#39;] == player_name] # Filter the DataFrame to only include stats for the specified player if player_stats.empty: print(&quot;No stats found for that player.&quot;) else: # Check if the player exists in the DataFrame print(f&quot; nStats for {player_name}:&quot;) print(player_stats[[&#39;PPG&#39;, &#39;RPG&#39;, &#39;APG&#39;, &#39;P+R+A&#39;]]) # Display the stats for the player inputted. . Stats for Stephen Curry: PPG RPG APG P+R+A 6 29.0 4.5 4.0 37.5 . Lesson Portion 4 . What we will be covering . Example of analyzing data using both NumPy and Pandas libraries | Importing data into NumPy and Pandas Performing basic data analysis tasks such as mean, median, and standard deviation Visualization of data using Matplotlib library | . Example of analyzing data using both NumPy and Pandas libraries . import numpy as np import pandas as pd # Load CSV file into a Pandas DataFrame df = pd.read_csv(&#39;/home/m1rza/vscode/turtle/_notebooks/files/nba_player_statistics.csv&#39;) # Filter the DataFrame to only include stats for the specified player player_name = input(&quot;Enter player name: &quot;) player_stats = df[df[&#39;NAME&#39;] == player_name] if player_stats.empty: print(&quot;No stats found for that player.&quot;) else: # Convert the player stats to a NumPy array player_stats_np = np.array(player_stats[[&#39;PPG&#39;, &#39;RPG&#39;, &#39;APG&#39;, &#39;P+R+A&#39;]]) # Calculate the average of each statistic for the player player_stats_avg = np.mean(player_stats_np, axis=0) # Print out the average statistics for the player print(f&quot; nAverage stats for {player_name}:&quot;) print(f&quot;PPG: {player_stats_avg[0]:.2f}&quot;) print(f&quot;RPG: {player_stats_avg[1]:.2f}&quot;) print(f&quot;APG: {player_stats_avg[2]:.2f}&quot;) print(f&quot;P+R+A: {player_stats_avg[3]:.2f}&quot;) . Average stats for Stephen Curry: PPG: 29.00 RPG: 4.50 APG: 4.00 P+R+A: 37.50 . NumPy impacts the given code because it performs operations on arrays efficiently. Specifically, it converts a Pandas DataFrame object to a NumPy array object, and then calculates the average statistics for a the player you guys inputted. Without NumPy, it would be more difficult and less efficient to perform these calculations on large data sets. It does the math for us. . Importing data into NumPy and Pandas Performing basic data analysis tasks such as mean, median, and standard deviation Visualization of data using Matplotlib library . Matplotlib is used essentially to create visuals of data. charts,diagrams,etc. . import numpy as np import pandas as pd import matplotlib.pyplot as plt # Load the CSV file into a Pandas DataFrame df = pd.read_csv(&#39;/home/m1rza/vscode/turtle/_notebooks/files/nba_player_statistics.csv&#39;) # Print the first 5 rows of the DataFrame print(df.head()) # Calculate the mean, median, and standard deviation of the &#39;Points&#39; column mean_minutes = df[&#39;MPG&#39;].mean() median_minutes = df[&#39;MPG&#39;].median() stddev_minutes = df[&#39;MPG&#39;].std() # Print the results print(&#39;Mean Minutes: &#39;, mean_minutes) print(&#39;Median Minutes: &#39;, median_minutes) print(&#39;Standard Deviation Minutes: &#39;, stddev_minutes) # Create a histogram of the &#39;Points&#39; column using Matplotlib plt.hist(df[&#39;MPG&#39;], bins=20) plt.title(&#39;MPG Histogram&#39;) plt.xlabel(&#39;MPG&#39;) plt.ylabel(&#39;Frequency&#39;) plt.show() . RANK NAME TEAM POS AGE GP MPG USG% TO% FTA ... APG 0 1 Jimmy Butler Mia F 33.6 1 42.9 34.3 9.9 8 ... 11.0 1 2 Kawhi Leonard Lac F 31.8 2 40.2 30.0 11.9 17 ... 6.0 2 3 Khris Middleton Mil F 31.7 1 33.1 37.5 19.8 10 ... 4.0 3 4 Devin Booker Pho G 26.5 2 44.1 28.8 16.2 14 ... 6.0 4 5 De&#39;Aaron Fox Sac G 25.3 2 38.2 31.6 9.0 14 ... 7.0 SPG BPG TPG P+R P+A P+R+A VI ORtg DRtg 0 3.0 0.0 3.0 40.0 46.0 51.0 11.6 117.2 103.8 1 2.0 0.5 3.0 41.0 40.5 47.0 11.0 129.5 110.4 2 0.0 0.0 5.0 42.0 37.0 46.0 12.8 115.5 111.9 3 2.5 1.5 4.0 33.0 38.0 39.0 5.2 121.9 111.0 4 3.5 0.5 2.5 34.0 38.0 41.0 9.1 112.6 108.8 [5 rows x 29 columns] Mean Minutes: 20.985483870967748 Median Minutes: 23.0 Standard Deviation Minutes: 12.844102823170283 . In this example code, we first import the necessary libraries, including NumPy, Pandas, and Matplotlib. We then load the CSV file into a Pandas DataFrame using the pd.read_csv() function. We print the first 5 rows of the DataFrame using the df.head() function. Next, we calculate the mean, median, and standard deviation of the &#39;MPG&#39; column using the appropriate Pandas methods, and print the results. And, we create a histogram of the &#39;MPG&#39; column using Matplotlib by calling the plt.hist() function and setting appropriate axis labels and a title. We then call the plt.show() method to display the plot. Even though NumPy is not directly used in this code, it is an important underlying component of the pandas and Matplotlib libraries, which are used to load, manipulate and visualize data. It allows them to work more efficiently . Lesson Portion 5; Summary . Summary/Goals of Lesson: . One of our goals was to make you understand data analysis and how it can be important in optimizing business performance. We also wanted to make sure you understood the use of Pandas and NumPy libraries in data analysis, with a focus on NumPy. As someone who works with data, we find Pandas incredibly useful for manipulating, analyzing, and visualizing data in Python. The way we use pandas is to calculate individual player and team statistics. We are a group that works with numerical data, so NumPy is one of our favorite tools for working with arrays and applying mathematical functions to them. It is very fast at computing and manipulating arrays making it a very valuable tool for tracking statistics which is important to our group. For example, if you have an array of the points scored by each player in a game, you can use NumPy to calculate the total points scored, average points per player, or the highest and lowest scoring players. . Lesson Portion 6 Hacks . Printing a CSV File (0.5) . Use this link https://github.com/ali-ce/datasets to select csv file of a topic you are interested in, or you may find one online. | Once you select your topic make sure it is a csv file and then you want to press on the button that says raw. | After that copy that information and create a file with a name and .csv at the end and paste your information. | Below is a start that you can use for your hacks. | Your goal is to print 2 specific parts from data (example could be like population and country). | . Popcorn Hacks (0.2) . Lesson Portion 1. #### Answering Questions (0.2) | Found Below. | . Submit By Thursday 8:35 A.M. . How to Submit: Slack a Blog Post that includes all of your hacks to &quot;Joshua Williams&quot; on Slack. | . import pandas as pd # read the CSV file df = pd.read_csv(&quot;/home/m1rza/vscode/turtle/_notebooks/files/games.csv&quot;) # display the data in a table print(df) . app_id title date_release 0 10090 Call of Duty: World at War 2008-11-18 1 13500 Prince of Persia: Warrior Within™ 2008-11-21 2 22364 BRINK: Agents of Change 2011-08-03 3 113020 Monaco: What&#39;s Yours Is Mine 2013-04-24 4 226560 Escape Dead Island 2014-11-18 ... ... ... ... 46063 758560 Versus World 2018-01-30 46064 886910 Bus Simulator 18 - Country Skin &amp; Decal Pack 2018-07-05 46065 1477870 Elemental 2021-03-30 46066 1638430 Axial Disc 1 2021-08-15 46067 2277670 Hank: Straightjacket 2023-02-01 win mac linux rating positive_ratio user_reviews 0 True False False Very Positive 92 37039 1 True False False Very Positive 84 2199 2 True False False Positive 85 21 3 True True True Very Positive 92 3722 4 True False False Mixed 61 873 ... ... ... ... ... ... ... 46063 True False False Very Positive 88 87 46064 True False False Very Positive 88 118 46065 True False False Mostly Positive 78 14 46066 True False False Positive 95 42 46067 True False False Mixed 66 12 price_final price_original discount steam_deck 0 19.99 19.99 0.0 True 1 9.99 9.99 0.0 True 2 2.99 2.99 0.0 True 3 14.99 14.99 0.0 True 4 14.99 14.99 0.0 True ... ... ... ... ... 46063 0.00 0.00 0.0 True 46064 0.00 0.00 0.0 True 46065 0.00 0.00 0.0 True 46066 0.00 0.00 0.0 True 46067 0.00 0.00 0.0 True [46068 rows x 13 columns] . Question Hacks; . What is NumPy and how is it used in data analysis? NumPy is a data analysis library that can be used to manipulate arrays and sets of numerical data. . What is Pandas and how is it used in data analysis? Pandas is a python library that&#39;s used for more visual information, rather than numerical. . How is NunPy different than Pandas for data analysis? NumPy is used for manipulating numerical values, while Pandas is used to manipulate and analyze data. . What is a DataFrame? A DataFrame is a 2-dimensional labeled data structure with columns of different types and information. . What are some common operations you can perform with NunPy? Some common NumPy operations include: ray creation, indexing, mathematical operations, and slicing . How Can You Incorporate Either of these Data Analysis Tools (NunPy, Pandas) into your project? I can use NumPy to analyze different scores, and I could use that for a leaderboard. .",
            "url": "https://h4seeb-cmd.github.io/turtle/notebooks/2023/04/19/tri3_lesson.html",
            "relUrl": "/notebooks/2023/04/19/tri3_lesson.html",
            "date": " • Apr 19, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "MCQ 5!",
            "content": "Proof of Completion . . Corrections . Question 14 . . My answer was wrong as while removing four links could isolate computer F from computer E, 4 is not the minimum number required to accomplish this. 3 was correct, as Aay line between two computers represents a way for them to communicate with each other, and a communication between two computers can go through other computers. If the links from F to G, from F to A, and from F to E were broken, it would not be possible for computers E and F to communicate. . Question 26 . . This option is correct. This code segment rotates right whenever there is an open square to the right. The robot will move forward from its initial location to the upper-left corner of the grid, then rotate right, then move forward to the upper-right corner of the grid, then rotate right, then move down two squares, then rotate right, then move forward to the gray square. . Question 30 . . This option is correct. Each call to the Analysis procedure requires one hour of program execution time. The procedure is called once before the loop, and then four times inside the loop (once for each of the four entries in One word, genre List). Therefore, the program will take approximately 5 hours to execute. . Question 33 . . This option is correct. The flowchart sets include to true whenever floor is greater than 1 0 or bedrooms equal 3, and sets include to false otherwise. Therefore, the algorithm is equivalent to Include, left arrow, open parenthesis, floor greater than 10, close parenthesis, OR, open parenthesis, bedrooms equal 3, close parenthesis . Question 43 . . This option is correct. The pattern in the table appears to indicate that there are n squared steps for a list containing n items. This number of steps is a polynomial and therefore the algorithm runs in reasonable time. . Question 44 . . This option is correct. With a 4-bit integer representation, 2 to the fourth power values can be represented, which allows for the values between 0 to 1 5, inclusive. If an operation results in a value greater than 1 5, an overflow error will occur. Of the operations given in the options, only 10 plus 7 gives a result larger than 1 5. . Question 56 . . This option is correct. The value of count starts at 1 and increases by twos, so it counts odd integers. The loop iterates 10 times, adding each intermediate value of count each time. Therefore, the program displays the sum of the odd integers starting at 1 and ending at 19. . Question 57 . . The correct answer is B. This expression concatenates the first two letters of Open quotation, Harp, close quotation with the last three letters of Open quotation, puppy, close quotation, resulting in Open quotation, Happy, close quotation. .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2028/2023/04/18/MCQ5.html",
            "relUrl": "/fastpages/jupyter/week%2028/2023/04/18/MCQ5.html",
            "date": " • Apr 18, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "MCQ 4!",
            "content": "Proof of Completion . . Corrections . Question 3 . . My answer was wrong as while removing four links could isolate computer F from computer E, 4 is not the minimum number required to accomplish this. 3 was correct, as Aay line between two computers represents a way for them to communicate with each other, and a communication between two computers can go through other computers. If the links from F to G, from F to A, and from F to E were broken, it would not be possible for computers E and F to communicate. . Question 17 . . My answer was incorrect, as in order to answer this question, the data set would need to include information from students with majors other than computer science and would need to store each student’s major. B was the correct choice, as the data set stores information about an individual student’s gender and state. This information can be aggregated to extract information about the percentage of female majors in each state. . Question 21 . . My answer was wrong, as this question can be answered by filtering the people and society category that provides the number of requests for a certain political candidate. The correct answer was choice C, as the cost of a given product is not tracked by the described search engine. . Question 37 . . My answer was wrong, as it is correct that as n increases, the number of steps is approximately equal to n^2, however, that means the algorithm runs in a reasonable amount of time. The correct answer is B, because as n increases, the number of steps is approximately equal to n^2 , which would make the algorithm polynomial. An algorithm with an efficiency that approximates n^2 is said to run in a reasonable amount of time. . Question 39 . . My answer was wrong, as the first number displayed must be 1. The second number displayed could be 1 or 2. The third number displayed could be 1, 2, or 3. The last number displayed could be 1, 2, 3, or 4. So 1 1 1 1 is a possible output. The correct answer is D, as in the second iteration of the loop, i is equal to 2. Thus RANDOM(1, i) returns either 1 or 2. So, the output 1 3 2 4 is not possible. .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2028/2023/04/03/MC4.html",
            "relUrl": "/fastpages/jupyter/week%2028/2023/04/03/MC4.html",
            "date": " • Apr 3, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "CSUSM Ambassadors Speaker Event",
            "content": "Proof of Attendance . . Computer Science General Notes . CS is a vital piece of all pieces of STEM “You can’t run away from it [coding].” . | . Engineering Majors and Opportunties . Cyber Security is a new major, and Computer Engineering is starting this fall | Mechanical Engineering (uses applied physics) | Circuit Engineering | . History and General Info About CSUSM . CSUSM used to be a poultry farm | New engineering buildings being made | National leader for social mobility | The campus is fairly small | One semester at CSUSM is $3,000 | . INTERNSHIPS . Use the campus events to make connections (Networking) | Clubs let you know about oppurtunitites | CHECK YOUR EMAIL!!! | Use Google to check for other programs Tips: . | Avoid unpaid internships, at this point lots of internships pay. | Apply even when underqualified “Worst thing they can say is no” . | Internships help with college apps | . Programs . Summer Scholars Program . 10 week program where you can work with an advisor, YOU GET PAID, 3-6 grand for the entire summer. | Quantum Bridge (For people who got into CSUSM) | AI research maybe? | . Paying for College . Grants vs. Scholarships vs. Loans . Grants: . Government-Funded to help you get through school | . Scholarships: . More prestigous | Privately funded | Lots of different opportunitites | . Loans: . College debt is very scary | You want to avoid this option as much as possible Subsidised: Partially funded by the government | 6 month grace period after graduating Unsubsidised Loan: | Start paying interest as soon as you graduate | . | AVOID LOANS IF YOU CAN. | . General Finance Notes . FASFA: . Do some reasearch on this, it’s very helpful | . Jobs After CSUSM . People end up working for areas like General Atomics and Northrop Grumman | You can get paid to go and get a Master’s Degree Your job may pay you to go get it | Jobs may give you a raise after getting a Master’s | . | . QA: . Q: How do you transfer Universities? A: No answer, no experience. I .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2028/2023/03/28/CSUSM-SE.html",
            "relUrl": "/fastpages/jupyter/week%2028/2023/03/28/CSUSM-SE.html",
            "date": " • Mar 28, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "Big Idea 2 Quiz!",
            "content": "Proof of Completion . . Corrections . Question 1 . . For this question, what tripped me up was the “store 75-100” wording. I believed that it refered to 75-100 in DECIMAL, when in reality it meant in binary digits. It’s actually 7 bits, as 2^7 is 128, so it could hold 128 digits. 6 bits would not be enough as 2^6 is 64. . Question 11 . . Honestly I just didn’t know how to answer this one. I got this wrong because I didn’t know that the attendance for a particular show can be calculated dividing the total dollar amount of all tickets sold by the average ticket price. . Question 17 . . I was also confused as to how I got this one incorrect, however I can see why D was the correct answer. D works because for each transaction, the data includes the date of the transaction and the number of items purchased in the transaction. By searching the data to find all transactions that occurred on the given date, and then adding the number of items purchased in each of those transactions, the total number of items purchased on a given date can be determined. . Question 18 . . I got this question wrong, as A) will generate a list of e-mail addresses of the customers who purchased any product, not just the products that use AA batteries. The correct answer is D) as the information in the products list can be used to create a list of the product IDs of all products that use AA batteries. Since the products list and the purchases list have the product ID information in common, the list of product IDs can be used in the purchases list to create a list of customer IDs of all the customers who purchased products that use AA batteries. Finally, since the purchases list and the customers list have the customer ID in common, the list of customer IDs can be used to generate a list of e-mail addresses of the customers who purchased products that use AA batteries. . Question 19 . . For this question, I just heavily overthought #3, and so I told myself it probably wasn’t it, which was a mistake, as any ordering of the three steps will identify the correct restaurant. Sequence III will work. Sorting by rating will put the greatest customer rating at the top of the list. Then filtering by number of ratings will remove restaurants without any ratings. Then filtering by payment type will remove the restaurants that do not accept credit cards. . Question 21 . . Honestly I just missed the “select 2 answers” part. I got the first answer correct, and for the same reason, the reversed sequence, (D) would work as well. .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2027/2023/03/26/BI2-corrections.html",
            "relUrl": "/fastpages/jupyter/week%2027/2023/03/26/BI2-corrections.html",
            "date": " • Mar 26, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "DEBUGGING EXAMPLE",
            "content": ". For this example, I am putting a breakpoint and using the create() function. . . I step into the function and add “TESTER QUESTION 15” . . The function then asks me to input a correct answer . . The correct answer is then added to the list of variables in the debug menu. . . I enter the info for the rest of the prompts and when finished, it successfully creates the question record. . . Here is that record being displayed on the .db file. . This process is very similar for read(), update(), and delete(). I just chose to use create() because this showcases how the debugging works the clearest. .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2026/2023/03/20/debug.html",
            "relUrl": "/fastpages/jupyter/week%2026/2023/03/20/debug.html",
            "date": " • Mar 20, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "Title",
            "content": "&quot;&quot;&quot; database dependencies to support sqliteDB examples &quot;&quot;&quot; from random import randrange from datetime import date import os, base64 import json from sqlalchemy.exc import IntegrityError from flask import Flask from flask_sqlalchemy import SQLAlchemy from flask import Blueprint, request, jsonify from flask_restful import Api, Resource # used for REST API building from datetime import datetime import sqlite3 # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///QA.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into Python shell and follow along &#39;&#39;&#39; # Define the Post class to manage actions in &#39;posts&#39; table, with a relationship to &#39;users&#39; table class Post(db.Model): __tablename__ = &#39;posts&#39; __table_args__ = {&#39;extend_existing&#39;: True} # Define the Notes schema id = db.Column(db.Integer, primary_key=True) note = db.Column(db.Text, unique=False, nullable=False) image = db.Column(db.String, unique=False) # Define a relationship in Notes Schema to userID who originates the note, many-to-one (many notes to one user) userID = db.Column(db.Integer, db.ForeignKey(&#39;qAs.id&#39;)) # Constructor of a Notes object, initializes of instance variables within object def __init__(self, id, note, image): self.userID = id self.note = note self.image = image # Returns a string representation of the Notes object, similar to java toString() # returns string def __repr__(self): return &quot;Notes(&quot; + str(self.id) + &quot;,&quot; + self.note + &quot;,&quot; + str(self.userID) + &quot;)&quot; # CRUD create, adds a new record to the Notes table # returns the object added or None in case of an error def create(self): try: # creates a Notes object from Notes(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Notes table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read, returns dictionary representation of Notes object # returns dictionary def read(self): # encode image path = app.config[&#39;UPLOAD_FOLDER&#39;] file = os.path.join(path, self.image) file_text = open(file, &#39;rb&#39;) file_read = file_text.read() file_encode = base64.encodebytes(file_read) return { &quot;id&quot;: self.id, &quot;userID&quot;: self.userID, &quot;note&quot;: self.note, &quot;image&quot;: self.image, } # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class QA(db.Model): __tablename__ = &#39;qAs&#39; # table name is plural, class name is singular __table_args__ = {&#39;extend_existing&#39;: True} # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _question = db.Column(db.String(255), unique=False, nullable=False) _correctAnswer = db.Column(db.String(255), unique=False, nullable=False) _incorrectAnswer1 = db.Column(db.String(255), unique=False, nullable = False) _incorrectAnswer2 = db.Column(db.String(255), unique=False, nullable = False) _incorrectAnswer3 = db.Column(db.String(255), unique=False, nullable = False) # Defines a relationship between User record and Notes table, one-to-many (one user to many notes) posts = db.relationship(&quot;Post&quot;, cascade=&#39;all, delete&#39;, backref=&#39;users&#39;, lazy=True) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, question, correctAnswer, incorrectAnswer1, incorrectAnswer2, incorrectAnswer3): self._question = question # variables with self prefix become part of the object, self._correctAnswer = correctAnswer self._incorrectAnswer1 = incorrectAnswer1 self._incorrectAnswer2 = incorrectAnswer2 self._incorrectAnswer3 = incorrectAnswer3 # a name getter method, extracts name from object @property def question(self): return self._question # a setter function, allows name to be updated after initial object creation @question.setter def question(self, name): self._question = name # a getter method, extracts email from object @property def correctAnswer(self): return self._correctAnswer # a setter function, allows name to be updated after initial object creation @correctAnswer.setter def correctAnswer(self, correctAnswer): self._correctAnswer = correctAnswer # check if uid parameter matches user id in object, return boolean def is_uid(self, correctAnswer): return self._correctAnswer == correctAnswer # a getter method, extracts email from object @property def incorrectAnswer1(self): return self._incorrectAnswer1 # a setter function, allows name to be updated after initial object creation @incorrectAnswer1.setter def incorrectAnswer1(self, incorrectAnswer1): self._incorrectAnswer1 = incorrectAnswer1 # check if uid parameter matches user id in object, return boolean def is_uid(self, incorrectAnswer1): return self._incorrectAnswer1 == incorrectAnswer1 @property def incorrectAnswer2(self): return self._incorrectAnswer2 # a setter function, allows name to be updated after initial object creation @incorrectAnswer2.setter def incorrectAnswer2(self, incorrectAnswer2): self._incorrectAnswer2 = incorrectAnswer2 # check if uid parameter matches user id in object, return boolean def is_uid(self, incorrectAnswer2): return self._incorrectAnswer2 == incorrectAnswer2 @property def incorrectAnswer3(self): return self._incorrectAnswer3 # a setter function, allows name to be updated after initial object creation @incorrectAnswer3.setter def incorrectAnswer3(self, incorrectAnswer3): self._incorrectAnswer3 = incorrectAnswer3 # check if uid parameter matches user id in object, return boolean def is_uid(self, incorrectAnswer3): return self._incorrectAnswer3 == incorrectAnswer3 # output content using str(object) in human readable form, uses getter # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { #&quot;id&quot;: self.id, &quot;question&quot;: self._question, &quot;correctAnswer&quot;: self._correctAnswer, &quot;incorrectAnswer1&quot;: self._incorrectAnswer1, &quot;incorrectAnswer2&quot;: self._incorrectAnswer2, &quot;incorrectAnswer3&quot;: self._incorrectAnswer3 } # CRUD update: updates user name, password, phone # returns self def update(self, question=&quot;&quot;, correctAnswer=&quot;&quot;, incorrectAnswer1 = &quot;&quot;, incorrectAnswer2 = &quot;&quot;, incorrectAnswer3 = &quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(question) &gt; 0: self.question = question if len(correctAnswer) &gt; 0: self.correctAnswer = correctAnswer if len(incorrectAnswer1) &gt; 0: self.incorrectAnswer1 = incorrectAnswer1 if len(incorrectAnswer2) &gt; 0: self.incorrectAnswer2 = incorrectAnswer2 if len(incorrectAnswer3) &gt; 0: self.incorrectAnswer3 = incorrectAnswer3 db.session.commit() return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initQAs(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; q1 = QA(question=&#39;What is a CPU?&#39;, correctAnswer=&#39;central processing unit&#39;, incorrectAnswer1 = &#39;coolant protection unit&#39;, incorrectAnswer2 = &#39;unit processor&#39;, incorrectAnswer3 = &#39;man idk&#39;) q2 = QA(question=&#39;What does HTML stand for?&#39;, correctAnswer=&#39;Hypertext Markup Language&#39;, incorrectAnswer1 = &#39;Hyperlink Maker Language&#39;, incorrectAnswer2 = &#39;Hyper Mail Markup&#39;, incorrectAnswer3 = &#39;Humphrey Man Table Lawnmower&#39;) q3 = QA(question=&#39;What do we use AWS for?&#39;, correctAnswer=&#39;Deployment&#39;, incorrectAnswer1 = &#39;Fortnite&#39;, incorrectAnswer2 = &#39;Minecraft&#39;, incorrectAnswer3 = &#39;Java&#39;) q4 = QA(question=&#39;How do we access Linux on our machines?&#39;, correctAnswer=&#39;wsl&#39;, incorrectAnswer1 = &#39;pylance&#39;, incorrectAnswer2 = &#39;Mongodb&#39;, incorrectAnswer3 = &#39;ReactJS&#39;) q5 = QA(question=&#39;Who is our teacher?&#39;, correctAnswer=&#39;mr. yeung&#39;, incorrectAnswer1 = &#39;jmort223&#39;, incorrectAnswer2 = &#39;nathanial kim&#39;, incorrectAnswer3 = &#39;sabine&#39;) q6 = QA(question=&#39;What does FUBAR stand for?&#39;, correctAnswer=&#39;Funked up beyond repair&#39;, incorrectAnswer1 = &#39;Flipped u before reprimanding&#39;, incorrectAnswer2 = &#39;Family Under Bad Analogies Reviewed&#39;, incorrectAnswer3 = &#39;Fun Ultra Boat Also Rollerblades&#39;) q7 = QA(question=&#39;How many sprints have we gone through this year?&#39;, correctAnswer=&#39;23&#39;, incorrectAnswer1 = &#39;1&#39;, incorrectAnswer2 = &#39;18&#39;, incorrectAnswer3 = &#39;52&#39;) q8 = QA(question=&#39;Which is NOT an example of proper PII?&#39;, correctAnswer=&#39;Your car&#39;, incorrectAnswer1 = &#39;House address&#39;, incorrectAnswer2 = &#39;Bank codes&#39;, incorrectAnswer3 = &#39;Passwords&#39;) q9 = QA(question=&#39;What do we use for our databases?&#39;, correctAnswer=&#39;SQLAlchemy&#39;, incorrectAnswer1 = &#39;XML&#39;, incorrectAnswer2 = &#39;MongoDB&#39;, incorrectAnswer3 = &#39;NodeJS&#39;) q10 = QA(question=&#39;What would constitute as backend development?&#39;, correctAnswer=&#39;working with python to create things like a database.&#39;, incorrectAnswer1 = &#39;using HTML to create a webpage&#39;, incorrectAnswer2 = &#39;using CSS to style&#39;, incorrectAnswer3 = &#39;Deployment using a platform like AWS&#39;) q11 = QA(question=&#39;What language is typically used in frontend development?&#39;, correctAnswer=&#39;HTML&#39;, incorrectAnswer1 = &#39;Python&#39;, incorrectAnswer2 = &#39;Assembly&#39;, incorrectAnswer3 = &#39;C-&#39;) q12 = QA(question=&#39;What does AWS stand for?&#39;, correctAnswer=&#39;Amazon Web Services&#39;, incorrectAnswer1 = &#39;AWOOOOOOOGA&#39;, incorrectAnswer2 = &#39;Awsome Wall Seperator&#39;, incorrectAnswer3 = &#39;Amazonian World Services&#39;) q13 = QA(question=&#39;Which of these are NOT one of the 4 roles assigned to us in CSP?&#39;, correctAnswer=&#39;Deployment Manager&#39;, incorrectAnswer1 = &#39;Frontend Developer&#39;, incorrectAnswer2 = &#39;Backend developer&#39;, incorrectAnswer3 = &#39;Scrum Master&#39;) qAs = [q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for qA in qAs: try: &#39;&#39;&#39;add a few 1 to 4 notes per user&#39;&#39;&#39; for num in range(randrange(1, 4)): note = &quot;#### &quot; + qA.question + &quot; note &quot; + str(num) + &quot;. n Generated by test data.&quot; qA.posts.append(Post(id=qA.id, note=note, image=&#39;ncs_logo.png&#39;)) &#39;&#39;&#39;add user/post data to table&#39;&#39;&#39; qA.create() except IntegrityError: &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; db.session.remove() print(f&quot;Records exist, duplicate email, or error: {qA.correctAnswer}&quot;) initQAs() database = &#39;instance/QA.db&#39; def create(): question = input(&quot;please enter a question&quot;) correctAnswer = input(&quot;please enter the correct answer&quot;) incorrectAnswer1 = input(&quot;please enter an incorrect answer&quot;) incorrectAnswer2 = input(&quot;please enter another incorrect answer&quot;) incorrectAnswer3 = input(&quot;please enter the last incorrect answer&quot;) conn = sqlite3.connect(database) cursor = conn.cursor() try: cursor.execute(&quot;INSERT INTO qAs (_question, _correctAnswer, _incorrectAnswer1, _incorrectAnswer2, _incorrectAnswer3) VALUES (?, ?, ?, ?, ?)&quot;, (question, correctAnswer, incorrectAnswer1, incorrectAnswer2, incorrectAnswer3)) # Commit the changes to the database conn.commit() print(f&quot;A new question record {question} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() def read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM qAs&#39;).fetchall() # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() def update(): question = input(&quot;what question do you want to update?&quot;) correctAnswer = input(&quot;what should the correct answer be?&quot;) if len(correctAnswer) &lt; 2: message = &quot;invalid answer&quot; correctAnswer = &quot;NULL&quot; else: message = &quot;correct answer updated!&quot; conn = sqlite3.connect(database) cursor = conn.cursor() try: # Execute an SQL command to update data in a table cursor.execute(&quot;UPDATE qAs SET _correctAnswer = ? WHERE _question = ?&quot;, (correctAnswer, question)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No question {question} was not found in the table&quot;) else: print(f&quot;The row with question {question} the correct answer has been {message}&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) cursor.close() conn.close() def delete(): question = input(&quot;enter a question to delete&quot;) conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM qAs WHERE _question = ?&quot;, (question,)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No question {question} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with {question} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() # Menu, to run other cells from one control point def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete&quot;) if operation.lower() == &#39;c&#39;: create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) # def create(): # body = request.get_json() # question = request.get(&quot;question&quot;) # correctAnswer = body.get(&quot;correctAnswer&quot;) # incorrectAnswer1 = body.get(&quot;incorrectAnswer1&quot;) # incorrectAnswer2 = body.get(&quot;incorrectAnswer2&quot;) # incorrectAnswer3 = body.get(&quot;incorrectAnswer3&quot;) # uo = QA(question = question, # incorrectAnswer1= incorrectAnswer1, # incorrectAnswer2= incorrectAnswer2, # incorrectAnswer3= incorrectAnswer3) # qA = uo.create() # if qA: # return jsonify(qA.read()) # else: # return {&#39;message&#39;: f&#39;Processed {question}, format error&#39;}, 400 # read() # with app.app_context: # qAs = QA.query.all() # random.shuffle(qAs) # qA = qAs[0] # return jsonify(qA.read()) . The row with how many bits in b64? was successfully deleted .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/03/17/Week26-hacks.html",
            "relUrl": "/2023/03/17/Week26-hacks.html",
            "date": " • Mar 17, 2023"
        }
        
    
  
    
        ,"post15": {
            "title": "Unit 2.4b Using Programs with Data, SQL",
            "content": "Database Programming is Program with Data . Each Tri 2 Final Project should be an example of a Program with Data. . Prepare to use SQLite in common Imperative Technique . Explore SQLite Connect object to establish database connection- Explore SQLite Cursor Object to fetch data from a table within a database | . Schema of Users table in Sqlite.db . Uses PRAGMA statement to read schema. . Describe Schema, here is resource Resource- What is a database schema? . A database schema (short for schematic) is the template for database info to be stored. . What is the purpose of identity Column in SQL database? An identity column in SQL, makes it easy to identify objects. | What is the purpose of a primary key in SQL database? The primary key is used to uniquely label/identify rows in teh table. | What are the Data Types in SQL table? string, numeric, id, etc/ | . import sqlite3 database = &#39;instance/sqlite.db&#39; # this is location of database def schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;users&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() schema() . (0, &#39;id&#39;, &#39;INTEGER&#39;, 1, None, 1) (1, &#39;_name&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (2, &#39;_uid&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (3, &#39;_password&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (4, &#39;_dob&#39;, &#39;DATE&#39;, 0, None, 0) . Reading Users table in Sqlite.db . Uses SQL SELECT statement to read dat . What is a connection object? After you google it, what do you think it does?A connection object is an object that can be used to connect to a file. . | Same for cursor object?A cursor object is a sort of container that denotes when the data editing starts/ . | Look at conn object and cursor object in VSCode debugger. What attributes are in the object?A conn object is a term used to denote a &quot;connection object.&quot; A Connection object represents a unique session with a data source. . | Is &quot;results&quot; an object? How do you know?Yes, results is an object. I know this since it has variables and functions. . | . import sqlite3 def read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM users&#39;).fetchall() # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() read() . (1, &#39;Thomas Edison&#39;, &#39;toby&#39;, &#39;sha256$NzCfNht1gXt5Uom5$658dbafc78d122d6938bd1070b097c78cff0f6f3d59ee63bed60dfa1b48399e4&#39;, &#39;1847-02-11&#39;) (2, &#39;Nikola Tesla&#39;, &#39;niko&#39;, &#39;sha256$sgmYj9ulUs4dhY8R$e584a772fe4654bf53b86a6c4137c9273c701ec7fe01c8c972547848d238eaa4&#39;, &#39;2023-03-16&#39;) (3, &#39;Alexander Graham Bell&#39;, &#39;lex&#39;, &#39;sha256$k7lkXNTTmHGAIDL7$7f94423366d708917846833b03f4a654454ad70304f57625424826dde0b828c1&#39;, &#39;2023-03-16&#39;) (4, &#39;Eli Whitney&#39;, &#39;whit&#39;, &#39;sha256$PIVG6DVEGpMWUC8z$05f028b5c3e28adc71d6ceeef5b28234c05d1c5336cd9059951c27b14fec4026&#39;, &#39;2023-03-16&#39;) (5, &#39;Indiana Jones&#39;, &#39;indi&#39;, &#39;sha256$sH7OM19apxko13Dd$36bb430a66721b061ee60a6356a755588c003b6387194db101545b691ac46e73&#39;, &#39;1920-10-21&#39;) (6, &#39;Marion Ravenwood&#39;, &#39;raven&#39;, &#39;sha256$zud5X30kSB59aAf8$3b2b155c4dac5f7630b9a026e2069970c68c915c80fb0f2683b04f8b2e51f373&#39;, &#39;1921-10-21&#39;) (7, &#39;hi&#39;, &#39;33&#39;, &#39;sha256$WrMNqo2Sc8XVaZMb$e4066655ea2ebfb76378dc655d24457248e4c742da5f9ffa9d2a02b335790a59&#39;, &#39;2023-03-16&#39;) (8, &#39;haseeb&#39;, &#39;1123&#39;, &#39;hhees&#39;, &#39;2001-09-111&#39;) (9, &#39;yee&#39;, &#39;y223&#39;, &#39;deeznuts331&#39;, &#39;1111-01-01&#39;) . Create a new User in table in Sqlite.db . Uses SQL INSERT to add row . Compore create() in both SQL lessons. What is better or worse in the two implementations? The object-based create() is most likely better for UI implementation, while the imperative-based create() is most likely better for easy testing. | Explain purpose of SQL INSERT. Is this the same as User init? SQL INSERT is a more direct input of the data (I think.) User init is most likely re-instantiating the database, but just with the new data, rather than inputting the data straigth in. | . import sqlite3 def create(): name = input(&quot;Enter your name:&quot;) uid = input(&quot;Enter your user id:&quot;) password = input(&quot;Enter your password&quot;) dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to insert data into a table cursor.execute(&quot;INSERT INTO users (_name, _uid, _password, _dob) VALUES (?, ?, ?, ?)&quot;, (name, uid, password, dob)) # Commit the changes to the database conn.commit() print(f&quot;A new user record {uid} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #create() . Updating a User in table in Sqlite.db . Uses SQL UPDATE to modify password . What does the hacked part do? The hacked part automatically fills in the required information with template information. | Explain try/except, when would except occur? Try/except is a conditional statement, sort of like if/else, however rather then checking for a previous requirement, it runs the code under try, and if it doesn&#39;t meet the proper requriements, it goes to the except section. | What code seems to be repeated in each of these examples to point, why is it repeated? The code for connecting to the database and opening the cursor seems to be repeated. This is because these steps are necessary for accessing db files remotely. | . import sqlite3 def update(): uid = input(&quot;Enter user id to update&quot;) password = input(&quot;Enter updated password&quot;) if len(password) &lt; 2: message = &quot;hacked&quot; password = &#39;gothackednewpassword123&#39; else: message = &quot;successfully updated&quot; # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to update data in a table cursor.execute(&quot;UPDATE users SET _password = ? WHERE _uid = ?&quot;, (password, uid)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: print(f&quot;The row with user id {uid} the password has been {message}&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #update() . Delete a User in table in Sqlite.db . Uses a delete function to remove a user based on a user input of the id. . Is DELETE a dangerous operation? Why? Delete is a dangerous operation because it has the potential to remove too much or too little. Also you cannot undo deleted records. | In the print statemements, what is the &quot;f&quot; and what does {uid} do? The f{} stuff is known as a formatted string. It basically makes it so that data stored in something like a variable is formatted into a string in a clean manner. | . import sqlite3 def delete(): uid = input(&quot;Enter user id to delete&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM users WHERE _uid = ?&quot;, (uid,)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with uid {uid} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #delete() . Menu Interface to CRUD operations . CRUD and Schema interactions from one location by running menu. Observe input at the top of VSCode, observe output underneath code cell. . Why does the menu repeat? The menu would repeat because it has to run thorugh all 5 operations, it&#39;s basic recursion. | Could you refactor this menu? Make it work with a List? In theory, you could. You would have to make it work on indexes. | . def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() elif operation.lower() == &#39;s&#39;: schema() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . No uid 2 was not found in the table . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In this implementation, do you see procedural abstraction? | In 2.4a or 2.4b lecture Do you see data abstraction? Complement this with Debugging example.I see data abstraction throughout these lesssons. . | Use Imperative or OOP style to Create a new Table or do something that applies to your CPT project. | . | . Reference... sqlite documentation .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/03/16/AP-unit2-4b.html",
            "relUrl": "/2023/03/16/AP-unit2-4b.html",
            "date": " • Mar 16, 2023"
        }
        
    
  
    
        ,"post16": {
            "title": "CB Quiz Reflections",
            "content": "Data Compression . . This quiz was very quick for me, and honestly, the only really slightly challenging question was #3. . . I got the correct answer C, as although fewer bits may be stored, information is not necessarily lost when lossy compression is applied to an image. Additionally, the fact that it stores less bits makes the page render the info faster, I really just used basic logic here. . Extracting Information . . This quiz overall was pretty difficult, although I did get a 100% on it. Some of the hard questions were: . Question 1: . . I got the answer A. This was correct because the unique identifier would be required in order to distinguish between two students with the same first and last names. If that’s not there, the program would get confused. . Question 3: . . For this question, I get the answers B and C. This is because different users may abbreviate city names differently. This may require the student to clean the data to make it uniform before it can be processed. .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2025/2023/03/13/CBquizStuff.html",
            "relUrl": "/fastpages/jupyter/week%2025/2023/03/13/CBquizStuff.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post17": {
            "title": "Unit 2.4a Using Programs with Data, SQLAlchemy",
            "content": "Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. Use Debugging through these examples to examine Objects created in Code. . College Board talks about ideas like . Program Usage. &quot;iterative and interactive way when processing information&quot; | Managing Data. &quot;classifying data are part of the process in using programs&quot;, &quot;data files in a Table&quot; | Insight &quot;insight and knowledge can be obtained from ... digitally represented information&quot; | Filter systems. &#39;tools for finding information and recognizing patterns&quot; | Application. &quot;the preserve has two databases&quot;, &quot;an employee wants to count the number of book&quot; | . | PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved | OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic | SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data | . | . Imports and Flask Objects . Defines and key object creations . Comment on where you have observed these working? Provide a defintion of purpose. Flask app objectI have seen the flask app work with our dedicated backends. . | SQLAlchemy db object | | . &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///sqlite.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) . Model Definition . Define columns, initialization, and CRUD methods for users table in sqlite.db . Comment on these items in the class, purpose and defintion. class User:User is defining the template for users, it&#39;s a class definition template. This template is used to create objects (OOP). - db.Model inheritance: Inheritance refers to how the class is called for the objects, and the objects inherits the properties and capabilities of the template. This in turn can help manipulate data in said database. | init method: init is what is used to derive/create an object from a class. | @property, @&lt;column&gt;.setter: getter and setter methods. these are used to help solidify and add attributes to the template used for object creation. | create, read, update, delete methods: Create: method that creates records in the database. | Read: method that helps with reading the data in the database. | Update: method that updates the things inside of the database. | Delete. method that deletes and terminates records in the database. | . | . | . &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into a Python shell and follow along &#39;&#39;&#39; # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class User(db.Model): __tablename__ = &#39;users&#39; # table name is plural, class name is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _name = db.Column(db.String(255), unique=False, nullable=False) _uid = db.Column(db.String(255), unique=True, nullable=False) _password = db.Column(db.String(255), unique=False, nullable=False) _dob = db.Column(db.Date) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password=&quot;123qwerty&quot;, dob=datetime.today()): # 123qwerty and datetime.today() used as defaults in case user does not define. self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts uid from object @property def uid(self): return self._uid # a setter function, allows uid to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional method used for setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter against stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # dob property is returned as string, a string represents date outside object @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob setter, verifies date type before it is set or default to today @dob.setter def dob(self, dob): if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # age is calculated field, age is returned according to date of birth @property def age(self): today = datetime.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # output content using str(object) is in human readable form # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;uid&quot;: self.uid, &quot;dob&quot;: self.dob, &quot;age&quot;: self.age, } # CRUD update: updates user name, password, phone # returns self def update(self, name=&quot;&quot;, uid=&quot;&quot;, password=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(name) &gt; 0: self.name = name if len(uid) &gt; 0: self.uid = uid if len(password) &gt; 0: self.set_password(password) db.session.commit() return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None . Initial Data . Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? Create All Tables from db Object | User Object Constructors | Try / Except | | . &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=datetime(1847, 2, 11)) u2 = User(name=&#39;Nikola Tesla&#39;, uid=&#39;niko&#39;, password=&#39;123niko&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;whit&#39;, password=&#39;123whit&#39;) u5 = User(name=&#39;Indiana Jones&#39;, uid=&#39;indi&#39;, dob=datetime(1920, 10, 21)) u6 = User(name=&#39;Marion Ravenwood&#39;, uid=&#39;raven&#39;, dob=datetime(1921, 10, 21)) users = [u1, u2, u3, u4, u5, u6] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for user in users: try: &#39;&#39;&#39;add user to table&#39;&#39;&#39; object = user.create() print(f&quot;Created new uid {object.uid}&quot;) except: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist uid {user.uid}, or error.&quot;) initUsers() . Created new uid toby Created new uid niko Created new uid lex Created new uid whit Created new uid indi Created new uid raven . Check for given Credentials in users table in sqlite.db . Use of ORM Query object and custom methods to identify user to credentials uid and password . Comment on purpose of following User.query.filter_by | user.password | | . def find_by_uid(uid): with app.app_context(): user = User.query.filter_by(_uid=uid).first() return user # returns user object # Check credentials by finding user and verify password def check_credentials(uid, password): # query email and return user record user = find_by_uid(uid) if user == None: return False if (user.is_password(password)): return True return False #check_credentials(&quot;indi&quot;, &quot;123qwerty&quot;) . Create a new User in table in Sqlite.db . Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following user.find_by_uid() and try/except | user = User(...) | user.dob and try/except | user.create() and try/except | | . def create(): # optimize user time to see if uid exists uid = input(&quot;Enter your user id:&quot;) user = find_by_uid(uid) try: print(&quot;Found n&quot;, user.read()) return except: pass # keep going # request value that ensure creating valid object name = input(&quot;Enter your name:&quot;) password = input(&quot;Enter your password&quot;) # Initialize User object before date user = User(name=name, uid=uid, password=password ) # create user.dob, fail with today as dob dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) try: user.dob = datetime.strptime(dob, &#39;%Y-%m-%d&#39;).date() except ValueError: user.dob = datetime.today() print(f&quot;Invalid date {dob} require YYYY-mm-dd, date defaulted to {user.dob}&quot;) # write object to database with app.app_context(): try: object = user.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {uid}&quot;) create() . Invalid date 2001-02-31 require YYYY-mm-dd, date defaulted to 03-16-2023 Created {&#39;id&#39;: 7, &#39;name&#39;: &#39;hi&#39;, &#39;uid&#39;: &#39;33&#39;, &#39;dob&#39;: &#39;03-16-2023&#39;, &#39;age&#39;: 0} . Reading users table in sqlite.db . Uses SQLALchemy query.all method to read data . Comment on purpose of following User.query.all | json_ready assignment, google List Comprehension | | . # SQLAlchemy extracts all users from database, turns each user into JSON def read(): with app.app_context(): table = User.query.all() json_ready = [user.read() for user in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready read() . [{&#39;id&#39;: 1, &#39;name&#39;: &#39;Thomas Edison&#39;, &#39;uid&#39;: &#39;toby&#39;, &#39;dob&#39;: &#39;02-11-1847&#39;, &#39;age&#39;: 176}, {&#39;id&#39;: 2, &#39;name&#39;: &#39;Nikola Tesla&#39;, &#39;uid&#39;: &#39;niko&#39;, &#39;dob&#39;: &#39;03-16-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 3, &#39;name&#39;: &#39;Alexander Graham Bell&#39;, &#39;uid&#39;: &#39;lex&#39;, &#39;dob&#39;: &#39;03-16-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 4, &#39;name&#39;: &#39;Eli Whitney&#39;, &#39;uid&#39;: &#39;whit&#39;, &#39;dob&#39;: &#39;03-16-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 5, &#39;name&#39;: &#39;Indiana Jones&#39;, &#39;uid&#39;: &#39;indi&#39;, &#39;dob&#39;: &#39;10-21-1920&#39;, &#39;age&#39;: 102}, {&#39;id&#39;: 6, &#39;name&#39;: &#39;Marion Ravenwood&#39;, &#39;uid&#39;: &#39;raven&#39;, &#39;dob&#39;: &#39;10-21-1921&#39;, &#39;age&#39;: 101}, {&#39;id&#39;: 7, &#39;name&#39;: &#39;hi&#39;, &#39;uid&#39;: &#39;33&#39;, &#39;dob&#39;: &#39;03-16-2023&#39;, &#39;age&#39;: 0}] . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Change blog to your own database. | Add additional CRUD Add Update functionality to this blog. | Add Delete functionality to this blog. | . | . # from random import randrange # from datetime import date # import os, base64 # import json # from sqlalchemy.exc import IntegrityError # from flask import Flask # from flask_sqlalchemy import SQLAlchemy # # Setup of key Flask object (app) # app = Flask(__name__) # # Setup SQLAlchemy object and properties for the database (db) # database = &#39;sqlite:///QA.db&#39; # path and filename of database # app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False # app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database # app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; # db = SQLAlchemy() # # This belongs in place where it runs once per project # db.init_app(app) # &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into Python shell and follow along &#39;&#39;&#39; # # Define the Post class to manage actions in &#39;posts&#39; table, with a relationship to &#39;users&#39; table # class Post(db.Model): # __tablename__ = &#39;posts&#39; # __table_args__ = {&#39;extend_existing&#39;: True} # # Define the Notes schema # id = db.Column(db.Integer, primary_key=True) # note = db.Column(db.Text, unique=False, nullable=False) # image = db.Column(db.String, unique=False) # # Define a relationship in Notes Schema to userID who originates the note, many-to-one (many notes to one user) # userID = db.Column(db.Integer, db.ForeignKey(&#39;qAs.id&#39;)) # # Constructor of a Notes object, initializes of instance variables within object # def __init__(self, id, note, image): # self.userID = id # self.note = note # self.image = image # # Returns a string representation of the Notes object, similar to java toString() # # returns string # def __repr__(self): # return &quot;Notes(&quot; + str(self.id) + &quot;,&quot; + self.note + &quot;,&quot; + str(self.userID) + &quot;)&quot; # # CRUD create, adds a new record to the Notes table # # returns the object added or None in case of an error # def create(self): # try: # # creates a Notes object from Notes(db.Model) class, passes initializers # db.session.add(self) # add prepares to persist person object to Notes table # db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit # return self # except IntegrityError: # db.session.remove() # return None # # CRUD read, returns dictionary representation of Notes object # # returns dictionary # def read(self): # # encode image # path = app.config[&#39;UPLOAD_FOLDER&#39;] # file = os.path.join(path, self.image) # file_text = open(file, &#39;rb&#39;) # file_read = file_text.read() # file_encode = base64.encodebytes(file_read) # return { # &quot;id&quot;: self.id, # &quot;userID&quot;: self.userID, # &quot;note&quot;: self.note, # &quot;image&quot;: self.image, # } # # Define the User class to manage actions in the &#39;users&#39; table # # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # # -- a.) db.Model is like an inner layer of the onion in ORM # # -- b.) User represents data we want to store, something that is built on db.Model # # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL # class QA(db.Model): # __tablename__ = &#39;qAs&#39; # table name is plural, class name is singular # __table_args__ = {&#39;extend_existing&#39;: True} # # Define the User schema with &quot;vars&quot; from object # id = db.Column(db.Integer, primary_key=True) # _question = db.Column(db.String(255), unique=False, nullable=False) # _correctAnswer = db.Column(db.String(255), unique=False, nullable=False) # _incorrectAnswer1 = db.Column(db.String(255), unique=False, nullable = False) # _incorrectAnswer2 = db.Column(db.String(255), unique=False, nullable = False) # _incorrectAnswer3 = db.Column(db.String(255), unique=False, nullable = False) # # Defines a relationship between User record and Notes table, one-to-many (one user to many notes) # posts = db.relationship(&quot;Post&quot;, cascade=&#39;all, delete&#39;, backref=&#39;users&#39;, lazy=True) # # constructor of a User object, initializes the instance variables within object (self) # def __init__(self, question, correctAnswer, incorrectAnswer1, incorrectAnswer2, incorrectAnswer3): # self._question = question # variables with self prefix become part of the object, # self._correctAnswer = correctAnswer # self._incorrectAnswer1 = incorrectAnswer1 # self._incorrectAnswer2 = incorrectAnswer2 # self._incorrectAnswer3 = incorrectAnswer3 # # a name getter method, extracts name from object # @property # def question(self): # return self._question # # a setter function, allows name to be updated after initial object creation # @question.setter # def question(self, name): # self._question = name # # a getter method, extracts email from object # @property # def correctAnswer(self): # return self._correctAnswer # # a setter function, allows name to be updated after initial object creation # @correctAnswer.setter # def correctAnswer(self, correctAnswer): # self._correctAnswer = correctAnswer # # check if uid parameter matches user id in object, return boolean # def is_uid(self, correctAnswer): # return self._correctAnswer == correctAnswer # # a getter method, extracts email from object # @property # def incorrectAnswer1(self): # return self._incorrectAnswer1 # # a setter function, allows name to be updated after initial object creation # @incorrectAnswer1.setter # def incorrectAnswer1(self, incorrectAnswer1): # self._incorrectAnswer1 = incorrectAnswer1 # # check if uid parameter matches user id in object, return boolean # def is_uid(self, incorrectAnswer1): # return self._incorrectAnswer1 == incorrectAnswer1 # @property # def incorrectAnswer2(self): # return self._incorrectAnswer2 # # a setter function, allows name to be updated after initial object creation # @incorrectAnswer2.setter # def incorrectAnswer2(self, incorrectAnswer2): # self._incorrectAnswer2 = incorrectAnswer2 # # check if uid parameter matches user id in object, return boolean # def is_uid(self, incorrectAnswer2): # return self._incorrectAnswer2 == incorrectAnswer2 # @property # def incorrectAnswer3(self): # return self._incorrectAnswer3 # # a setter function, allows name to be updated after initial object creation # @incorrectAnswer3.setter # def incorrectAnswer3(self, incorrectAnswer3): # self._incorrectAnswer3 = incorrectAnswer3 # # check if uid parameter matches user id in object, return boolean # def is_uid(self, incorrectAnswer3): # return self._incorrectAnswer3 == incorrectAnswer3 # # output content using str(object) in human readable form, uses getter # # output content using json dumps, this is ready for API response # def __str__(self): # return json.dumps(self.read()) # # CRUD create/add a new record to the table # # returns self or None on error # def create(self): # try: # # creates a person object from User(db.Model) class, passes initializers # db.session.add(self) # add prepares to persist person object to Users table # db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit # return self # except IntegrityError: # db.session.remove() # return None # # CRUD read converts self to dictionary # # returns dictionary # def read(self): # return { # #&quot;id&quot;: self.id, # &quot;question&quot;: self._question, # &quot;correctAnswer&quot;: self._correctAnswer, # &quot;incorrectAnswer1&quot;: self._incorrectAnswer1, # &quot;incorrectAnswer2&quot;: self._incorrectAnswer2, # &quot;incorrectAnswer3&quot;: self._incorrectAnswer3 # } # # CRUD update: updates user name, password, phone # # returns self # def update(self, question=&quot;&quot;, correctAnswer=&quot;&quot;, incorrectAnswer1 = &quot;&quot;, incorrectAnswer2 = &quot;&quot;, incorrectAnswer3 = &quot;&quot;): # &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; # if len(question) &gt; 0: # self.question = question # if len(correctAnswer) &gt; 0: # self.correctAnswer = correctAnswer # if len(incorrectAnswer1) &gt; 0: # self.incorrectAnswer1 = incorrectAnswer1 # if len(incorrectAnswer2) &gt; 0: # self.incorrectAnswer2 = incorrectAnswer2 # if len(incorrectAnswer3) &gt; 0: # self.incorrectAnswer3 = incorrectAnswer3 # db.session.commit() # return self # # CRUD delete: remove self # # None # def delete(self): # db.session.delete(self) # db.session.commit() # return None # &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # # Builds working data for testing # def initQAs(): # with app.app_context(): # &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; # db.create_all() # &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; # q1 = QA(question=&#39;What is a CPU?&#39;, correctAnswer=&#39;central processing unit&#39;, incorrectAnswer1 = &#39;coolant protection unit&#39;, incorrectAnswer2 = &#39;unit processor&#39;, incorrectAnswer3 = &#39;man idk&#39;) # q2 = QA(question=&#39;What does HTML stand for?&#39;, correctAnswer=&#39;Hypertext Markup Language&#39;, incorrectAnswer1 = &#39;Hyperlink Maker Language&#39;, incorrectAnswer2 = &#39;Hyper Mail Markup&#39;, incorrectAnswer3 = &#39;Humphrey Man Table Lawnmower&#39;) # q3 = QA(question=&#39;What do we use AWS for?&#39;, correctAnswer=&#39;Deployment&#39;, incorrectAnswer1 = &#39;Fortnite&#39;, incorrectAnswer2 = &#39;Minecraft&#39;, incorrectAnswer3 = &#39;Java&#39;) # q4 = QA(question=&#39;How do we access Linux on our machines?&#39;, correctAnswer=&#39;wsl&#39;, incorrectAnswer1 = &#39;pylance&#39;, incorrectAnswer2 = &#39;Mongodb&#39;, incorrectAnswer3 = &#39;ReactJS&#39;) # q5 = QA(question=&#39;Who is our teacher?&#39;, correctAnswer=&#39;mr. yeung&#39;, incorrectAnswer1 = &#39;jmort223&#39;, incorrectAnswer2 = &#39;nathanial kim&#39;, incorrectAnswer3 = &#39;sabine&#39;) # q6 = QA(question=&#39;What does FUBAR stand for?&#39;, correctAnswer=&#39;Funked up beyond repair&#39;, incorrectAnswer1 = &#39;Flipped u before reprimanding&#39;, incorrectAnswer2 = &#39;Family Under Bad Analogies Reviewed&#39;, incorrectAnswer3 = &#39;Fun Ultra Boat Also Rollerblades&#39;) # q7 = QA(question=&#39;How many sprints have we gone through this year?&#39;, correctAnswer=&#39;23&#39;, incorrectAnswer1 = &#39;1&#39;, incorrectAnswer2 = &#39;18&#39;, incorrectAnswer3 = &#39;52&#39;) # q8 = QA(question=&#39;Which is NOT an example of proper PII?&#39;, correctAnswer=&#39;Your car&#39;, incorrectAnswer1 = &#39;House address&#39;, incorrectAnswer2 = &#39;Bank codes&#39;, incorrectAnswer3 = &#39;Passwords&#39;) # q9 = QA(question=&#39;What do we use for our databases?&#39;, correctAnswer=&#39;SQLAlchemy&#39;, incorrectAnswer1 = &#39;XML&#39;, incorrectAnswer2 = &#39;MongoDB&#39;, incorrectAnswer3 = &#39;NodeJS&#39;) # q10 = QA(question=&#39;What would constitute as backend development?&#39;, correctAnswer=&#39;working with python to create things like a database.&#39;, incorrectAnswer1 = &#39;using HTML to create a webpage&#39;, incorrectAnswer2 = &#39;using CSS to style&#39;, incorrectAnswer3 = &#39;Deployment using a platform like AWS&#39;) # q11 = QA(question=&#39;What language is typically used in frontend development?&#39;, correctAnswer=&#39;HTML&#39;, incorrectAnswer1 = &#39;Python&#39;, incorrectAnswer2 = &#39;Assembly&#39;, incorrectAnswer3 = &#39;C-&#39;) # q12 = QA(question=&#39;What does AWS stand for?&#39;, correctAnswer=&#39;Amazon Web Services&#39;, incorrectAnswer1 = &#39;AWOOOOOOOGA&#39;, incorrectAnswer2 = &#39;Awsome Wall Seperator&#39;, incorrectAnswer3 = &#39;Amazonian World Services&#39;) # q13 = QA(question=&#39;Which of these are NOT one of the 4 roles assigned to us in CSP?&#39;, correctAnswer=&#39;Deployment Manager&#39;, incorrectAnswer1 = &#39;Frontend Developer&#39;, incorrectAnswer2 = &#39;Backend developer&#39;, incorrectAnswer3 = &#39;Scrum Master&#39;) # qAs = [q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13] # &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; # for qA in qAs: # try: # &#39;&#39;&#39;add a few 1 to 4 notes per user&#39;&#39;&#39; # for num in range(randrange(1, 4)): # note = &quot;#### &quot; + qA.question + &quot; note &quot; + str(num) + &quot;. n Generated by test data.&quot; # qA.posts.append(Post(id=qA.id, note=note, image=&#39;ncs_logo.png&#39;)) # &#39;&#39;&#39;add user/post data to table&#39;&#39;&#39; # qA.create() # except IntegrityError: # &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; # db.session.remove() # print(f&quot;Records exist, duplicate email, or error: {qA.correctAnswer}&quot;) # initQAs() # class _Create(Resource): # def post(self): # &#39;&#39;&#39; Read data for json body &#39;&#39;&#39; # body = request.get_json() # # &#39;&#39;&#39; Avoid garbage in, error checking &#39;&#39;&#39; # # # validate name # question = body.get(&#39;question&#39;) # # if question is None or len(question) &lt; 2: # # return {&#39;message&#39;: f&#39;Question is missing, or is less than 2 characters&#39;}, 400 # # # validate correct answer # correctAnswer = body.get(&#39;correctAnswer&#39;) # # if correctAnswer is None or len(correctAnswer) == 0: # # return {&#39;message&#39;: f&#39;answer is missing&#39;}, 400 # # &#39;&#39;&#39; #1: Key code block, setup USER OBJECT &#39;&#39;&#39; # # uo = User(question=question, # # correctAnswer=correctAnswer) # # # validate incorrect answers # incorrectAnswer1 = body.get(&#39;incorrectAnswer1&#39;) # # if incorrectAnswer1 is None or len(incorrectAnswer1) == 0: # # return {&#39;message&#39;: f&#39;answer is missing&#39;}, 400 # # &#39;&#39;&#39; #1: Key code block, setup USER OBJECT &#39;&#39;&#39; # # uo = User(question=question, # # incorrectAnswer1=incorrectAnswer1) # incorrectAnswer2 = body.get(&#39;incorrectAnswer2&#39;) # # if incorrectAnswer2 is None or len(incorrectAnswer2) == 0: # # return {&#39;message&#39;: f&#39;answer is missing&#39;}, 400 # # &#39;&#39;&#39; #1: Key code block, setup USER OBJECT &#39;&#39;&#39; # # uo = User(question=question, # # incorrectAnswer1=incorrectAnswer1, # # incorrectAnswer2=incorrectAnswer2) # incorrectAnswer3 = body.get(&#39;incorrectAnswer3&#39;) # # if incorrectAnswer3 is None or len(incorrectAnswer3) == 0: # # return {&#39;message&#39;: f&#39;answer is missing&#39;}, 400 # # &#39;&#39;&#39; #1: Key code block, setup USER OBJECT &#39;&#39;&#39; # uo = QA(question=question, # correctAnswer=correctAnswer, # incorrectAnswer1=incorrectAnswer1, # incorrectAnswer2=incorrectAnswer2, # incorrectAnswer3=incorrectAnswer3) # &#39;&#39;&#39; #2: Key Code block to add user to database &#39;&#39;&#39; # # create user in database # qA = uo.create() # # success returns json of user # if qA: # return jsonify(qA.read()) # # failure returns error # return {&#39;message&#39;: f&#39;Processed {question}, format error&#39;}, 400 # class _Read(Resource): # def get(self): # qAs = QA.query.all() # read/extract all users from database # random.shuffle(qAs) # qA = qAs[0] # # json_ready = [user.read() for user in users] # prepare output in json # return jsonify(qA.read()) # jsonify creates Flask response object, more specific to APIs than json.dumps .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/03/13/AP-unit2-4a.html",
            "relUrl": "/2023/03/13/AP-unit2-4a.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post18": {
            "title": "Unit 2.2 Data Compression, Images HACKS",
            "content": "from PIL import Image filename = &quot;images/SMILE.png&quot; filename2 = &quot;images/house.png&quot; filename3 = &quot;images/200px-ScratchCat-Small.png&quot; filename4 = &quot;images/2014FHDCover.png&quot; with Image.open(filename) as img: img.load() with Image.open(filename2) as img2: img2.load() with Image.open(filename3) as img3: img3.load() with Image.open(filename4) as img4: img4.load() type(img) isinstance(img, Image.Image) img.show() print(img.size) # Cropping cropped_img = img.crop((100, 250, 290, 300)) type(cropped_img) print(&quot;Cropped Image&quot;) print(cropped_img.size) cropped_img.show() # Transposing/Flipping print(&quot;ORIGINAL&quot;) img2.show() print(&quot;180 DEGREE FLIP&quot;) flipped_img = img2.transpose(Image.FLIP_TOP_BOTTOM) flipped_img.show() print(&quot;90 DEGREE FLIP&quot;) flipped_img2 = img2.transpose(Image.FLIP_LEFT_RIGHT) flipped_img2.show() # Rotating print(&quot;ORIGINAL&quot;) img3.show() print(&quot;ROTATED 45 DEGREES&quot;) rotated_img = img3.rotate(45, expand = True) rotated_img.show() # Color Grading print(&quot;ORIGINAL&quot;) img4.show() red, green, blue = img4.split() red.mode zeroed_band = red.point(lambda _: 0) red_merge = Image.merge( &quot;RGB&quot;, (red, zeroed_band, zeroed_band) ) green_merge = Image.merge( &quot;RGB&quot;, (zeroed_band, green, zeroed_band) ) blue_merge = Image.merge( &quot;RGB&quot;, (zeroed_band, zeroed_band, blue) ) print(&quot;RED TINT&quot;) red_merge.show() print(&quot;GREEN TINT&quot;) green_merge.show() print(&quot;BLUE TINT&quot;) blue_merge.show() . (474, 406) Cropped Image (190, 50) . ORIGINAL . 180 DEGREE FLIP . 90 DEGREE FLIP . ORIGINAL . ROTATED 45 DEGREES . ORIGINAL . RED TINT . GREEN TINT . BLUE TINT .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2025/2023/03/13/2-2-hacks.html",
            "relUrl": "/fastpages/jupyter/week%2025/2023/03/13/2-2-hacks.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post19": {
            "title": "Unit 2.3 Extracting Information from Data, Pandas",
            "content": "Files To Get . Save this file to your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/2023-03-09-AP-unit2-3.ipynb . Save these files into a subfolder named files in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/data.csv . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/grade.json . Save this image into a subfolder named images in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/images/table_dataframe.png . Pandas and DataFrames . In this lesson we will be exploring data analysis using Pandas. . College Board talks about ideas like Tools. &quot;the ability to process data depends on users capabilities and their tools&quot; | Combining Data. &quot;combine county data sets&quot; | Status on Data&quot;determining the artist with the greatest attendance during a particular month&quot; | Data poses challenge. &quot;the need to clean data&quot;, &quot;incomplete data&quot; | . | . From Pandas Overview -- When working with tabular data, such as data stored in spreadsheets or databases, pandas is the right tool for you. pandas will help you to explore, clean, and process your data. In pandas, a data table is called a DataFrame. | . . &#39;&#39;&#39;Pandas is used to gather data sets through its DataFrames implementation&#39;&#39;&#39; import pandas as pd . Cleaning Data . When looking at a data set, check to see what data needs to be cleaned. Examples include: . Missing Data Points | Invalid Data | Inaccurate Data | . Run the following code to see what needs to be cleaned . df = pd.read_json(&#39;files/grade.json&#39;) print(df) # What part of the data set needs to be cleaned? # From PBL learning, what is a good time to clean data? Hint, remember Garbage in, Garbage out? . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 2 578 12 2.78 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 6 145 12 2.95 7 167 10 3.90 8 235 9th Grade 3.15 9 nil 9 2.80 10 469 11 3.45 11 456 10 2.75 . Extracting Info . Take a look at some features that the Pandas library has that extracts info from the dataset . DataFrame Extract Column . print(df[[&#39;GPA&#39;]]) print() #try two columns and remove the index from print statement print(df[[&#39;Student ID&#39;,&#39;GPA&#39;]].to_string(index=False)) # the false removes tne index. . GPA 0 3.57 1 4.00 2 2.78 3 3.45 4 4.75 5 3.33 6 2.95 7 3.90 8 3.15 9 2.80 10 3.45 11 2.75 Student ID GPA 123 3.57 246 4.00 578 2.78 469 3.45 324 4.75 313 3.33 145 2.95 167 3.90 235 3.15 nil 2.80 469 3.45 456 2.75 . DataFrame Sort . print(df.sort_values(by=[&#39;GPA&#39;])) print() #sort the values in reverse order print(df.sort_values(by=[&#39;GPA&#39;], ascending=False)) # setting ascending to false makes it go by descending . Student ID Year in School GPA 11 456 10 2.75 2 578 12 2.78 9 nil 9 2.80 6 145 12 2.95 8 235 9th Grade 3.15 5 313 20 3.33 3 469 11 3.45 10 469 11 3.45 0 123 12 3.57 7 167 10 3.90 1 246 10 4.00 4 324 Junior 4.75 Student ID Year in School GPA 4 324 Junior 4.75 1 246 10 4.00 7 167 10 3.90 0 123 12 3.57 3 469 11 3.45 10 469 11 3.45 5 313 20 3.33 8 235 9th Grade 3.15 6 145 12 2.95 9 nil 9 2.80 2 578 12 2.78 11 456 10 2.75 . DataFrame Selection or Filter . print(df[df.GPA &gt; 3.00]) print(df[[&#39;Student ID&#39;, &#39;Year in School&#39;]]) . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 7 167 10 3.90 8 235 9th Grade 3.15 10 469 11 3.45 Student ID Year in School 0 123 12 1 246 10 2 578 12 3 469 11 4 324 Junior 5 313 20 6 145 12 7 167 10 8 235 9th Grade 9 nil 9 10 469 11 11 456 10 . DataFrame Selection Max and Min . print(df[df.GPA == df.GPA.max()]) print() print(df[df.GPA == df.GPA.min()]) . Student ID Year in School GPA 4 324 Junior 4.75 Student ID Year in School GPA 11 456 10 2.75 . Create your own DataFrame . Using Pandas allows you to create your own DataFrame in Python. . Python Dictionary to Pandas DataFrame . import pandas as pd #the data can be stored as a python dictionary dict = { &quot;calories&quot;: [420, 380, 390], &quot;duration&quot;: [50, 40, 45] } #stores the data in a data frame print(&quot;-Dict_to_DF&quot;) df = pd.DataFrame(dict) print(df) print(&quot;-Dict_to_DF_labels--&quot;) #or with the index argument, you can label rows. df = pd.DataFrame(dict, index = [&quot;day1&quot;, &quot;day2&quot;, &quot;day3&quot;]) print(df) . -Dict_to_DF calories duration 0 420 50 1 380 40 2 390 45 -Dict_to_DF_labels-- calories duration day1 420 50 day2 380 40 day3 390 45 . Examine DataFrame Rows . print(&quot;-Examine Selected Rows&quot;) #use a list for multiple labels: print(df.loc[[&quot;day1&quot;, &quot;day3&quot;]]) #refer to the row index: print(&quot;--Examine Single Row--&quot;) print(df.loc[&quot;day1&quot;]) . -Examine Selected Rows calories duration day1 420 50 day3 390 45 --Examine Single Row-- calories 420 duration 50 Name: day1, dtype: int64 . Pandas DataFrame Information . print(df.info()) . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; Index: 3 entries, day1 to day3 Data columns (total 2 columns): # Column Non-Null Count Dtype -- -- 0 calories 3 non-null int64 1 duration 3 non-null int64 dtypes: int64(2) memory usage: 180.0+ bytes None . Example of larger data set . Pandas can read CSV and many other types of files, run the following code to see more features with a larger data set . import pandas as pd #read csv and sort &#39;Duration&#39; largest to smallest df = pd.read_csv(&#39;files/data.csv&#39;).sort_values(by=[&#39;Duration&#39;], ascending=False) print(&quot;--Duration Top 10&quot;) print(df.head(10)) print(&quot;--Duration Bottom 10&quot;) print(df.tail(10)) . --Duration Top 10 Duration Pulse Maxpulse Calories 69 300 108 143 1500.2 79 270 100 131 1729.0 109 210 137 184 1860.4 60 210 108 160 1376.0 106 180 90 120 800.3 90 180 101 127 600.1 65 180 90 130 800.4 61 160 110 137 1034.4 62 160 109 135 853.0 67 150 107 130 816.0 --Duration Bottom 10 Duration Pulse Maxpulse Calories 68 20 106 136 110.4 100 20 95 112 77.7 89 20 83 107 50.3 135 20 136 156 189.0 94 20 150 171 127.4 95 20 151 168 229.4 139 20 141 162 222.4 64 20 110 130 131.4 112 15 124 139 124.2 93 15 80 100 50.5 . APIs are a Source for Writing Programs with Data . 3rd Party APIs are a great source for creating Pandas Data Frames. . Data can be fetched and resulting json can be placed into a Data Frame | Observe output, this looks very similar to a Database | . &#39;&#39;&#39;Pandas can be used to analyze data&#39;&#39;&#39; import pandas as pd import requests def fetch(): &#39;&#39;&#39;Obtain data from an endpoint&#39;&#39;&#39; url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot; fetch = requests.get(url) json = fetch.json() # filter data for requirement df = pd.DataFrame(json[&#39;countries_stat&#39;]) # filter endpoint for country stats print(df.loc[0:5, &#39;country_name&#39;:&#39;deaths&#39;]) # show row 0 through 5 and columns country_name through deaths fetch() . country_name cases deaths 0 USA 82,649,779 1,018,316 1 India 43,057,545 522,193 2 Brazil 30,345,654 662,663 3 France 28,244,977 145,020 4 Germany 24,109,433 134,624 5 UK 21,933,206 173,352 . Hacks . Early Seed award . Add this Blog to you own Blogging site. | Have all lecture files saved to your files directory before Tech Talk starts. Have data.csv open in vscode. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In blog add College Board practice problems for 2.3. | . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Amazing. . | When choosing a data set, think about the following... . Does it have a good sample size? | Is there bias in the data? | Does the data set need to be cleaned? | What is the purpose of the data set? | ... | . | Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.) . | . &#39;&#39;&#39;Pandas can be used to analyze data&#39;&#39;&#39; import pandas as pd import requests import math def fetch(): &#39;&#39;&#39;Obtain data from an endpoint&#39;&#39;&#39; url = &quot;https://nashcsp.duckdns.org/api/trivia/&quot; fetch = requests.get(url) json = fetch.json() df = pd.DataFrame([json]) print(df) fetch() #read csv and sort &#39;Duration&#39; largest to smallest df = pd.DataFrame(pd.read_csv(&#39;files/games.csv&#39;).sort_values(by=[&#39;date_release&#39;], ascending= True)) df2 = pd.DataFrame(pd.read_csv(&#39;files/games.csv&#39;).sort_values(by=[&#39;date_release&#39;], ascending= False)) df3 = pd.DataFrame(pd.read_csv(&#39;files/games.csv&#39;).sort_values(by=[&#39;date_release&#39;])) print(&quot;-Top 3 Oldest Steam Games-&quot;) print(df[[&#39;date_release&#39;, &#39;title&#39;]].head(3)) print(&quot;-Top 3 Newest Steam Games-&quot;) print(df2[[&#39;date_release&#39;, &#39;title&#39;]].head(3)) print(&quot;-Average Steam Game Price-&quot;) print(&quot;$&quot; + str(df3[&quot;price_original&quot;].mean())) print(&quot;-Average Steam Game Price Rounded-&quot;) print(&quot;$&quot; + str(math.floor(df3[&quot;price_original&quot;].mean()))) print(&quot;-Most Expensive Steam Game-&quot;) print(&quot;$&quot; + str(math.floor(df3[&quot;price_original&quot;].max()))) . correctAnswer incorrectAnswer1 incorrectAnswer2 incorrectAnswer3 0 Deployment Fortnite Minecraft Java question 0 what do we use AWS for? -Top 3 Oldest Steam Games- date_release title 16051 1997-06-30 Carmageddon Max Pack 32559 1997-11-14 POSTAL 10014 1998-11-08 Half-Life -Top 3 Newest Steam Games- date_release title 30782 2023-04-27 Omega Strikers 13035 2023-02-28 Destiny 2: Lightfall 26217 2023-02-28 Destiny 2: Lightfall + Annual Pass -Average Steam Game Price- $9.299007771116546 -Average Steam Game Price Rounded- $9 -Most Expensive Steam Game- $299 . Hack Helpers . Here is how Mort started on this assignment by asking ChatGPT ... Regarding Python Pandas, what are some data sets that would be good for learning Pandas? . There are many data sets that are suitable for learning pandas, depending on your interests and the skills you want to develop. . Here are some suggestions... . Titanic Dataset:This is a classic dataset for data analysis and machine learning, and is often used as an introduction to pandas. The dataset contains information about passengers on the Titanic, including their demographics, ticket class, and survival status. | Iris Dataset: This is another classic dataset that is often used in machine learning and data analysis courses. The dataset contains information about iris flowers, including their sepal length, sepal width, petal length, and petal width. . | NBA Player Stats: This dataset contains information about NBA players, including their stats for various games, their positions, and their salaries. It is a great dataset for learning how to clean and manipulate data using pandas. . | Housing Prices Dataset: This dataset contains information about housing prices in a particular city or region, including variables such as the number of bedrooms, square footage, and price. It is a great dataset for learning how to manipulate and analyze numerical data using pandas. . | COVID-19 Dataset: This dataset contains information about the COVID-19 pandemic, including the number of cases, deaths, and recoveries in various countries and regions. It is a great dataset for learning how to manipulate and analyze time-series data using pandas. . | World Bank Dataset: This dataset contains information about economic indicators from various countries, such as GDP, population, and poverty rates. It is a great dataset for learning how to manipulate and analyze large datasets using pandas. . | . | . These are just a few examples of the many datasets that are suitable for learning pandas. The best dataset for you will depend on your interests and the specific skills you want to develop. . Follow up question, &quot;where can I find Titanic data set?&quot; . | The Titanic dataset is a popular dataset for data analysis and machine learning, and it can be found on various websites and data repositories. Here are a few places where you can find the Titanic dataset... . Kaggle:The Titanic dataset is available on Kaggle, which is a popular platform for data scientists and machine learning enthusiasts. You can download the dataset from the Kaggle website after creating an account. | UCI Machine Learning Repository: The Titanic dataset is also available on the UCI Machine Learning Repository, which is a collection of datasets that are commonly used for machine learning research. You can download the dataset from the UCI Machine Learning Repository website. . | Seaborn library: If you have the Seaborn library installed in your Python environment, you can load the Titanic dataset directly from the library using the following code: . import seaborn as sns titanic_data = sns.load_dataset(&#39;titanic&#39;) . | . | . Titanic Data . Look at a sample of data. . import seaborn as sns # Load the titanic dataset titanic_data = sns.load_dataset(&#39;titanic&#39;) print(&quot;Titanic Data&quot;) print(titanic_data.columns) # titanic data set print(titanic_data[[&#39;survived&#39;,&#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;class&#39;, &#39;fare&#39;, &#39;embark_town&#39;]]) # look at selected columns . Titanic Data Index([&#39;survived&#39;, &#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;fare&#39;, &#39;embarked&#39;, &#39;class&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;deck&#39;, &#39;embark_town&#39;, &#39;alive&#39;, &#39;alone&#39;], dtype=&#39;object&#39;) survived pclass sex age sibsp parch class fare 0 0 3 male 22.0 1 0 Third 7.2500 1 1 1 female 38.0 1 0 First 71.2833 2 1 3 female 26.0 0 0 Third 7.9250 3 1 1 female 35.0 1 0 First 53.1000 4 0 3 male 35.0 0 0 Third 8.0500 .. ... ... ... ... ... ... ... ... 886 0 2 male 27.0 0 0 Second 13.0000 887 1 1 female 19.0 0 0 First 30.0000 888 0 3 female NaN 1 2 Third 23.4500 889 1 1 male 26.0 0 0 First 30.0000 890 0 3 male 32.0 0 0 Third 7.7500 embark_town 0 Southampton 1 Cherbourg 2 Southampton 3 Southampton 4 Southampton .. ... 886 Southampton 887 Southampton 888 Southampton 889 Cherbourg 890 Queenstown [891 rows x 9 columns] . Use Pandas to clean the data. Most analysis, like Machine Learning or even Pandas in general like data to be in standardized format. This is called &#39;Training&#39; or &#39;Cleaning&#39; data. . # Preprocess the data from sklearn.preprocessing import OneHotEncoder td = titanic_data td.drop([&#39;alive&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;class&#39;, &#39;embark_town&#39;, &#39;deck&#39;], axis=1, inplace=True) td.dropna(inplace=True) td[&#39;sex&#39;] = td[&#39;sex&#39;].apply(lambda x: 1 if x == &#39;male&#39; else 0) td[&#39;alone&#39;] = td[&#39;alone&#39;].apply(lambda x: 1 if x == True else 0) # Encode categorical variables enc = OneHotEncoder(handle_unknown=&#39;ignore&#39;) enc.fit(td[[&#39;embarked&#39;]]) onehot = enc.transform(td[[&#39;embarked&#39;]]).toarray() cols = [&#39;embarked_&#39; + val for val in enc.categories_[0]] td[cols] = pd.DataFrame(onehot) td.drop([&#39;embarked&#39;], axis=1, inplace=True) td.dropna(inplace=True) print(td) . survived pclass sex age sibsp parch fare alone embarked_C 0 0 3 1 22.0 1 0 7.2500 0 0.0 1 1 1 0 38.0 1 0 71.2833 0 1.0 2 1 3 0 26.0 0 0 7.9250 1 0.0 3 1 1 0 35.0 1 0 53.1000 0 0.0 4 0 3 1 35.0 0 0 8.0500 1 0.0 .. ... ... ... ... ... ... ... ... ... 705 0 2 1 39.0 0 0 26.0000 1 0.0 706 1 2 0 45.0 0 0 13.5000 1 0.0 707 1 1 1 42.0 0 0 26.2875 1 0.0 708 1 1 0 22.0 0 0 151.5500 1 0.0 710 1 1 0 24.0 0 0 49.5042 1 1.0 embarked_Q embarked_S 0 0.0 1.0 1 0.0 0.0 2 0.0 1.0 3 0.0 1.0 4 0.0 1.0 .. ... ... 705 0.0 1.0 706 0.0 1.0 707 1.0 0.0 708 0.0 1.0 710 0.0 0.0 [564 rows x 11 columns] . The result of &#39;Training&#39; data is making it easier to analyze or make conclusions. In looking at the Titanic, as you clean you would probably want to make assumptions on likely chance of survival. . This would involve analyzing various factors (such as age, gender, class, etc.) that may have affected a person&#39;s chances of survival, and using that information to make predictions about whether an individual would have survived or not. . Data description:- Survival - Survival (0 = No; 1 = Yes). Not included in test.csv file. - Pclass - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd) . Name - Name | Sex - Sex | Age - Age | Sibsp - Number of Siblings/Spouses Aboard | Parch - Number of Parents/Children Aboard | Ticket - Ticket Number | Fare - Passenger Fare | Cabin - Cabin | Embarked - Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton) | . | Perished Mean/Average . | . print(titanic_data.query(&quot;survived == 0&quot;).mean()) . survived 0.000000 pclass 2.464072 sex 0.844311 age 31.073353 sibsp 0.562874 parch 0.398204 fare 24.835902 alone 0.616766 embarked_C 0.185629 embarked_Q 0.038922 embarked_S 0.775449 dtype: float64 . Survived Mean/Average | . print(td.query(&quot;survived == 1&quot;).mean()) . survived 1.000000 pclass 1.878261 sex 0.326087 age 28.481522 sibsp 0.504348 parch 0.508696 fare 50.188806 alone 0.456522 embarked_C 0.152174 embarked_Q 0.034783 embarked_S 0.813043 dtype: float64 . Survived Max and Min Stats . print(td.query(&quot;survived == 1&quot;).max()) print(td.query(&quot;survived == 1&quot;).min()) . survived 1.0000 pclass 3.0000 sex 1.0000 age 80.0000 sibsp 4.0000 parch 5.0000 fare 512.3292 alone 1.0000 embarked_C 1.0000 embarked_Q 1.0000 embarked_S 1.0000 dtype: float64 survived 1.00 pclass 1.00 sex 0.00 age 0.75 sibsp 0.00 parch 0.00 fare 0.00 alone 0.00 embarked_C 0.00 embarked_Q 0.00 embarked_S 0.00 dtype: float64 . Machine Learning Visit Tutorials Point . Scikit-learn (Sklearn) is the most useful and robust library for machine learning in Python. It provides a selection of efficient tools for machine learning and statistical modeling including classification, regression, clustering and dimensionality reduction via a consistence interface in Python. . Description from ChatGPT. The Titanic dataset is a popular dataset for data analysis and machine learning. In the context of machine learning, accuracy refers to the percentage of correctly classified instances in a set of predictions. In this case, the testing data is a subset of the original Titanic dataset that the decision tree model has not seen during training......After training the decision tree model on the training data, we can evaluate its performance on the testing data by making predictions on the testing data and comparing them to the actual outcomes. The accuracy of the decision tree classifier on the testing data tells us how well the model generalizes to new data that it hasn&#39;t seen before......For example, if the accuracy of the decision tree classifier on the testing data is 0.8 (or 80%), this means that 80% of the predictions made by the model on the testing data were correct....Chance of survival could be done using various machine learning techniques, including decision trees, logistic regression, or support vector machines, among others. . | Code Below prepares data for further analysis and provides an Accuracy. IMO, you would insert a new passenger and predict survival. Datasets could be used on various factors like prediction if a player will hit a Home Run, or a Stock will go up or down. . Decision Trees, prediction by a piecewise constant approximation. | Logistic Regression, the probabilities describing the possible outcomes. | . | . from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeClassifier from sklearn.linear_model import LogisticRegression from sklearn.metrics import accuracy_score # Split arrays or matrices into random train and test subsets. X = td.drop(&#39;survived&#39;, axis=1) y = td[&#39;survived&#39;] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) # Train a decision tree classifier dt = DecisionTreeClassifier() dt.fit(X_train, y_train) # Test the model y_pred = dt.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;DecisionTreeClassifier Accuracy:&#39;, accuracy) # Train a logistic regression model logreg = LogisticRegression() logreg.fit(X_train, y_train) # Test the model y_pred = logreg.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;LogisticRegression Accuracy:&#39;, accuracy) . DecisionTreeClassifier Accuracy: 0.7705882352941177 LogisticRegression Accuracy: 0.788235294117647 . /Users/johnmortensen/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1): STOP: TOTAL NO. of ITERATIONS REACHED LIMIT. Increase the number of iterations (max_iter) or scale the data as shown in: https://scikit-learn.org/stable/modules/preprocessing.html Please also refer to the documentation for alternative solver options: https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression n_iter_i = _check_optimize_result( .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/03/09/AP-unit2-3.html",
            "relUrl": "/2023/03/09/AP-unit2-3.html",
            "date": " • Mar 9, 2023"
        }
        
    
  
    
        ,"post20": {
            "title": "Unit 2.2 Data Compression, Images",
            "content": "Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. - Clouds Impression . Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab | Size, height and width, number of pixels | Visual perception, lossy compression | . Python Libraries and Concepts used for Jupyter and Files/Directories . Introduction to displaying images in Jupyter notebook . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? | What are the command you use in Windows terminal to access files? | What are some of the major differences? | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? | How does the meta data source and label relate to Unit 5 topics? | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Happy Face&quot;, &#39;file&#39;: &quot;SMILE.png&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image # green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Happy Face&quot;, &#39;file&#39;: &quot;SMILE.png&quot;}]) # image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal? . Translate first 3 letters of your name to Base64. | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering? | From your consumer experience, what effects have you experienced from buffering? | How do these effects apply to images? | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? | Describe Grey Scale algorithm in English or Pseudo code? | Describe scale image? What is before and after on pixels in three images? | Is scale image a type of compression? If so, line it up with College Board terms described? | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Happy Face&quot;, &#39;file&#39;: &quot;SMILE.png&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.e[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . - meta data -- Happy Face Internet JPEG RGB Original size: (474, 406) Scaled size: (320, 274) -- original image -- . grey image - . . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL, or Python Image Library is a | numpy | base64 | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Happy Face&quot;, &#39;file&#39;: &quot;SMILE.png&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . - meta data -- Happy Face Internet SMILE.png JPEG RGB Original size: (474, 406) Scaled size: (320, 274) -- scaled image -- . grey image . . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2025/2023/03/07/AP-unit2.html",
            "relUrl": "/fastpages/jupyter/week%2025/2023/03/07/AP-unit2.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post21": {
            "title": "Title",
            "content": "from random import * def randomnum(): # function for generating random int x = randint(0,255) def convert(dec): x = dec i = 7 bin = [] while i &gt;= 0: if (x - 2 ** i) &gt;= 0: bin.append(1) i -= 1 else: bin.append(0) x -= 2**i i -= 1 print(bin) def survivors(): # function to assign position survivorList = [&quot;Jiya&quot;, &quot;Shruthi&quot;, &quot;Noor&quot;, &quot;Ananya&quot; , &quot;Peter Parker&quot;, &quot;Andrew Garfield&quot;, &quot;Tom Holland&quot;, &quot;Tobey Maguire&quot;] survivorChance = convert(randomnum()) return[survivorList[i] for i in range(8) if survivorChance[i] == 1] # replace the names above with your choice of people in the house def currentSurvivors(newSurvivors): newsurvivors = survivorList print(&quot;The survivors of the apocalypse are...&quot;) for i in survivorList: print(&quot; t - {}&quot;.format(i)) survivorList = survivors() currentSurvivors(survivorList) . import getpass, sys QUESTIONS = { &quot;What is used to create parameters in Python?&quot;: [ &quot;def&quot;, &quot;define&quot; ], &quot;Where are the secrets stored in your VSCode?&quot;: [ &quot;_config.yml&quot;, &quot;config.yml&quot;, &quot;config&quot; ], &quot;True or false: We can use docx files in our Fastpages site?&quot;: [ &quot;true&quot;, &quot;false&quot;, &quot;what in the world is docx?&quot; ], &quot;True or false: Static Text often changes when you run code&quot;: [ &quot;false&quot;, &quot;true&quot;, &quot;idk&quot; ], &quot;True or false: A sequence of code is only used on the AP exam and it is used to refer to mulitple lines of code&quot;: [ &quot;false&quot;, &quot;true&quot;, &quot;what&#39;s a sequence?&quot; ], &quot;Can we get an A in this class AND keep our sanity?&quot;: [ &quot;no&quot;, &quot;yes&quot;, &quot;maybe&quot; ], &quot;What is the syntax for remotely opening a file in VSCode from Terminal?&quot;: [ &quot;code .&quot;, &quot;Code.&quot;, &quot;. Code&quot; &quot;code.&quot; ], &quot;What do we call the defining parameters we set at the top of a markdown file or jupyter notebook?&quot;: [ &quot;front matter&quot;, &quot;define&quot; ], &quot;What is the name of the piece of code that lets you access and bring in other people&#39;s code?&quot;: [ &quot;import&quot;, &quot;port&quot;, &quot;rejuvenate&quot; ], &quot;What is the teacher&#39;s social security number?&quot;: [ &quot;how is that relevant&quot;, &quot;idk&quot;, &quot;why is this even a question&quot;, &quot;5014&quot; ], } for question, alternatives in QUESTIONS.items(): correct_answer = alternatives[0] for alternative in sorted(alternatives): print(f&quot; - {alternative}&quot;) answer = input(f&quot;{question}? &quot;) if answer == correct_answer: print(&quot;yay you got it right! here&#39;s your bronze medal!&quot;) else: print(f&quot;LOL imagine getting it wrong. The correct answer was {correct_answer!r}, not {answer!r}&quot;) .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/03/06/otherThings.html",
            "relUrl": "/2023/03/06/otherThings.html",
            "date": " • Mar 6, 2023"
        }
        
    
  
    
        ,"post22": {
            "title": "Title",
            "content": "dataset = { &#39;DelNorte&#39;:{ &#39;Westview&#39;:15, &#39;MtCarmel&#39;:20, &#39;Poway&#39;:35, &#39;RanchoBernrdo&#39;:50 }, &#39;Westview&#39;:{ &#39;DelNorte&#39;:15, &#39;MtCarmel&#39;:35, &#39;Poway&#39;:25, &#39;RanchoBernrdo&#39;: 45 }, &#39;MtCarmel&#39;:{ &#39;Westview&#39;:35, &#39;DelNorte&#39;:20, &#39;Poway&#39;:40, &#39;RanchoBernrdo&#39;:30 }, &#39;Poway&#39;:{ &#39;Westview&#39;:25, &#39;MtCarmel&#39;:40, &#39;DelNorte&#39;:35, &#39;RanchoBernrdo&#39;:15 }, &#39;RanchoBernardo&#39;:{ &#39;Westview&#39;:45, &#39;MtCarmel&#39;:30, &#39;Poway&#39;:15, &#39;DelNorte&#39;:50 } } def fastestroute(start,data): drivetime = 0 order = [] for key1, value1 in dataset.items(): print(&quot;key1&quot;, key1, &quot;value1&quot;, value1) print(value1) temp = &quot;&quot; temp += key1 lowestValue = 0 for key2, value2 in value1.items(): print(&quot;value2&quot;, value2) if lowestValue == 0: lowestValue = value2 if value2 &lt;= lowestValue: lowestValue = value2 drivetime = drivetime + lowestValue lowestKey = key2 order.append(key2) print(&quot;Lowest Value is:&quot;, lowestValue) print(&quot;Drivetime:&quot;, drivetime) print(&quot;Lowest Key&quot;, lowestKey) print(order) return(drivetime,order) dataset[&#39;start&#39;] for data in dataset: print(drivetime, order) def nested_dict_values_iterator(data): for value in data.values(): if isinstance(value, dict): for v in nested_dict_values_iterator(value): yield v else: yield value #for value in nested_dict_values_iterator(dataset): # print(value) def fastestroute2(start, data): drivetime = 0 order = [] order.append(start) global lowestKey lowestKey = start for i in dataset: #print(&quot;Dataset&quot;, dataset[i]) #print(&quot;data i: &quot;, data[i].keys()) #print(data[i].values()) #print(&quot;Data Poway&quot;, data[&#39;Poway&#39;]) for key2, value2 in dataset.items(): key2 = lowestKey print(&quot;First Dictionary key2&quot;, key2, &quot;value2&quot;, value2) #print(value2) temp = &quot;&quot; temp += key2 lowestValue = 0 for key2, value2 in value2.items(): print(&quot;Second Dictionary key2&quot;, key2) print(&quot;value2&quot;, value2) if lowestValue == 0: lowestValue = value2 if value2 &lt;= lowestValue and key2 not in order: lowestValue = value2 drivetime = drivetime + lowestValue lowestKey = key2 print(&quot;Lowest key inside Second Dictionary : &quot;, lowestKey) # check if key is not already in order[] if key2 not in order: order.append(key2) print(&quot;Lowest Value is:&quot;, lowestValue) print(&quot;Drivetime:&quot;, drivetime) print(&quot;Lowest Key&quot;, lowestKey) print(order) return(drivetime,order) start = &#39;DelNorte&#39; fastestroute2(start,dataset) # &#39;dataset&#39; is the name of the nested key value pair #fastestroute(start,dataset) #print(data) # print(data, dataset[data]) #print(dataset.values()) #min(dataset, key=dataset.get) #print(dataset.values()) #print(max(dataset.values())) .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/03/06/dictBackup.html",
            "relUrl": "/2023/03/06/dictBackup.html",
            "date": " • Mar 6, 2023"
        }
        
    
  
    
        ,"post23": {
            "title": "Collegeboard MCQ 3 Corrections/Reflection",
            "content": "Proof of Completion: . . Test Corrections: . Question 21: . The correct answer was actually C, as this code is flawed due to the nature of the FOR EACH loop. The way this is strucutred, the first term is actually added up twice. Since the first term in this case is 0, the sum is not affected, as you are simply adding 0 twice. However any non-zero starting point would alter the sum and mess everything up. I failed to see this and that is why I clicked A. . Question 22: . To be honest, I completely missed the bottom code block and the fact that it is not nested, so it should run after it checks for rotating left and right. My original logic was that it would always just keep on rotating, but after further examining the code, I can see why this is not the case. However, for grid 2, the code won’t work because there are two paths for the computer to go, and it chooses to go right instead of left due to the ordering of the code blocks. . Question 29: . I did not understand this problem all that well, and I am still sort of unfamiliar with the way Collegeboard psuedocode assigns variables. However from what I can gather, the first three statements assign values to the variables. The fourth statement assigns the value of (NOT (a OR b)) AND c to a. Since a OR b is true, NOT (a OR b) is false, so (NOT (a OR b)) AND c is false. The fifth statement assigns the value of c AND a to c. Since a is now false, c AND a is false. The last three statements display the values of the variables. . Question 33: . To be honest this was a dumb error. I thought that by repeat once it meant that it would .,run once, then repeat one more time, however I missed that the code running once counts as ONE repeat. Just a nomenclature error but I had the same idea as the correct answer, so not much to correct here. . Reflection . I believe I am getting much stronger at some of the logic questions, however there are still some technicalities that got me this time around. The wording was very strange on some of these problems, but overall I am starting to see myself achieving mastery on most of these topics. .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2020/2023/03/05/cbFinal3.html",
            "relUrl": "/fastpages/jupyter/week%2020/2023/03/05/cbFinal3.html",
            "date": " • Mar 5, 2023"
        }
        
    
  
    
        ,"post24": {
            "title": "Performance Task Grading 3",
            "content": "Response . 3a . 3.a.i . The purpose of this program is to help quiz users about CS and to help them learn different pieces of information relevant to the subject. . 3.a.ii . The video showcases my program, which encompasses the following. The program displays the score, the question, and the list of options. The list of options is pulled from a backend API that has the question, answer, and incorrect answers. If the option clicked and submitted has the same text as the correct answer it will add 1 point. If the user hits submit without clicking anything, the program will prompt the user to click an option. If an incorrect answer was clicked, the program will alert the user about what the right answer was and restart the game. If 10 questions are answered correctly consecutively, than the program will return “You Win!” . 3.a.iii . The input and output of this program, as showcased in my video, is based around the various buttons that are on the screen. The user clicks an option, then clicks submit. The program will then check whether or not the answer is correct. After doing this, the program will output whether or not the user got the answer right, then it will either add a point and load the next question or alert the user about what the right answer is and restart the game. . 3b . 3.b.i . . 3.b.ii . Once the API data is recieved it displays the data with this code snippit. . 3.b.iii . The program pulls correctAnswer, incorrectAnswer1, incorrectAnswer2, incorrectAnswer3, and question from the nested list (qAs) that the backend stores (as shown in image 1), and once the API data is recieved it displays the data with the showQuestion() function, as shown in image 2. . 3.b.iv . The data in the list represents the different questions that could be shown to the user. . 3.b.v . The nested list here manages complexity because it keeps all the question data very neatly organized, and it stores each question (each of which have attributes), with a variable. Then, it just plugs in those variables into another list. Without this system, not only would the code be much messier, but it may not even function, as the attributes are being stored in an sqlite table. Incorrect formmating and not using best practice here would destroy the sqlite table. If one wanted to add another question to the pool of possible questions, they would simply need to create another variable with the attributes, then plug said variable into the qAs list. . 3c . 3.c.i . . 3.c.ii . . 3.c.iii . The procedure checkAnswer is responsible for validating the user input, and whether or not an answer was even clicked before submitting. This is important for the program because this is what validates garbage and what distinguishes good input from bad input. This also is a core mechanic of the game, as the user must get 10 questions right consecutively to win. . 3.c.iv . The procedure starts by checking whether or not an answer was clicked, if false, the procedure will immediately output “Please click an option.”, if an option is selected then the procedure will check exactly what was selected and submitted. If the input is equal to the correct answer as defined in the API, then it will return “Correct Answer”, and it will add 1 point to the total score, it will then load the next random question. If the input is incorrect, then the procedure will return an output of “Wrong Answer! Correct Answer: * insert correct answer here *.” The procedure will then restart the game. . 3d . 3.d.i . showing calls being made (take before and after screenshots of clicking and showing answrs) . 3.d.ii . What’s being tested in these calls is the validity of the user’s answer. If the answer submitted is the same as correctAnswer in the API, a point is given and a new question is loaded. If the answer is incorrect, the procedure will return an output of “Wrong Answer! Correct Answer: * insert correct answer here *.” The procedure will then restart the game. . 3.diii . result of said calls .",
            "url": "https://h4seeb-cmd.github.io/turtle/week%2024/2023/02/25/fp-reflection.html",
            "relUrl": "/week%2024/2023/02/25/fp-reflection.html",
            "date": " • Feb 25, 2023"
        }
        
    
  
    
        ,"post25": {
            "title": "N@tM Notes!",
            "content": "Computer Science Principles . Toby, Dash, Gene, Kalani, Parav . This group created an arcade. They included a basic login API, with basic DB functionality. The only game that is up is the chess game, and it uses an API that keeps track of games and game pushes move to API, the API then cross-references the moves stored based on the position currently, and updates it on the screen. . Vardaan Justin, Navan . This group created a news website. They added a sports section that updates based on breaking news, and they created an “On This Day in History” section, and it reads from past records. . Aliya, AJ, Drew, Taneesha . This group created a website that lets the user book out a fictional cafe, called Cafe Gato. They have an events page that lets you book the cafe out during certain hours. They let users see what times are taken and free by using a DB and table. This group also created a Wordle game that uses a dictionary-formatted API that has words in a DB. They also have a review page that lets you comment on your experience with the cafe. . Trey Blalock . Made a character showcase for video game with an email database and the ability to sign up for email promos after they have been sent to the database. They have pictures of their planned characters on some sort of database. . Sarah, Vivian, Shreya, Giannnia . Car finsing page, has a car filter page to filter by various parameters, specs page in a quiz format, wishlist to keep cars that are liked by the users. . Team Jamal . Account creation page, with a personaliy guide, gives a personality updates database with that data. Garbage collection and the use of a javascript framework. . Qais, James, Krishiv, Caleb . Rental house service, parameter to filter through saved houses, also showes geographical location of houses, can make a schedule of which houses they are viewing . Ellie, Haeryn, Kaylee, Theo . Dog adoption page personality matches to a specfic dog and finds you a conpatible dog, with the ability to add the dog to the cart, blog about personal, dog health diagnosis utility. . 3d animation . This donut photo was basically the gist of everything there. There were lots and lots of donuts for some reason. . Photo . Out of all of the photos I’ve seen in that room, this was probably my favorite. The color grading, quality of the photo, and overall mastery of the camera really shines here. . AP Studio Art . Overall, the AP . Ceramics: . Collections of pots and animals, along with creative submissions from wizards, whales, decrotives vases and flower pots. Along with spoon sets whatever seems to have been of interest. . Drawing &amp; Painting . Patels, hand drawn scetches from snowmen to portraits a depiction of the artists emotions and ideas. From wildlife to stamps, posters, truly reflecting the ideas amd desires of students. .",
            "url": "https://h4seeb-cmd.github.io/turtle/week%2024/2023/02/25/NATM-notes-2.html",
            "relUrl": "/week%2024/2023/02/25/NATM-notes-2.html",
            "date": " • Feb 25, 2023"
        }
        
    
  
    
        ,"post26": {
            "title": "Big Idea 5.6!",
            "content": "Personal Identifiable Information (PII) . PII is information that can be used to identify a user. PII can be made up of a variety of different kinds of data, including names, addresses, phone numbers, email addresses, passwords, bank codes, and more. PII can also include information about a person’s health, locaiton, etc. In our projects we used a database in order to store user data. This data can be seen as PII. We have also seen personal information when signing up for services that we use such as accounts for Microsoft, Google, Amazon, etc, which store emails, phone numbers, often address and other information while setting up the tools that we use to create our projects. | . Feeling PII &amp; Personal Exposure . I believe that PII is necessary for user data and accounts, amd is one of the few ways that users can be validated. . Good Vs. Bad Password . A good password is one that is random and hard to guess. They often times are not things like birthdays, or names, as they could be socially engineered and cracked. Good passwords are also full of random, complex, and full of random obscure symbols. This makes it hard for hackers to brute force guess your password. Also, it’s good to have different passwords for different websites. . Symmetric &amp; Asymmetric Encryption . Symmetric encryption is a type of encryption where the same key is used to encrypt and decrypt the data. This is the most common type of encryption, as it is used for most password encryption systems. This means that there is a faster encryption and decryption process as the same key is used for both. Example Symmetric Encryption: AES, DES, 3DES, etc. . Asymmetric encryption is a type of encryption where there are two distinct keys, a public and private key. The public key is used to encrypt the data and the private key is used to decrypt the data. This is the type of encryption that we used for our GitHub fastpages blog. Example Asymmetric Encryption: RSA, ECC, etc. . AWS Deployment . We used private and public SSH keys while deploying our project to AWS. We also created a .pem file that we used to look into our instance. We didn’t do much else in terms of encryption after that, as anything else was for hte most part, beyond us. . How I got Phished . When I was 5, I was contacted by a ‘Nigerian Prince’ via email. He said that I won 50,000 dollars! I was so hyped because I thought it was real. One catch however, I needed to pay the shipping fee of $50, makes sense because he was from Nigeria, or at least I thought. I took my dad’s credit card and I payed up, not knowing it was a scam. He never replied after he got the money, and I obviously didn’t get my ‘prize’. Once my dad found out, lets just say I didn’t get any birthday presents that year… .",
            "url": "https://h4seeb-cmd.github.io/turtle/week%2022/big%20idea%205/2023/02/08/BigIdea5-6.html",
            "relUrl": "/week%2022/big%20idea%205/2023/02/08/BigIdea5-6.html",
            "date": " • Feb 8, 2023"
        }
        
    
  
    
        ,"post27": {
            "title": "Big Idea 5.5!",
            "content": "Licenses Notes . Licenses are documents that describe the conditions to how you can use the intellectual property it’s attached to. There are many different types of licesnes, and those licenses allow for different things. For most of my GitHub repositories, they have an Apache 2.0 License. The convenient thing about GitHub is that it shows you the license you are using the intellectual property of choice under. As you can see with this Apache 2.0 license here, I can use it for commercial use, modification, distribution, patent use, and private use. I can’t use it for trademarking, liability, or warranty. With different licenses, come different terms and conditions. . Different Types of Licenses and What They Do: . Creative Commons Zero v1.0 Universal: This license makes it so that the code is 100% open source and can be used and modified for anything. | Open Source MIT License: This license allows users to code freely to make closed source versions for distribution. This license also makes the user credit the original creator of the work. | Open Source GPL License: This is sort of like the Creative Commons Zero v1.0 Universal, but it restricts users from being able to distribute closed-source versions. Companies like Qualcomm are very serious about seperating the public code from the private code. | . Pros and Cons of Copyright and Licenses . Pros: . People get credit for their own work. | People can crack down on intellectual property theft easier. | The creators can get money for their own work. Cons: | The whole system can be abused very easily. | Greatly limits creative freedom and liberties. | Companies abuse copyright protection to defend things that don’t violate any copyright laws. | . Licensing Various Projects and Repositories . For adding a new license, I added the MIT license to my personal repository and group frontend/backend. This makes it so that it’s closed source, and now people who use any of the code will have to credit my group and I, whether that be a shout out, or something in the project description. As for applying the license, it was very easy. I simply made a file, called it LICENSE, then selected the license of choice. Then it prompted me to commit my changes, so I did that. (Note that the backend for our project is based off of a clone of my personal repo.) .",
            "url": "https://h4seeb-cmd.github.io/turtle/week%2022/big%20idea%205/2023/02/01/BigIdea5-5.html",
            "relUrl": "/week%2022/big%20idea%205/2023/02/01/BigIdea5-5.html",
            "date": " • Feb 1, 2023"
        }
        
    
  
    
        ,"post28": {
            "title": "Big Idea 5.4!",
            "content": "CSP Crowdsourcing Idea . For the approximately 150 students in AP Computer Science Principles, one crowdsourcing idea could be a GitHub-esque site with people offering various bits of code on the site. It’ll kind of work like a blog, but everyone can add their own posts. As for a project idea that uses crowdsourcing, we could have an absolutely massive project, with the entire class working on it. This would force the entire class to crowdsource and work together. . Crowdsourcing in ProjectNASH . As it pertains to my group’s project, crowdsourcing can actually be very helpful. To make our project better, we could use crowdsourcing to get more games in the arcade! This crowdsourcing could also help us build a more robust frontend for the website! . Data Captured at N@ATM . One idea I have for capturing data at Night At The Museum could be a suggestions and likes page. We could make a form, and have spectators fill it out. Once they submit it, the data will go into a database, and we will have a comprehensive table of data for what the people want/like. We could then make a “revised” version with the most highly reccomended features. If this ends up being too much for us, we could simply use a Google Form and Google Spreadsheet. .",
            "url": "https://h4seeb-cmd.github.io/turtle/week%2021/big%20idea%205/2023/02/01/BigIdea5-4.html",
            "relUrl": "/week%2021/big%20idea%205/2023/02/01/BigIdea5-4.html",
            "date": " • Feb 1, 2023"
        }
        
    
  
    
        ,"post29": {
            "title": "Big Idea 5.3!",
            "content": "Task 1 . Overall, I believe that a lot of bias is unintentional, and many people can take it the wrong way. For example, people made a huge deal about Siri’s voice being a woman, as they thought Apple was trying to say that women are only good at supporting men. However, this point is completely moot as there are options to change Siri’s voice. Additionally, if Siri’s voice was a man, these same people would say that they made the voice a man as if to say that men should be the ones doing all the important jobs. As for algorithm bias, I believe that companies check their user statistics, and they purposely target users with things like reccomendations and advertisements based on the data that they were provided. . Task 2 . I believe that this bias was not intentional on HP’s part. This is because cameras are not as good at detecting and focusing on faces of color anyway. Due to the darker skin tone, some low-budget cameras, like the one installed in the laptop, don’t detect exposure as well. This causes the facial tracking system to not work as well on people with darker skin. This problem could have been easily avoided if they gave the facial tracking systemm more skin tones to test with, and with further testing, this problem could be solved. . How I Will Avoid Bias In My Code . As for how I will avoid bias in my code, I plan to do lots of testing and tuning before Night At The Museum, as not only will this help me debug my project, but it will also help avoid any sort of unintentional bias. .",
            "url": "https://h4seeb-cmd.github.io/turtle/week%2021/big%20idea%205/2023/02/01/BigIdea5-3.html",
            "relUrl": "/week%2021/big%20idea%205/2023/02/01/BigIdea5-3.html",
            "date": " • Feb 1, 2023"
        }
        
    
  
    
        ,"post30": {
            "title": "Big Idea 5.2!",
            "content": "Class Notes . 5.2: Class Circle Talk . Computers are a massive advantage in society today, and it’s kind of like a haves and have nots type of thing | People may not have access to computers and the internet like others do for a myriad of reasons, some being: Economic situation | Country regulations | Family regulations | . | Some people choose to not use technology, as they believe it ruins society. | . Hacks . 1) How does someone empower themselves in a digital world? . In this digital era, people can empower themselves with relative ease, especially when it comes to fields involving computer science. In order to empower yourself, you must experiment and try new things, as there are so many different fields and opportunities available that there will be SOMETHING that interests you. After finding your interest, you must train to excel at that one niche. . 2) How does someone that is empowered help someone that is not empowered? Describe something you could do at Del Norte HS. . I believe that the empowered can help the un-empowered via many different ways. The way that I would go about it is having a conversation with the un-empowered person. I would give them advice about struggles I went through, and what I did to solve my problems. I would also help them find something they are interested in, and I would help them experiment. This would launch a chain reaction of the person who previously wasn’t empowered to become empowered and help more un-empowered people. . 3) Is paper or red tape blocking digital empowerment? Are there such barriers at Del Norte? Elsewhere? . Although paper may be limiting digital empowerment in a sense, there is advantages to paper against computers. For one, paper is more reliabale and set in stone, as the paper doesn’t need to “save” and such. Del Norte still users paper for the majority of academic uses, as it’s exponentially harder to cheat on paper than on the computer. Especially in a school where cheating and academic dishonesty is held at such high regard. . 4) What concerns do you have personally about the digital divide? For yourself or for others. . I believe that as technology gets better and better, the divide between the haves and have-nots will increase further. Going hand in hand with the increase of the gap between the rich and the poor, the divide between the people who have technology and the people who don’t have technology will get exponentially larger. Technology will become more of an advantage, and the people who don’t have it will be pushed farther and farther away from the others. . Reflection . This lesson alerted me to the growing issue of digital divide. The overwhelming advantage of people who can use technology is scary, and that advantage is only going to get bigger. In order to solve this problem, we will need to make technology way more affordable and accessible to others. .",
            "url": "https://h4seeb-cmd.github.io/turtle/week%2020/big%20idea%205/2023/01/31/bigIdea5-2.html",
            "relUrl": "/week%2020/big%20idea%205/2023/01/31/bigIdea5-2.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post31": {
            "title": "Unit 3 Lesson 9 & 11 HW",
            "content": "Developing Algorithms Tasks and HW . Tasks: . def mystery(num, num2): if (num % num2 == 0): print(&quot;True&quot;) else: print(&quot;False&quot;) mystery(20, 4) . What does the algorithm do? Please explain in words.An algorithm checks whether or not the remainder of the expression above = 0. If that&#39;s the case, it prints True, if it isn&#39;t, it prints False. . | What if I put in 30 as num and 4 as num2. What would be the output?The output would be False, as 30 divided by 4 does not equal 0. . | What is the output of this algorithm? . it is too hot outside . temp = 95 if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) if (temp &gt;= 65): print(&quot;I will go outside&quot;) else: print(&quot;it is too cold outside&quot;) . What is the output of this algorithm? it looks similar but the output is different! . it is too hot outside i will go outside . temp = 95 if (temp &gt;= 65): if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) else: print(&quot;i will go outside&quot;) if (temp &lt; 65): print(&quot;it is too cold outside&quot;) . sum = 0 counter = 1 sum = 0 for i in range (1, 10, 2): sum = sum + i print(sum) . 25 . HW: . def collatz(N): if N == 1: # If the variable = 1, simply print it print(N) return elif N % 2 == 0: # However, if this number is not one and an even number, print it and divide it by 2 print(N) collatz(N // 2) else: # If it&#39;s not 1 or even, it must be an odd number that isn&#39;t 1 and in that case, multiply by 3 and add 1 print(N) collatz(N * 3 + 1) collatz(6) # Calls the function with the argument 6 . 6 3 10 5 16 8 4 2 1 . Searching Introduction HW . HW: . def sqrt(N): # Checking to see if the number is 1 or 0, as the sqrt of 1 = 1 and the sqrt 0 = 0. if N &lt; 2: return N # If the number is not 1 or 0, it will proceed to do the following: else: y = N # Creating a variable y, and setting that = N, which is a variable that represents whatever integer that is put into the function z = (y + (N/y)) // 2 # creating the equation that divides N down while y - z &gt;= 0.00001: # this while loop continues this process until we get our desired answer y = z z = (y + (N/y)) / 2 return z # returns our answer if __name__ == &#39;__main__&#39;: # setting N to a placeholder value of 25 in this cell to test N = 25 answer = round(sqrt(N)) # set final answer to the rounded product of the function. print(answer) . 5 . test_cases = [0,1,4,85248289,22297284,18939904,91107025,69122596,9721924,37810201,1893294144,8722812816,644398225] answers = [int(sqrt(x)) for x in test_cases] def checkValid(): for i in range(len(test_cases)): if sqrt(test_cases[i]) == answers[i]: print(&quot;Check number {} passed&quot;.format(i+1)) else: print(&quot;Check number {} failed&quot;.format(i+1)) checkValid() . Check number 1 passed Check number 2 passed Check number 3 passed Check number 4 passed Check number 5 passed Check number 6 passed Check number 7 passed Check number 8 passed Check number 9 passed Check number 10 passed Check number 11 passed Check number 12 passed Check number 13 passed .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/01/30/u3L9&11.html",
            "relUrl": "/2023/01/30/u3L9&11.html",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post32": {
            "title": "Collegeboard MCQ 2 Corrections/Reflection",
            "content": "Proof of Completion: . . Test Corrections: . Question 1: . I got this answer wrong becasue the values for A would technically work, as it would just display the value of z. The correct answer is D. I am still a little confused as to why it is this way, so I will be studying up on the suggested topic. . Question 2: . I chose the answer B because I thought that what was stopping the code from working was the lack of code denoting an index. Although now, I can see the correct answer is C, because as it stands, every time the loop runs it sets the count variable to 0, creating an infinite loop. In order to fix this, you need to set the statement on line 5 to between lines 2 and 3. . Question 8: . I got this answer wrong for two reasons. For one, I didn’t click two answers, and secondly, the one answer I did click was incorrect. The correct answers were A and D. A was correct because if the difference between the two variables was 0, then that would mean the values are exactly the same. The same sort of logic goes for D, where if you add up the two, the answer should be a positive even number. . Question 13: . This question was wrong because the age could be 18 years old exactly for 1. The correct answers were 2 and 3 because those two correctly eliminate all other possibilities. . Question 24: . I got this question wrong because changing n wouldn’t change the amount of times the loop is ran exponentially. The best way I could explain it is by imagining n as 2 for example. After setting n to 2, the inner loop will repeat 2 times, while the outer loop will repeat 3 times. The code will run a total of 3 * 2 times, or 6 times. This is why the correct answer is 3n. . Question 36: . I got this wrong because if target does not appear in a list, the program will accurately display the value 0. The value of count is initialized to 0, and it never changes in the program if target does not appear in the list. A is correct because the variable count is initially set to 0 and is incremented only when the current item in the list (represented by the variable n) equals the value of the variable target. . Question 41: . I got one of the answers, however because I was in a rush I missed the second answer. The se . Reflection . Overall, I show a decently strong understanding of all the concepts, I just need to review the Collegeboard concepts. Some things I need to work on are not rushing towards the end, as I missed questions because I was in a hurry. Additionally, I need to review the concept of nested loops, as I have a feeling that it is going to be a reoccuring topic on the AP Exam. In order to do better on the AP Exam, I will need to actually watch the Collegeboard videos, as they go over the topics that I had a lack of understanding of duirng the test. Also, I could definetely be a little faster on the questions pretaining to the drawings. I did end up getting them right, but not without spending lots of time trying to visualize everything. .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2020/2023/01/30/cbMCQ2.html",
            "relUrl": "/fastpages/jupyter/week%2020/2023/01/30/cbMCQ2.html",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post33": {
            "title": "Big Idea 5.1!",
            "content": "Class Notes . 5.1: Class Circle Talk . ChatGPT . Benefits . Can help you with specific questions. | Can help proofread essays and code. | Can help write randomized prompts. | . Drawbacks . Academically dishonest by nature. | Dependability decreases as the nature of the prompt becomes more complex. | Gets its knowledge from certain databases/sources. Information can be biased and incorrect. | . Drones . Benefits . Can travel long distance | Ability to record/videotape extreme views without risk to human life. | . Drawbacks . Malfunctions and breaking can hurt people. | People can spy on others with drones. | . Social Media . Benefits . People can speak out about their opinion on certain matters. | People have increased networking opportunities. | . Drawbacks . Can lead to unhealthy decrease | Can be addcitive to the user | . Video Games . Benefits . Allows players to make friends online | Some games can train hand-eye coordination | Good way to de-stress | . Drawbacks . Can be addictive to the user | . Without tech, it can be hard to complete certain tasks that require online tools. Especially due to the pandemic, technology has become a staple in education. . Hacks . Beneficial Effects of Computing . Production of goods dramatically increased due to higher levels of automation. | Performing mathamatical operations has never been easier due to modern-day computational technology. | The general public now has access to most of the world’s information. | Harmful Effects of Computing . People have beecome reliant on these modern computers for day-to-day life. | Jobs are going to be replaced by machines that are more capable, impacting livelyhoods and economies. | Misuese of computers can be detrimental for one’s health. | Dopamine and Addictions . I believe that there is a serious issue with technological addictions and the way it impacts teenagers and education. In this digital age, almost all high schoolers have access to social media, video games, and other forms of entertainment. This leads to technology being used to be unproductive and waste of time. Additionally, as companies are chasing more and more profits, games and social media apps are becoming more addictive and predatory in nature, and now we are at a point where it’s basically a drug. Designed to get users hooked, these apps lead to people getting very unproductive and wasting time. I have experienced this personally, as I find that when I do my work, I’ll often get distracted by messages and thoughs of watching Youtube and such. . Reflection . Overall, this lesson taught me that technology has many different use cases, and by that same coin, many different disadvantages. .",
            "url": "https://h4seeb-cmd.github.io/turtle/week%2020/big%20idea%205/2023/01/30/bigIdea5-1.html",
            "relUrl": "/week%2020/big%20idea%205/2023/01/30/bigIdea5-1.html",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post34": {
            "title": "CPT plan",
            "content": "Overview . For my create performance task, I will be creating an arcade game (see subpage for demo screen), and I will be doing the leaderboard as well. For the video, I’ll be showcasing the arcade game by answering some questions, as that is my main tangible contribution. It’s going to take input via button clicks, and it will pull randomized data from an API for the questions. I may need an API for different trivia questions, and I may need a randomizer python library. . Demo Screen . . This is a very rough idea of what the quiz will look like. I plan to add a life and score count, along with better styling, but the core gameplay idea is the same. There will be a question displayed, and the user has to click the right answer. . CB Criteria . Program Purpose and Function . The purpose of my program is to not only entertain, but also provide users with facts about various topics. I will do this with a trivia game like game. . Data Abstraction . This game will effectively use lists and other methods of data abstraction. For one, there will be a list that will have the questions the user got correct and incorrect, so at the end of the game, the user can see what they got right and wrong. I will do this by proccessing whether or not the user got the question correct, then there will be code that takes the question and appends it to the correct list. The list will be reset every time a new game session is . Managing Complexity . I plan to use lists to store the correct and incorrect answers, and this will be much more versatile, modular, and efficient than having a variable that is ever-changing. I will be using the random Python library in order to manage complexity, along with using Trivia Questions RapidAPI. . Procedural Abstarction . In my game, I plan to use many different student-developed procedures. For one, I plan to develop a procedure called randomQuestion, and this will be a simple procedure that pulls a random question from a Trivia RapidAPI I plan to use. Another procedure this game will use is questionCheck. This will check if the button clicked was the correct choice, and each question correct gives 1 point, and each question incorrect removes 1 life. . Algorithm Implementation . I plan to showcase the algorithm that checks for correct and incorrect answers. . Testing . I will show myself playing the game and answering a few questions. . CRUD Concepts . Create: Create the game scenario and questions for the user to answer. | Read: The game will read what the user put for the answer. | Update: The game will update the score and randomly pick another ques1tion to display. | Delete: The game will delete the question recently answered so that it could be replaced by another question. | . Video Outline . For the video, I want to cover these bases: . Initialization of the game instance. | How answering questions and input works. | What happenes when a point is gained or when you lose the game. Reflection: . Overall, I have what I need to do cut out for me. The most stressful thing is going to be working on the backend and doing troubleshooting. For the CPT, I’m most concerned about implementing the lists for correct and incorrect answers. It’s still mostly conceptual and I still need to think about what resources I will need to do that. Once that’s done, I feel like everything will fall into place. . | .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2020/2023/01/30/CBPLAN.html",
            "relUrl": "/fastpages/jupyter/week%2020/2023/01/30/CBPLAN.html",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post35": {
            "title": "CSA Notes",
            "content": "SERA Club Website . Problem: Club info is very ungoranized. . Purpose: To create a management system for DNHS clubs and ASB execs and provide students with consoldated, accurate,m and up to date list of clubns on campus (clubs database) . Features and Design: . DevOps: Club List Database: lists all DNHS clubs, anyone veiwing the site can see the db, but only users can update their row. Includes CRUD concepts. Plan to include security and admin users. | Scrum Master: Club Review Database: Any user can make a review of a given club, and they can provide feedback for users to see. | Backend: Club Documents/Meetings: Clubs can add files to this. Model is the input field, how files will be uploaded. View is the connection thru front and backend, (the submit backend). Control is the database table and who has access to update and delete it. CRUD Concepts added. | Frontend: Club Search Bar: Club search feature where user can search topic of what user wants and it shows all teh clubs relating to the search querey. | . Frontend: Basic form with table with table shown. Hosted on Github Pages. . Gen Notes: . Added a whole sprint schedule. | Added a scrum board, organized in ticked format. | Manifesto very short, and more about visuals. | .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/01/25/notes.html",
            "relUrl": "/2023/01/25/notes.html",
            "date": " • Jan 25, 2023"
        }
        
    
  
    
        ,"post36": {
            "title": "Performance Task Grading 3",
            "content": "Student 1 . Reporting Category | Student Score | College Board Score | Comments | . Row 1 | 0 | 1 | I gave this person a 0 because their response was very short in minimal. They gave super basic and short answers. However Collegeboard gave it a 1 becasue although the response itself was very short, it hit all the requirements it needed to. | . Row 2 | 0 | 0 | Although the first segment of the response showed how the list can store information, the second segment of the response did not show how the data from the list was being accessed. | . Row 3 | 0 | 0 | The response did not meet the criteria of explaining why lists are important for managing complexity. Additionally, the list failed at managing complexity in the program, as you can simply rewrite the list to be an if statement to set the cpuPlay variable based on a random number. | . Row 4 | 1 | 0 | Although I believed that the student fit all the criteria, Collegeboard wrote that the student only fufilled one of the criteria, as &quot;the response does not describe how this procedure contributes to the overall functionality.&quot; | . Row 5 | 0 | 1 | The student correctly fufilled one of the criteria, however, their description was not sufficient. If I had just that description to go off of, I wouldn&#39;t be able to recreate the program. | . Row 6 | 1 | 1 | The student met all of the requirements by describing two calls to the procedure with different arguments, by describing the conditions being tested for the two procedure calls, and by identifying the results of each call. | . Student 2 . Reporting Category | Student Score | College Board Score | Comments | . Row 1 | 1 | 1 | The student met the requirement of recording a video that demonstrates the code working, and they specified the code&#39;s purpose adequately. | . Row 2 | 1 | 1 | The student met all of the requirements because 2 code segments were shown, the first segment shows data being stored in the identified list and a second segment showing data being accessed from the list. The list is named nounList, and the response identifies what is stored in the list. | . Row 3 | 1 | 1 | The program correctly stated why lists are important for managing complexity. | . Row 4 | 1 | 1 | The student met all of the requirements by showing a student-created algorithm, and the algorithim contains parameters The response also describes the functionality of the procedure correctly. | . Row 5 | 1 | 1 | The student met both of the requirements by including sequencing, selection (if statement), and iteration. | . Row 6 | 1 | 1 | The student met all of the requirements by describing two calls to the procedure with different arguments, by describing the conditions being tested for the two procedure calls, and by identifying the results of each call. | . Student 3 . Reporting Category | Student Score | College Board Score | Comments | . Row 1 | 1 | 1 | The video showed the execution of the code, and it showed input into the program using a drop-down list of state names and displaying output results on the screen as a picture of a state flag and other data related to a state such as area and population. | . Row 2 | 0 | 0 | The student only met one of the criteria because they showed data being stored in the list via the second code segment&lt;, however they didn&#39;t do so for the first segment. Additionally, the description written is inaccurate as the identified list stateList appears to represent only the state name. | . Row 3 | 0 | 0 | The response does explain how their code manages complexity, however, they did not go over how their code cannot be written without a list or would be written in a more complex manner. | . Row 4 | 0 | 0 | The student did end up creating a student-produced procedure, however it is missing parameters. Also, the second code segment does not show any call to the procedure updateScreen. | . Row 5 | 0 | 0 | The student-developed procedure updateScreen does includ sequencing and selection (if/else statements), but it does not include any form of iteration. | . Row 6 | 0 | 0 | The student did not meet any of the given criteria. For one, they didn&#39;t reference the calls to the procedure, but rather calls BY the procedure. Secondly, the response describes the two separate operations being performed by the user, but not conditions being tested by the given parameter. | . Student 4 . Reporting Category | Student Score | College Board Score | Comments | . Row 1 | 1 | 1 | The student met the requirement of recording a video that demonstrates the code working, and they specified the code&#39;s purpose adequately. | . Row 2 | 1 | 1 | The student met all of the requirements because 2 code segments were shown, the first segment shows data being stored in the identified list and a second segment showing data being accessed from the list. The list is named nounList, and the response identifies what is stored in the list. | . Row 3 | 1 | 1 | The program correctly stated why lists are important for managing complexity. | . Row 4 | 1 | 1 | The student met all of the requirements by showing a student-created algorithm, and the algorithim contains parameters The response also describes the functionality of the procedure correctly. | . Row 5 | 1 | 1 | The student met both of the requirements by including sequencing, selection (if statement), and iteration. | . Row 6 | 1 | 0 | The student almost met all of the requirements, however their response does not describe specific arguments that are passed through the parameters. | . Overall Reflection . Collegeboard seems to grade a lot harder than I initially thought. They seem to be very picky on the explanation, and it’s not about what the code is, but more so how the student explalins the code. .",
            "url": "https://h4seeb-cmd.github.io/turtle/week%2019/2023/01/18/perfTaskGrading3.html",
            "relUrl": "/week%2019/2023/01/18/perfTaskGrading3.html",
            "date": " • Jan 18, 2023"
        }
        
    
  
    
        ,"post37": {
            "title": "Performance Task Grading 2",
            "content": "Student 1 . Reporting Category | Student Score | College Board Score | Comments | . Row 1 | 0 | 0 | The response for the purpose was just the functionality of the program. | . Row 2 | 0 | 0 | The response only incorporated one of the three required criteria. | . Row 3 | 0 | 0 | The response did not meet the criteria of explaining why lists are important for managing complexity. | . Row 4 | 1 | 0 | Although I believed that the student fit all the criteria, Collegeboard wrote that the student only fufilled one of the criteria, as &quot;the response does not describe how this procedure contributes to the overall functionality.&quot; | . Row 5 | 0 | 0 | The student correctly fufilled one of the criteria, however, their description was not sufficient. If I had just that description to go off of, I wouldn&#39;t be able to recreate the program. | . Row 6 | 1 | 1 | The student met all of the requirements by describing two calls to the procedure with different arguments, by describing the conditions being tested for the two procedure calls, and by identifying the results of each call. | . Student 2 . Reporting Category | Student Score | College Board Score | Comments | . Row 1 | 1 | 1 | The student met the requirement of recording a video that demonstrates the code working, and they specified the code&#39;s purpose adequately. | . Row 2 | 1 | 1 | The student met all of the requirements because 2 code segments were shown, the first segment shows data being stored in the identified list and a second segment showing data being accessed from the list. The list is named nounList, and the response identifies what is stored in the list. | . Row 3 | 1 | 1 | The program didn&#39;t correctly state why lists are important for managing complexity. | . Row 4 | 1 | 1 | The student met all of the requirements by showing a student-created algorithm, and the algorithim contains parameters The response also describes the functionality of the procedure correctly. | . Row 5 | 1 | 1 | The student met both of the requirements by including sequencing, selection (if statement), and iteration. | . Row 6 | 1 | 1 | The student met all of the requirements by describing two calls to the procedure with different arguments, by describing the conditions being tested for the two procedure calls, and by identifying the results of each call. | . Student 3 . Reporting Category | Student Score | College Board Score | Comments | . Row 1 | 1 | 0 | The student met all of the requirements in my eyes, however, Collegeboard wrote that they only met 5 of the 6 criteria, as the purpose wasn&#39;t defined enough. | . Row 2 | 1 | 1 | The student met all of the requirements because 2 code segments were shown, the first segment shows data being stored in the identified list and a second segment showing data being accessed from the list. | . Row 3 | 1 | 1 | The response correctly explains how it manages complexity, and the response adequately explains how the code for the program could not be written without a list. | . Row 4 | 1 | 1 | The student met all of the requirements by showcasing a student-created algorithm, and the algorithim contains parameters The response also describes the functionality of the procedure correctly. | . Row 5 | 1 | 1 | The procedure findWinner created by the student includes examples of sequencing, selection, and iteration. The response was also very in-depth and with the description given alone, I feel as if I could recreate the program. | . Row 6 | 1 | 1 | The student met all 6 of the requirements by describing two calls to the procedure with different arguments, by describing the conditions being tested for the two procedure calls, and by identifying the results of each call. | . Student 4 . Reporting Category | Student Score | College Board Score | Comments | . Row 1 | 1 | 1 | The student met all of the requirements. The video showed the code running, and it specifies the program&#39;s purpose. Additionaly, the response adequately describes the program&#39;s functionality as seen in the video. The response also describes the input and output. | . Row 2 | 1 | 0 | I believed that the student met all of the requirements because 2 code segments were shown, however Collegeboard wrote that the data in the second list is not accessed, so it doesn&#39;t count. | . Row 3 | 0 | 0 | The list shown in the response does not manage complexity, as it&#39;s purpose is to count, however this can simply be done by a variable. | . Row 4 | 1 | 1 | The student met all of the requirements by showing a student-created algorithm, and the algorithim contains parameters The response also describes the functionality of the procedure correctly. | . Row 5 | 1 | 1 | The student met both of the requirements by including sequencing, selection (if statement), and iteration. | . Row 6 | 1 | 0 | I thought that the student met all of the requirements by describing two calls to the procedure with different arguments, by describing the conditions being tested for the two procedure calls, and by identifying the results of each call. However, according to Collegeboard, the response gives the conditions being tested rather than two different arguments that cause a different segment of code to execute. | .",
            "url": "https://h4seeb-cmd.github.io/turtle/week%2018/2023/01/16/perfTaskGrading2.html",
            "relUrl": "/week%2018/2023/01/16/perfTaskGrading2.html",
            "date": " • Jan 16, 2023"
        }
        
    
  
    
        ,"post38": {
            "title": "Model and Object-Oriented Programming",
            "content": "Class and Object Terms . The foundations of Object-Oriented Programming is defining a Class . In Object-Oriented Programming (OOP), a class is a blueprint for creating an Object. (a data structure). An Object is used like many other Python variables. | A Class has ... a collection of data, these are called Attributes and in Python are pre-fixed using the keyword self | a collection of Functions/Procedures. These are called *Methods when they exist inside a Class definition. | . | An Object is created from the Class/Template. Characteristics of objects ... an Object is an Instance of the Class/Template | there can be many Objects created from the same Class | each Object contains its own Instance Data | the data is setup by the Constructor, this is the &quot;init&quot; method in a Python class | all methods in the Class/Template become part of the Object, methods are accessed using dot notation (object.method()) | . | A Python Class allow for the definition of @ decorators, these allow access to instance data without the use of functions ... @property decorator (aka getter). This enables developers to reference/get instance data in a shorthand fashion (object.name versus object.get_name()) | @name.setter decorator (aka setter). This enables developers to update/set instance data in a shorthand fashion (object.name = &quot;John&quot; versus object.set_name(&quot;John&quot;)) | observe all instance data (self._name, self.email ...) are prefixed with &quot;&quot;, this convention allows setters and getters to work with more natural variable name (name, email ...) | . | . Class and Object Code . # Werkzeug is a collection of libraries that can be used to create a WSGI (Web Server Gateway Interface) # A gateway in necessary as a web server cannot communicate directly with Python. # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password, classOf): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) self._classOf = classOf @property def classOf(self): return self._classOf @classOf.setter def classOf(self, classOf): return self._classOf # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;, class of: &quot;{self.classOf}&quot; &#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; # tester method to print users def tester(users, uid, psw, classOf): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: # define user objects u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, classOf=&#39;2025&#39;) u2 = User(name=&#39;Nicholas Tesla&#39;, uid=&#39;nick&#39;, password=&#39;123nick&#39;, classOf=&quot;2025&quot;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;, classOf=&#39;2025&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;eli&#39;, password=&#39;123eli&#39;, classOf=&#39;2026&#39;) u5 = User(name=&#39;Hedy Lemarr&#39;, uid=&#39;hedy&#39;, password=&#39;123hedy&#39;, classOf=&#39;2023&#39;) # put user objects in list for convenience users = [u1, u2, u3, u4, u5] # Find user print(&quot;Test 1, find user 3&quot;) u = tester(users, u3.uid, &quot;123lex&quot;, u3.classOf) # Change user print(&quot;Test 2, change user 3&quot;) u.name = &quot;John Mortensen&quot; u.uid = &quot;jm1021&quot; u.set_password(&quot;123qwerty&quot;) u = tester(users, u.uid, &quot;123qwerty&quot;, u.classOf) # Make dictionary &#39;&#39;&#39; The __dict__ in Python represents a dictionary or any mapping object that is used to store the attributes of the object. Every object in Python has an attribute that is denoted by __dict__. Use the json.dumps() method to convert the list of Users to a JSON string. &#39;&#39;&#39; print(&quot;Test 3, make a dictionary&quot;) json_string = json.dumps([user.__dict__ for user in users]) print(json_string) print(&quot;Test 4, make a dictionary&quot;) json_string = json.dumps([vars(user) for user in users]) print(json_string) . Test 1, find user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$p5x...&#34;, class of: &#34;2025&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$X0D...&#34;, class of: &#34;2025&#34; * name: &#34;Alexander Graham Bell&#34;, id: &#34;lex&#34;, psw: &#34;sha256$Y2S...&#34;, class of: &#34;2025&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$Bt6...&#34;, class of: &#34;2026&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$MtH...&#34;, class of: &#34;2023&#34; Test 2, change user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$p5x...&#34;, class of: &#34;2025&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$X0D...&#34;, class of: &#34;2025&#34; * name: &#34;John Mortensen&#34;, id: &#34;jm1021&#34;, psw: &#34;sha256$dVJ...&#34;, class of: &#34;2025&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$Bt6...&#34;, class of: &#34;2026&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$MtH...&#34;, class of: &#34;2023&#34; Test 3, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$p5xEgXnOwIKRyjOy$cbe51a78e5f15d046b230dba53c81c70398aee81c3fc19bafb724f9cba9e8d50&#34;, &#34;_classOf&#34;: &#34;2025&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$X0DhJy9tYUhBEsNw$97db7ccc67e9e2af1b1e082f46b059f079eefbb7d29693f57e83e3b8acbd26c7&#34;, &#34;_classOf&#34;: &#34;2025&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$dVJm5rNqUmc6RW4B$68f15d838b64cd065079286235374edd00351631dffdba3a4867669f5fcf1428&#34;, &#34;_classOf&#34;: &#34;2025&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$Bt6isqw5HOuJcnuf$55927622d61409f89b660bc0f648a753e24880298883948e547dc70d3ca692d3&#34;, &#34;_classOf&#34;: &#34;2026&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$MtHYgpBUKkEfv3fd$49580fe9021562fd94df120366564a61fd1a3afc0a09781532fb00e3675ec152&#34;, &#34;_classOf&#34;: &#34;2023&#34;}] Test 4, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$p5xEgXnOwIKRyjOy$cbe51a78e5f15d046b230dba53c81c70398aee81c3fc19bafb724f9cba9e8d50&#34;, &#34;_classOf&#34;: &#34;2025&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$X0DhJy9tYUhBEsNw$97db7ccc67e9e2af1b1e082f46b059f079eefbb7d29693f57e83e3b8acbd26c7&#34;, &#34;_classOf&#34;: &#34;2025&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$dVJm5rNqUmc6RW4B$68f15d838b64cd065079286235374edd00351631dffdba3a4867669f5fcf1428&#34;, &#34;_classOf&#34;: &#34;2025&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$Bt6isqw5HOuJcnuf$55927622d61409f89b660bc0f648a753e24880298883948e547dc70d3ca692d3&#34;, &#34;_classOf&#34;: &#34;2026&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$MtHYgpBUKkEfv3fd$49580fe9021562fd94df120366564a61fd1a3afc0a09781532fb00e3675ec152&#34;, &#34;_classOf&#34;: &#34;2023&#34;}] . Hacks . Add new attributes/variables to the Class. Make class specific to your CPT work. . Add classOf attribute to define year of graduation Add setter and getter for classOf | . | Add dob attribute to define date of birth This will require investigation into Python datetime objects as shown in example code below | Add setter and getter for dob | . | Add instance variable for age, make sure if dob changes age changes Add getter for age, but don&#39;t add/allow setter for age | . | Update and format tester function to work with changes | . Start a class design for each of your own Full Stack CPT sections of your project . Use new code cell in this notebook | Define init and self attributes | Define setters and getters | Make a tester | . Start Code for Hacks . from datetime import date def calculate_age(born): today = date.today() return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) dob = date(2004, 12, 31) age = calculate_age(dob) print(age) . from werkzeug.security import generate_password_hash, check_password_hash from datetime import date import json class User: def __init__(self, name, uid, password, dob): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) self._dob = dob @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid # dob property is returned as string, to avoid unfriendly outcomes @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob should be have verification for type date @dob.setter def dob(self, dob): self._dob = dob # age is calculated and returned each time it is accessed @property def age(self): today = date.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # dictionary is customized, removing password for security purposes @property def dictionary(self): dict = { &quot;name&quot; : self.name, &quot;uid&quot; : self.uid, &quot;dob&quot; : self.dob, &quot;age&quot; : self.age } return dict # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.dictionary) # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;User(name={self._name}, uid={self._uid}, password={self._password},dob={self._dob})&#39; if __name__ == &quot;__main__&quot;: u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=date(1847, 2, 11)) u2 = User(name=&#39;Haseeb Beg&#39;, uid=&#39;toby&#39;, password=&#39;ybot321&#39;, dob=date(2007, 12, 6)) print(&quot;JSON ready string: n&quot;, u1, &quot; n&quot;) print(&quot;Raw Variables of object: n&quot;, vars(u1), &quot; n&quot;) print(&quot;Raw Attributes and Methods of object: n&quot;, dir(u1), &quot; n&quot;) print(&quot;Representation to Re-Create the object: n&quot;, repr(u1), &quot; n&quot;) print(&quot;JSON ready string: n&quot;, u2, &quot; n&quot;) print(&quot;Raw Variables of object: n&quot;, vars(u2), &quot; n&quot;) print(&quot;Raw Attributes and Methods of object: n&quot;, dir(u2), &quot; n&quot;) print(&quot;Representation to Re-Create the object: n&quot;, repr(u2), &quot; n&quot;) . JSON ready string: {&#34;name&#34;: &#34;Thomas Edison&#34;, &#34;uid&#34;: &#34;toby&#34;, &#34;dob&#34;: &#34;02-11-1847&#34;, &#34;age&#34;: 175} Raw Variables of object: {&#39;_name&#39;: &#39;Thomas Edison&#39;, &#39;_uid&#39;: &#39;toby&#39;, &#39;_password&#39;: &#39;sha256$H74KzHUzKjTXTQuh$313f6252c653b25ff620479ff3445518d3407c5790743f668be5598341e32127&#39;, &#39;_dob&#39;: datetime.date(1847, 2, 11)} Raw Attributes and Methods of object: [&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;_dob&#39;, &#39;_name&#39;, &#39;_password&#39;, &#39;_uid&#39;, &#39;age&#39;, &#39;dictionary&#39;, &#39;dob&#39;, &#39;is_password&#39;, &#39;is_uid&#39;, &#39;name&#39;, &#39;set_password&#39;, &#39;uid&#39;] Representation to Re-Create the object: User(name=Thomas Edison, uid=toby, password=sha256$H74KzHUzKjTXTQuh$313f6252c653b25ff620479ff3445518d3407c5790743f668be5598341e32127,dob=1847-02-11) JSON ready string: {&#34;name&#34;: &#34;Haseeb Beg&#34;, &#34;uid&#34;: &#34;toby&#34;, &#34;dob&#34;: &#34;12-06-2007&#34;, &#34;age&#34;: 15} Raw Variables of object: {&#39;_name&#39;: &#39;Haseeb Beg&#39;, &#39;_uid&#39;: &#39;toby&#39;, &#39;_password&#39;: &#39;sha256$e9hU5blbbJjCI844$597d0a58d0558f254c20e15191877c480fb82dedb65216b4b4f2060798ecda19&#39;, &#39;_dob&#39;: datetime.date(2007, 12, 6)} Raw Attributes and Methods of object: [&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;_dob&#39;, &#39;_name&#39;, &#39;_password&#39;, &#39;_uid&#39;, &#39;age&#39;, &#39;dictionary&#39;, &#39;dob&#39;, &#39;is_password&#39;, &#39;is_uid&#39;, &#39;name&#39;, &#39;set_password&#39;, &#39;uid&#39;] Representation to Re-Create the object: User(name=Haseeb Beg, uid=toby, password=sha256$e9hU5blbbJjCI844$597d0a58d0558f254c20e15191877c480fb82dedb65216b4b4f2060798ecda19,dob=2007-12-06) . Hacks . import json class User: def __init__(self, username, pwd, email): self._username = username self._pwd = pwd self._email = email #getter and setter for the username property @property def username(self): return self._username @username.setter def username(self, username): self._username = username # getter and setter for the email property @property def email(self): return self._email @email.setter def email(self, email): self._email = email # getter and setter for password property @property def pwd(self): return self._pwd @pwd.setter def pwd(self, pwd): self._pwd = pwd # json dump code :) def __str__(self): return json.dumps({&#39;username&#39;: self._username, &#39;pwd&#39;: self._pwd, &#39;email&#39;: self._email}) def __repr__(self): return f&#39;User(username={self._username}, pwd={self._pwd}, email={self._email})&#39; if __name__ == &quot;__main__&quot;: u1 = User(username=&#39;h4seeb&#39;, pwd=&#39;ILOVETHISCLASS100&#39;, email=&#39;mirzahaseebbeg@yahoo.com&#39;) print(&quot;JSON ready string: n&quot;, u1, &quot; n&quot;) print(&quot;Raw Variables of object: n&quot;, vars(u1), &quot; n&quot;) print(&quot;Raw Attributes and Methods of object: n&quot;, dir(u1), &quot; n&quot;) print(&quot;Representation to Re-Create the object: n&quot;, repr(u1), &quot; n&quot;) . JSON ready string: {&#34;username&#34;: &#34;h4seeb&#34;, &#34;pwd&#34;: &#34;ILOVETHISCLASS100&#34;, &#34;email&#34;: &#34;mirzahaseebbeg@yahoo.com&#34;} Raw Variables of object: {&#39;_username&#39;: &#39;h4seeb&#39;, &#39;_pwd&#39;: &#39;ILOVETHISCLASS100&#39;, &#39;_email&#39;: &#39;mirzahaseebbeg@yahoo.com&#39;} Raw Attributes and Methods of object: [&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;_email&#39;, &#39;_pwd&#39;, &#39;_username&#39;, &#39;email&#39;, &#39;pwd&#39;, &#39;username&#39;] Representation to Re-Create the object: User(username=h4seeb, pwd=ILOVETHISCLASS100, email=mirzahaseebbeg@yahoo.com) .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/01/10/PBL-model.html",
            "relUrl": "/2023/01/10/PBL-model.html",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post39": {
            "title": "My First Notebook",
            "content": "Welcome to... my FIRST NOTEBOOK! . WOAH IS THAT PYTHON? . print(&quot;YES IT IS!!!&quot;) . YES IT IS!!! .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%200/2023/01/08/first-notebook.html",
            "relUrl": "/fastpages/jupyter/week%200/2023/01/08/first-notebook.html",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post40": {
            "title": "Performance Task Grading",
            "content": "Student 1 . Reporting Category | Student Score | College Board Score | Comments | . Row 1 | 1 | 0 | The student met the requirement of recording a video that demonstrates the code working, however they did not specify the code&#39;s purpose enough. | . Row 2 | 1 | 1 | The student met all of the requirements because 2 code segments were shown, the first segment shows data being stored in the identified list and a second segment showing data being accessed from the list. The list is named sideIndex, and the response identifies what is stored in the list. | . Row 3 | 0 | 0 | The program didn&#39;t correctly state why lists are important for managing complexity. | . Row 4 | 1 | 1 | The student met all of the requirements by showing a student-created algorithm, and the algorithim contains parameters The response also describes the functionality of the procedure correctly. | . Row 5 | 1 | 1 | The student met both of the requirements by including sequencing, selection (if statement), and iteration. | . Row 6 | 1 | 1 | The student met all of the requirements by describing two calls to the procedure with different arguments, by describing the conditions being tested for the two procedure calls, and by identifying the results of each call. | . Student 2 . Reporting Category | Student Score | College Board Score | Comments | . Row 1 | 1 | 1 | The student met all of the requirements. The video showed the code running, it specifies the program&#39;s purpose, th response describes the functionality demonstrated in the video, and the response describes the input and output. | . Row 2 | 1 | 1 | The student met all of the requirements because 2 code segments were shown, the first segment shows data being stored in the identified list and a second segment showing data being accessed from the list. | . Row 3 | 1 | 1 | The response correctly explains how it manages complexity, and it explains how the code could not be written without a list. | . Row 4 | 1 | 1 | The student met all of the requirements by showing a student-created algorithm, and the algorithim contains parameters The response also describes the functionality of the procedure correctly. | . Row 5 | 1 | 1 | The student met both of the requirements by including sequencing, selection (if statement), and iteration. | . Row 6 | 1 | 1 | The student met all of the requirements by describing two calls to the procedure with different arguments, by describing the conditions being tested for the two procedure calls, and by identifying the results of each call. | .",
            "url": "https://h4seeb-cmd.github.io/turtle/week%2017/2023/01/04/perfTaskGrading.html",
            "relUrl": "/week%2017/2023/01/04/perfTaskGrading.html",
            "date": " • Jan 4, 2023"
        }
        
    
  
    
        ,"post41": {
            "title": "Title",
            "content": "dataset = { &#39;DelNorte&#39;:{ &#39;Westview&#39;:15, &#39;MtCarmel&#39;:20, &#39;Poway&#39;:35, &#39;RanchoBernrdo&#39;:50 }, &#39;Westview&#39;:{ &#39;DelNorte&#39;:15, &#39;MtCarmel&#39;:35, &#39;Poway&#39;:25, &#39;RanchoBernrdo&#39;: 45 }, &#39;MtCarmel&#39;:{ &#39;Westview&#39;:35, &#39;DelNorte&#39;:20, &#39;Poway&#39;:40, &#39;RanchoBernrdo&#39;:30 }, &#39;Poway&#39;:{ &#39;Westview&#39;:25, &#39;MtCarmel&#39;:40, &#39;DelNorte&#39;:35, &#39;RanchoBernrdo&#39;:15 }, &#39;RanchoBernardo&#39;:{ &#39;Westview&#39;:45, &#39;MtCarmel&#39;:30, &#39;Poway&#39;:15, &#39;DelNorte&#39;:50 } } def fastestroute(start,data): drivetime = 0 order = [] for key1, value1 in dataset.items(): print(&quot;key1&quot;, key1, &quot;value1&quot;, value1) print(value1) temp = &quot;&quot; temp += key1 lowestValue = 0 for key2, value2 in value1.items(): print(&quot;value2&quot;, value2) if lowestValue == 0: lowestValue = value2 if value2 &lt;= lowestValue: lowestValue = value2 drivetime = drivetime + lowestValue lowestKey = key2 order.append(key2) print(&quot;Lowest Value is:&quot;, lowestValue) print(&quot;Drivetime:&quot;, drivetime) print(&quot;Lowest Key&quot;, lowestKey) print(order) return(drivetime,order) dataset[&#39;start&#39;] for data in dataset: print(drivetime, order) def nested_dict_values_iterator(data): for value in data.values(): if isinstance(value, dict): for v in nested_dict_values_iterator(value): yield v else: yield value #for value in nested_dict_values_iterator(dataset): # print(value) def fastestroute2(start, data): drivetime = 0 order = [] order.append(start) global lowestKey lowestKey = start for i in dataset: #print(&quot;Dataset&quot;, dataset[i]) #print(&quot;data i: &quot;, data[i].keys()) #print(data[i].values()) #print(&quot;Data Poway&quot;, data[&#39;Poway&#39;]) for key2, value2 in dataset.items(): key2 = lowestKey print(&quot;First Dictionary key2&quot;, key2, &quot;value2&quot;, value2) #print(value2) temp = &quot;&quot; temp += key2 lowestValue = 0 for key2, value2 in value2.items(): print(&quot;Second Dictionary key2&quot;, key2) print(&quot;value2&quot;, value2) if lowestValue == 0: lowestValue = value2 if value2 &lt;= lowestValue and key2 not in order: lowestValue = value2 drivetime = drivetime + lowestValue lowestKey = key2 print(&quot;Lowest key inside Second Dictionary : &quot;, lowestKey) # check if key is not already in order[] if key2 not in order: order.append(key2) print(&quot;Lowest Value is:&quot;, lowestValue) print(&quot;Drivetime:&quot;, drivetime) print(&quot;Lowest Key&quot;, lowestKey) print(order) return(drivetime,order) start = &#39;DelNorte&#39; fastestroute2(start,dataset) # &#39;dataset&#39; is the name of the nested key value pair #fastestroute(start,dataset) #print(data) # print(data, dataset[data]) #print(dataset.values()) #min(dataset, key=dataset.get) #print(dataset.values()) #print(max(dataset.values())) .",
            "url": "https://h4seeb-cmd.github.io/turtle/2023/01/03/dictBackup.html",
            "relUrl": "/2023/01/03/dictBackup.html",
            "date": " • Jan 3, 2023"
        }
        
    
  
    
        ,"post42": {
            "title": "Unit 3 Lesson 9 & 11 HW",
            "content": "Developing Algorithms Tasks and HW . Tasks: . def mystery(num, num2): if (num % num2 == 0): print(&quot;True&quot;) else: print(&quot;False&quot;) mystery(20, 4) . What does the algorithm do? Please explain in words.An algorithm checks whether or not the remainder of the expression above = 0. If that&#39;s the case, it prints True, if it isn&#39;t, it prints False. . | What if I put in 30 as num and 4 as num2. What would be the output?The output would be False, as 30 divided by 4 does not equal 0. . | What is the output of this algorithm? . it is too hot outside . temp = 95 if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) if (temp &gt;= 65): print(&quot;I will go outside&quot;) else: print(&quot;it is too cold outside&quot;) . What is the output of this algorithm? it looks similar but the output is different! . it is too hot outside i will go outside . temp = 95 if (temp &gt;= 65): if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) else: print(&quot;i will go outside&quot;) if (temp &lt; 65): print(&quot;it is too cold outside&quot;) . sum = 0 counter = 1 sum = 0 for i in range (1, 10, 2): sum = sum + i print(sum) . 25 . HW: . def collatz(N): if N == 1: # If the variable = 1, simply print it print(N) return elif N % 2 == 0: # However, if this number is not one and an even number, print it and divide it by 2 print(N) collatz(N // 2) else: # If it&#39;s not 1 or even, it must be an odd number that isn&#39;t 1 and in that case, multiply by 3 and add 1 print(N) collatz(N * 3 + 1) collatz(6) # Calls the function with the argument 6 . 6 3 10 5 16 8 4 2 1 . Searching Introduction HW . HW: . def sqrt(N): # Checking to see if the number is 1 or 0, as the sqrt of 1 = 1 and the sqrt 0 = 0. if N &lt; 2: return N # If the number is not 1 or 0, it will proceed to do the following: else: y = N # Creating a variable y, and setting that = N, which is a variable that represents whatever integer that is put into the function z = (y + (N/y)) // 2 # creating the equation that divides N down while y - z &gt;= 0.00001: # this while loop continues this process until we get our desired answer y = z z = (y + (N/y)) / 2 return z # returns our answer if __name__ == &#39;__main__&#39;: # setting N to a placeholder value of 25 in this cell to test N = 25 answer = round(sqrt(N)) # set final answer to the rounded product of the function. print(answer) . 5 . test_cases = [0,1,4,85248289,22297284,18939904,91107025,69122596,9721924,37810201,1893294144,8722812816,644398225] answers = [int(sqrt(x)) for x in test_cases] def checkValid(): for i in range(len(test_cases)): if sqrt(test_cases[i]) == answers[i]: print(&quot;Check number {} passed&quot;.format(i+1)) else: print(&quot;Check number {} failed&quot;.format(i+1)) checkValid() . Check number 1 passed Check number 2 passed Check number 3 passed Check number 4 passed Check number 5 passed Check number 6 passed Check number 7 passed Check number 8 passed Check number 9 passed Check number 10 passed Check number 11 passed Check number 12 passed Check number 13 passed .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/12/15/u3L9&11.html",
            "relUrl": "/2022/12/15/u3L9&11.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "Title",
            "content": "from random import * def randomnum(): # function for generating random int x = randint(0,255) def convert(dec): x = dec i = 7 bin = [] while i &gt;= 0: if (x - 2 ** i) &gt;= 0: bin.append(1) i -= 1 else: bin.append(0) x -= 2**i i -= 1 print(bin) def survivors(): # function to assign position survivorList = [&quot;Jiya&quot;, &quot;Shruthi&quot;, &quot;Noor&quot;, &quot;Ananya&quot; , &quot;Peter Parker&quot;, &quot;Andrew Garfield&quot;, &quot;Tom Holland&quot;, &quot;Tobey Maguire&quot;] survivorChance = convert(randomnum()) return[survivorList[i] for i in range(8) if survivorChance[i] == 1] # replace the names above with your choice of people in the house def currentSurvivors(newSurvivors): newsurvivors = survivorList print(&quot;The survivors of the apocalypse are...&quot;) for i in survivorList: print(&quot; t - {}&quot;.format(i)) survivorList = survivors() currentSurvivors(survivorList) . import getpass, sys QUESTIONS = { &quot;What is used to create parameters in Python?&quot;: [ &quot;def&quot;, &quot;define&quot; ], &quot;Where are the secrets stored in your VSCode?&quot;: [ &quot;_config.yml&quot;, &quot;config.yml&quot;, &quot;config&quot; ], &quot;True or false: We can use docx files in our Fastpages site?&quot;: [ &quot;true&quot;, &quot;false&quot;, &quot;what in the world is docx?&quot; ], &quot;True or false: Static Text often changes when you run code&quot;: [ &quot;false&quot;, &quot;true&quot;, &quot;idk&quot; ], &quot;True or false: A sequence of code is only used on the AP exam and it is used to refer to mulitple lines of code&quot;: [ &quot;false&quot;, &quot;true&quot;, &quot;what&#39;s a sequence?&quot; ], &quot;Can we get an A in this class AND keep our sanity?&quot;: [ &quot;no&quot;, &quot;yes&quot;, &quot;maybe&quot; ], &quot;What is the syntax for remotely opening a file in VSCode from Terminal?&quot;: [ &quot;code .&quot;, &quot;Code.&quot;, &quot;. Code&quot; &quot;code.&quot; ], &quot;What do we call the defining parameters we set at the top of a markdown file or jupyter notebook?&quot;: [ &quot;front matter&quot;, &quot;define&quot; ], &quot;What is the name of the piece of code that lets you access and bring in other people&#39;s code?&quot;: [ &quot;import&quot;, &quot;port&quot;, &quot;rejuvenate&quot; ], &quot;What is the teacher&#39;s social security number?&quot;: [ &quot;how is that relevant&quot;, &quot;idk&quot;, &quot;why is this even a question&quot;, &quot;5014&quot; ], } for question, alternatives in QUESTIONS.items(): correct_answer = alternatives[0] for alternative in sorted(alternatives): print(f&quot; - {alternative}&quot;) answer = input(f&quot;{question}? &quot;) if answer == correct_answer: print(&quot;yay you got it right! here&#39;s your bronze medal!&quot;) else: print(f&quot;LOL imagine getting it wrong. The correct answer was {correct_answer!r}, not {answer!r}&quot;) .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/12/15/otherThings.html",
            "relUrl": "/2022/12/15/otherThings.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "Title",
            "content": "dataset = { &#39;DelNorte&#39;:{ &#39;Westview&#39;:15, &#39;MtCarmel&#39;:20, &#39;Poway&#39;:35, &#39;RanchoBernrdo&#39;:50 }, &#39;Westview&#39;:{ &#39;DelNorte&#39;:15, &#39;MtCarmel&#39;:35, &#39;Poway&#39;:25, &#39;RanchoBernrdo&#39;: 45 }, &#39;MtCarmel&#39;:{ &#39;Westview&#39;:35, &#39;DelNorte&#39;:20, &#39;Poway&#39;:40, &#39;RanchoBernrdo&#39;:30 }, &#39;Poway&#39;:{ &#39;Westview&#39;:25, &#39;MtCarmel&#39;:40, &#39;DelNorte&#39;:35, &#39;RanchoBernrdo&#39;:15 }, &#39;RanchoBernardo&#39;:{ &#39;Westview&#39;:45, &#39;MtCarmel&#39;:30, &#39;Poway&#39;:15, &#39;DelNorte&#39;:50 } } def fastestroute(start,data): drivetime = 0 order = [] for key1, value1 in dataset.items(): print(&quot;key1&quot;, key1, &quot;value1&quot;, value1) print(value1) temp = &quot;&quot; temp += key1 lowestValue = 0 for key2, value2 in value1.items(): print(&quot;value2&quot;, value2) if lowestValue == 0: lowestValue = value2 if value2 &lt;= lowestValue: lowestValue = value2 drivetime = drivetime + lowestValue lowestKey = key2 order.append(key2) print(&quot;Lowest Value is:&quot;, lowestValue) print(&quot;Drivetime:&quot;, drivetime) print(&quot;Lowest Key&quot;, lowestKey) print(order) return(drivetime,order) dataset[&#39;start&#39;] for data in dataset: print(drivetime, order) def nested_dict_values_iterator(data): for value in data.values(): if isinstance(value, dict): for v in nested_dict_values_iterator(value): yield v else: yield value #for value in nested_dict_values_iterator(dataset): # print(value) def fastestroute2(start, data): drivetime = 0 order = [] order.append(start) global lowestKey lowestKey = start for i in dataset: #print(&quot;Dataset&quot;, dataset[i]) #print(&quot;data i: &quot;, data[i].keys()) #print(data[i].values()) #print(&quot;Data Poway&quot;, data[&#39;Poway&#39;]) for key2, value2 in dataset.items(): key2 = lowestKey print(&quot;First Dictionary key2&quot;, key2, &quot;value2&quot;, value2) #print(value2) temp = &quot;&quot; temp += key2 lowestValue = 0 for key2, value2 in value2.items(): print(&quot;Second Dictionary key2&quot;, key2) print(&quot;value2&quot;, value2) if lowestValue == 0: lowestValue = value2 if value2 &lt;= lowestValue and key2 not in order: lowestValue = value2 drivetime = drivetime + lowestValue lowestKey = key2 print(&quot;Lowest key inside Second Dictionary : &quot;, lowestKey) # check if key is not already in order[] if key2 not in order: order.append(key2) print(&quot;Lowest Value is:&quot;, lowestValue) print(&quot;Drivetime:&quot;, drivetime) print(&quot;Lowest Key&quot;, lowestKey) print(order) return(drivetime,order) start = &#39;DelNorte&#39; fastestroute2(start,dataset) # &#39;dataset&#39; is the name of the nested key value pair #fastestroute(start,dataset) #print(data) # print(data, dataset[data]) #print(dataset.values()) #min(dataset, key=dataset.get) #print(dataset.values()) #print(max(dataset.values())) .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/12/15/dictBackup.html",
            "relUrl": "/2022/12/15/dictBackup.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post45": {
            "title": "Homework 3.17 - 3.18",
            "content": "3.17 Algorithmic Efficiency . Vocabulary . Problem: A general description of a task that can or cannot be solved algorithmically Decision Problem: A problem with a yes or no answer | Organization Problem: A problem with the goal of finding the best answer | . | Instance: A problem with a specific input | Efficiency: Amount of computing needed to solve a problem Polynomial Efficiency (Good): More work take sa proportional amount of time. 1 job = +2 time | Exponential Efficiency (Bad): More work takes an exponential amount of time. 1 job = x2 time | . | Heuristic Approach: When optimal solutions are inefficient, look for a possibly optimal solution that is more effecient | Decidable Problem: A decision problme that has a clear solution that will always make a correct output | Undecidable Problem: A decision problem with no solution that is not guaranteed to produce the correct output | . Notes . There are levels to Polynomial Efficiency | More cycles of code function = more time required to complete | Exponential efficiency is much less efficient because it takes many more cycles to complete | A Heuristic Approach sacrifices optimal solutions to improve efficiency and ease of programming | . Challenge . Try and fix this ineficcient code! Only change the code between the two commented lines. Fully programmed solution will improve your grade, at a minimum show that you tried. . import time numlist = [1,3,5,7,9,11,13,15,17,19] valuelist = [0,3,6,9,12,15,18,21] def isvalue(value,array): #-- # Basic Binary Search low = 0 high = len(array) - 1 while low &lt; high: middle = (low + high) // 2 if(array[middle] == value): return True # high = middle - 1 elif array[middle] &lt; value: low = middle + 1 return False #-- starttime = time.time() for i in range(100000): for i in range(len(valuelist)): x = isvalue(valuelist[i],numlist) endtime = time.time() print(endtime-starttime,&#39;seconds&#39;) . 0.37116503715515137 seconds . 3.18 Undecidable Problems . Notes . Undecidable Problems are paradoxical | In a divisible by 3 example, the answer will alwyas return the correct answer, either true or false. This is a decidable problem | Don&#39;t feed functions with their own instructions?? | Some problems cannot be solved by a computer | . Homework! . Make an algorithm that finds the fastest route that hits every location once starting and ending at Del Norte. Make sure to show your thinking. If you are strugling, try using a huristic approach. Remember, what matters more than having perfectly functioning code is that you tried your hardest. . dataset = { &#39;DelNorte&#39;:{ &#39;Westview&#39;:15, &#39;MtCarmel&#39;:20, &#39;Poway&#39;:35, &#39;RanchoBernrdo&#39;:50 }, &#39;Westview&#39;:{ &#39;DelNorte&#39;:15, &#39;MtCarmel&#39;:35, &#39;Poway&#39;:25, &#39;RanchoBernrdo&#39;: 45 }, &#39;MtCarmel&#39;:{ &#39;Westview&#39;:35, &#39;DelNorte&#39;:20, &#39;Poway&#39;:40, &#39;RanchoBernrdo&#39;:30 }, &#39;Poway&#39;:{ &#39;Westview&#39;:25, &#39;MtCarmel&#39;:40, &#39;DelNorte&#39;:35, &#39;RanchoBernrdo&#39;:15 }, &#39;RanchoBernardo&#39;:{ &#39;Westview&#39;:45, &#39;MtCarmel&#39;:30, &#39;Poway&#39;:15, &#39;DelNorte&#39;:50 } } def fastestroute(start,data): drivetime = 0 order = [] for key1, value1 in dataset.items(): print(&quot;key1&quot;, key1, &quot;value1&quot;, value1) print(value1) temp = &quot;&quot; temp += key1 lowestValue = 0 for key2, value2 in value1.items(): print(&quot;value2&quot;, value2) if lowestValue == 0: lowestValue = value2 if value2 &lt;= lowestValue: lowestValue = value2 drivetime = drivetime + lowestValue lowestKey = key2 order.append(key2) print(&quot;Lowest Value is:&quot;, lowestValue) print(&quot;Drivetime:&quot;, drivetime) print(&quot;Lowest Key&quot;, lowestKey) print(order) return(drivetime,order) dataset[&#39;start&#39;] for data in dataset: print(drivetime, order) def nested_dict_values_iterator(data): for value in data.values(): if isinstance(value, dict): for v in nested_dict_values_iterator(value): yield v else: yield value #for value in nested_dict_values_iterator(dataset): # print(value) def fastestroute2(start, data): drivetime = 0 order = [] order.append(start) global lowestKey lowestKey = start for i in dataset: #print(&quot;Dataset&quot;, dataset[i]) #print(&quot;data i: &quot;, data[i].keys()) #print(data[i].values()) #print(&quot;Data Poway&quot;, data[&#39;Poway&#39;]) for key2, value2 in dataset.items(): key2 = lowestKey print(&quot;First Dictionary key2&quot;, key2, &quot;value2&quot;, value2) #print(value2) temp = &quot;&quot; temp += key2 lowestValue = 0 for key2, value2 in value2.items(): print(&quot;Second Dictionary key2&quot;, key2) print(&quot;value2&quot;, value2) if lowestValue == 0: lowestValue = value2 if value2 &lt;= lowestValue and key2 not in order: lowestValue = value2 drivetime = drivetime + lowestValue lowestKey = key2 print(&quot;Lowest key inside Second Dictionary : &quot;, lowestKey) # check if key is not already in order[] if key2 not in order: order.append(key2) print(&quot;Lowest Value is:&quot;, lowestValue) print(&quot;Drivetime:&quot;, drivetime) print(&quot;Lowest Key&quot;, lowestKey) print(order) return(drivetime,order) start = &#39;DelNorte&#39; fastestroute2(start,dataset) # &#39;dataset&#39; is the name of the nested key value pair #fastestroute(start,dataset) #print(data) # print(data, dataset[data]) #print(dataset.values()) #min(dataset, key=dataset.get) #print(dataset.values()) #print(max(dataset.values())) . First Dictionary key2 DelNorte value2 {&#39;Westview&#39;: 15, &#39;MtCarmel&#39;: 20, &#39;Poway&#39;: 35, &#39;RanchoBernrdo&#39;: 50} Second Dictionary key2 Westview value2 15 Lowest key inside Second Dictionary : Westview Lowest Value is: 15 Drivetime: 15 Lowest Key Westview Second Dictionary key2 MtCarmel value2 20 Lowest Value is: 15 Drivetime: 15 Lowest Key Westview Second Dictionary key2 Poway value2 35 Lowest Value is: 15 Drivetime: 15 Lowest Key Westview Second Dictionary key2 RanchoBernrdo value2 50 Lowest Value is: 15 Drivetime: 15 Lowest Key Westview [&#39;DelNorte&#39;, &#39;Westview&#39;] First Dictionary key2 Westview value2 {&#39;DelNorte&#39;: 15, &#39;MtCarmel&#39;: 35, &#39;Poway&#39;: 25, &#39;RanchoBernrdo&#39;: 45} Second Dictionary key2 DelNorte value2 15 Lowest Value is: 15 Drivetime: 15 Lowest Key Westview Second Dictionary key2 MtCarmel value2 35 Lowest Value is: 15 Drivetime: 15 Lowest Key Westview Second Dictionary key2 Poway value2 25 Lowest Value is: 15 Drivetime: 15 Lowest Key Westview Second Dictionary key2 RanchoBernrdo value2 45 Lowest Value is: 15 Drivetime: 15 Lowest Key Westview [&#39;DelNorte&#39;, &#39;Westview&#39;] First Dictionary key2 Westview value2 {&#39;Westview&#39;: 35, &#39;DelNorte&#39;: 20, &#39;Poway&#39;: 40, &#39;RanchoBernrdo&#39;: 30} Second Dictionary key2 Westview value2 35 Lowest Value is: 35 Drivetime: 15 Lowest Key Westview Second Dictionary key2 DelNorte value2 20 Lowest Value is: 35 Drivetime: 15 Lowest Key Westview Second Dictionary key2 Poway value2 40 Lowest Value is: 35 Drivetime: 15 Lowest Key Westview Second Dictionary key2 RanchoBernrdo value2 30 Lowest key inside Second Dictionary : RanchoBernrdo Lowest Value is: 30 Drivetime: 45 Lowest Key RanchoBernrdo [&#39;DelNorte&#39;, &#39;Westview&#39;, &#39;RanchoBernrdo&#39;] First Dictionary key2 RanchoBernrdo value2 {&#39;Westview&#39;: 25, &#39;MtCarmel&#39;: 40, &#39;DelNorte&#39;: 35, &#39;RanchoBernrdo&#39;: 15} Second Dictionary key2 Westview value2 25 Lowest Value is: 25 Drivetime: 45 Lowest Key RanchoBernrdo Second Dictionary key2 MtCarmel value2 40 Lowest Value is: 25 Drivetime: 45 Lowest Key RanchoBernrdo Second Dictionary key2 DelNorte value2 35 Lowest Value is: 25 Drivetime: 45 Lowest Key RanchoBernrdo Second Dictionary key2 RanchoBernrdo value2 15 Lowest Value is: 25 Drivetime: 45 Lowest Key RanchoBernrdo [&#39;DelNorte&#39;, &#39;Westview&#39;, &#39;RanchoBernrdo&#39;] First Dictionary key2 RanchoBernrdo value2 {&#39;Westview&#39;: 45, &#39;MtCarmel&#39;: 30, &#39;Poway&#39;: 15, &#39;DelNorte&#39;: 50} Second Dictionary key2 Westview value2 45 Lowest Value is: 45 Drivetime: 45 Lowest Key RanchoBernrdo Second Dictionary key2 MtCarmel value2 30 Lowest key inside Second Dictionary : MtCarmel Lowest Value is: 30 Drivetime: 75 Lowest Key MtCarmel Second Dictionary key2 Poway value2 15 Lowest key inside Second Dictionary : Poway Lowest Value is: 15 Drivetime: 90 Lowest Key Poway Second Dictionary key2 DelNorte value2 50 Lowest Value is: 15 Drivetime: 90 Lowest Key Poway [&#39;DelNorte&#39;, &#39;Westview&#39;, &#39;RanchoBernrdo&#39;, &#39;MtCarmel&#39;, &#39;Poway&#39;] . (90, [&#39;DelNorte&#39;, &#39;Westview&#39;, &#39;RanchoBernrdo&#39;, &#39;MtCarmel&#39;, &#39;Poway&#39;]) . Grading: . Challenge Homework . .15 pts for attempt | .65 for attempt | . .20 pts for complete | .70 for complete | . .25 pts for above and beyond | .75 pts for above and beyond | .",
            "url": "https://h4seeb-cmd.github.io/turtle/homework1718",
            "relUrl": "/homework1718",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post46": {
            "title": "Dec 13 Speaker Event",
            "content": "Kathyleen Beveridge . About her: . Undergrad at Santa clara | Did a Finance Bachelor’s degree | Mission Statement: “My mission in life is not merely to survive, but rathere to live passionately” | First job was an investment banker from 1995-1996 | Went back to Santa clara to pursue a carrer in tech | First tech company was Qualcomm | Had a short stint at HP | Now at Thermo fisher Scientific (biotech) Company Mission Statements . | HP: “Create technology that makes life better for everyone, everywhere” | Qualcomm: “Inventing the tech the world loves” | Thermo Fisher Scientific: “Enable our customers to make the world a healthier, cleaner, and safer place” Commonalities: . | All of them use tech for the good of the people | Supply and demand; these tech companies aim to provide a service that people are willing to pay for Thermo Fisher Scientific . World leader in serving science. . | Greater than 100,000 colleagues | 7000 R&amp;D scientists/engineers | $1.5B invested in Reaserch and Development | Greater than $40B in revenue | . Kris John: Software Engineer - SRE, DevOps . How it started: . Livermore High School, enjoyed STEM courses | Enrolled at UCLA for Electrical Engineering | Focussed on Communication Systems and Computer Networking | First Comp Sci Class (CS 31) Failed Research: . | Center for Embedded Network Sensors | Networked Informechanical Systems (NIMS) | Introduced to the Linux Operating System, Software Development Life Cycle (LEARNING LINUX IS A MARKETABLE SKILL) | . In 2008, Finished Graduate School, stock market had crashed. In 2010, systems engineer at a start up, GPM. NBC Universal in 2012, NBC Universal, Streaming media infrastructure. In 2014, worked at Qualcomm. Worked DevOps and stayed in the company for 6 years Currently working at Twitter. . Continuous Learning -Highlights . CCNA Training | Machine Learning and Deep Learning (Qualcomm) | Self Taught Python (Udemy) | Data Structures, Algorithms | Twitter University (basically showing you the ropes to working on twt) | . Some Projects I Worked On: . Streaming Media Infrastructure for the 2012 Olympic Games | Analytics Infrastructure Projects (LocationSmart, Qualcomm) | Twitter Projects New DataCenter Deployment | MigratingHome | . | Student Q&amp;A . Have you used AGILE and how has it been good? KJ: It depends what company you are in, they have their own variation. Notably, QC uses AGILE to plan out the quarter’s work. KB: AGILE is very useful for working in short, productive sprints. . Are you still working at Twitter even amidst current events? KJ: No, however, I am moving to work at Mystic Labs. Half the entire company was layed off. JM: When companies shuffle leadership, it’s good to look for jobs before the layoffs actually happen. That’s why KJ has a job lined up. . Is Machine Learning useful in the real world? KJ: It’s good to learn how to use Python libraries adn other machine learning frameworks. KB: Data scientists acutally work to combine data libraries. One of the products my division sells is a service that predicts demand for what certain products will be. . What do you think is the most important skill to have in the tech industry? KJ: The one that I have found is the most useful over time is continuous learning. In school, you are learning how to learn, and everyone has a differnt way of doing even the most basic things. We need to adapt. Another good skill is to not be super concerned about things you see in the news. To be resilient. If you are resilient in tech, you will prevail in terms of jobs. KB: Adapting is key. Carrer paths are not always linear, and my personal career path has been more of a zig-zag. The best people I have worked with listen to the requirements and they translate it in a way that technology can fufill. . What are the biggest challenges in the tech industry and how did you overcome it? KB: I have spent near than 14 years at QC and they work wtih semiconductors. And semiconductors were in a phase of aquisitions. You need to be able to adapt. KJ: Interviews nowadays are ridculous. The interviews are more of a series of timed tests now, and you don’t know what the problems are. You need to be able to pass those tests, and those tests are HARD. You will need to solve the problems using code, and the code has to work. . ??? KJ: It varies across the industry. When talking to the company, often you have the option to negotiate, after all you have the skills they want. However some companies are less lenient. . What happened at Twitter University? KJ: Twitter is not the only company that does this. Often times their methods and software are proprietary. You need to be able to be effective at your job so they teach you in the ways of their company. Companies often have their own build tools, and you have to be able to navigate the tools and use the tools. . How do you think leearning how to code helps in a buisness setting? KB: I would say that learning how to code is a way of thinking. It greatly helps your problem solving and critical thinking. When I interview, it’s for critical thinking and problem solving, why did you reach the conclusion? Learning how to code helps you think more methodically. . How will you use continuous learning in your next job? (Question aimed at KJ) KJ: My next role makes me intrested in things like blockchain tech. .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2016/2022/12/12/speakerEvent.html",
            "relUrl": "/fastpages/jupyter/week%2016/2022/12/12/speakerEvent.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post47": {
            "title": "Unit 3 Lesson 16, Student Copy",
            "content": "Hack #1 - Class Notes . We run simulations in order to test estimated results in real life scenarios | Simulations help greatly with accounting for variables that would happen in real life scenarios | Numerous real life examples can be simulated | The random module/library is great for simulations, as it helps with the recreation of real life variables. | . Hack #2 - Functions Classwork . from random import * userLow = int(input(&quot;What&#39;s the lowest number you would want to print?&quot;)) # inputted 1 userHigh = int(input(&quot;What&#39;s the highest number you would want to print?&quot;)) # inputted 403 print(randint(userLow, userHigh)) . 336 . closet = [&quot;red shoes&quot;, &quot;green pants&quot;, &quot;tie&quot;, &quot;belt&quot;] def trash(): closet.pop(randint(0,4)) print(closet) trash() . [&#39;red shoes&#39;, &#39;tie&#39;, &#39;belt&#39;] . import random def coinflip(): #def function randomflip = random.randint(1, 3) #picks either 1, 2, or 3 randomly (33.3% chance of either) if randomflip &gt;= 2: #assigning 2 and 3 to be heads--&gt; if either are chosen then it will print, &quot;Heads&quot; print(&quot;Heads&quot;) else: if randomflip == 1: #assigning 1 to be tails--&gt; if 1 is chosen then it will print, &quot;Tails&quot; print(&quot;Tails&quot;) #Tossing the coin 5 times: t1 = coinflip() t2 = coinflip() t3 = coinflip() t4 = coinflip() t5 = coinflip() . Heads Heads Heads Tails Tails . Hack #3 - Binary Simulation Problem . from random import randint def randomnum(): # function for generating random int return randint(0,255) def converttobin(dec): # function for converting decimal to binary N = dec i = 7 binary = [] while i &gt;= 0: if (N - 2 ** i) &gt;= 0: binary.append(1) N-=2 ** i i-=1 else: binary.append(0) i-=1 return binary def survivors(): # function to assign position survivorstatus = [&quot;Jiya&quot;, &quot;Shruthi&quot;, &quot;Noor&quot;, &quot;Ananya&quot; , &quot;Alex&quot;, &quot;Nathan&quot;, &quot;Haseeb&quot;, &quot;Mr. Yeung&quot;] chances = converttobin(randomnum()) return [survivorstatus[i] for i in range(8) if chances[i] == 1] def printsurvivors(survivor_list): print(&quot;The following people survived the apocalypse: &quot;) for i in survivor_list: print(&quot; -&quot;, i) # replace the names above with your choice of people in the house survivor_list = survivors() printsurvivors(survivor_list) . The following people survived the apocalypse: - Shruthi - Alex - Mr. Yeung . from random import * def rand(): x = randint(0,255) return bin(x) def survive(N): surivors = N return N print(type(bin(4))) . &lt;class &#39;str&#39;&gt; . Hack #4 - Thinking through a problem . create your own simulation involving a dice roll | should include randomization and a function for rolling + multiple trials | . from random import randint as r def dice(): dice1 = r(1,6) dice2 = r(1,6) print(&quot;Dice 1:&quot; + str(dice1)) print(&quot;Dice 2:&quot; + str(dice2)) if dice1 == dice2: print(&quot;DOUBLES!!&quot;) return else: print(&quot;L&quot;) def diceRolls(): totalRolls = 10 curRolls = 0 while curRolls &lt; totalRolls: print(&quot;Trial {0}&quot;.format(curRolls+1)) dice() curRolls = curRolls + 1 diceRolls() . Trial 1 Dice 1:4 Dice 2:4 DOUBLES!! Trial 2 Dice 1:6 Dice 2:2 L Trial 3 Dice 1:3 Dice 2:3 DOUBLES!! Trial 4 Dice 1:5 Dice 2:3 L Trial 5 Dice 1:5 Dice 2:5 DOUBLES!! Trial 6 Dice 1:2 Dice 2:4 L Trial 7 Dice 1:1 Dice 2:2 L Trial 8 Dice 1:6 Dice 2:2 L Trial 9 Dice 1:4 Dice 2:1 L Trial 10 Dice 1:1 Dice 2:2 L . Hack 5 - Applying your knowledge to situation based problems . Using the questions bank below, create a quiz that presents the user a random question and calculates the user&#39;s score. You can use the template below or make your own. Making your own using a loop can give you extra points. . A researcher gathers data about the effect of Advanced Placement®︎ classes on students&#39; success in college and career, and develops a simulation to show how a sequence of AP classes affect a hypothetical student&#39;s pathway.Several school administrators are concerned that the simulation contains bias favoring high-income students, however. answer options: The simulation is an abstraction and therefore cannot contain any bias | The simulation may accidentally contain bias due to the exclusion of details. | If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation. | The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output. | | . | Jack is trying to plan his financial future using an online tool. The tool starts off by asking him to input details about his current finances and career. It then lets him choose different future scenarios, such as having children. For each scenario chosen, the tool does some calculations and outputs his projected savings at the ages of 35, 45, and 55.Would that be considered a simulation and why? answer options No, it&#39;s not a simulation because it does not include a visualization of the results. | No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment. | Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output. | Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences. | | . | Sylvia is an industrial engineer working for a sporting goods company. She is developing a baseball bat that can hit balls with higher accuracy and asks their software engineering team to develop a simulation to verify the design.Which of the following details is most important to include in this simulation? answer options Realistic sound effects based on the material of the baseball bat and the velocity of the hit | A depiction of an audience in the stands with lifelike behavior in response to hit accuracy | Accurate accounting for the effects of wind conditions on the movement of the ball | A baseball field that is textured to differentiate between the grass and the dirt | | . | Ashlynn is an industrial engineer who is trying to design a safer parachute. She creates a computer simulation of the parachute opening at different heights and in different environmental conditions.What are advantages of running the simulation versus an actual experiment? answer options The simulation will not contain any bias that favors one body type over another, while an experiment will be biased. | The simulation can be run more safely than an actual experiment | The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design. | The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment. | | this question has 2 correct answers | . | YOUR OWN QUESTION; can be situational, pseudo code based, or vocab/concept based | YOUR OWN QUESTION; can be situational, pseudo code based, or vocab/concept based | quiz = [ (&quot;A researcher gathers data about the effect of Advanced Placement®︎ classes on students&#39; success in college and career, and develops a simulation to show how a sequence of AP classes affect a hypothetical student&#39;s pathway.Several school administrators are concerned that the simulation contains bias favoring high-income students, however.&quot;, &quot;A) The simulation is an abstraction and therefore cannot contain any bias.&quot;, &quot;B) The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output.&quot;, &quot;C) If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation.&quot;, &quot;D) The simulation may accidentally contain bias due to the exclusion of details.&quot;, [&quot;B&quot;]), (&quot;Jack is trying to plan his financial future using an online tool. The tool starts off by asking him to input details about his current finances and career. It then lets him choose different future scenarios, such as having children. For each scenario chosen, the tool does some calculations and outputs his projected savings at the ages of 35, 45, and 55.Would that be considered a simulation and why?&quot;, &quot;A) No, it&#39;s not a simulation because it does not include a visualization of the results.&quot;, &quot;B) No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment.&quot;, &quot;C) Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output.&quot;, &quot;D) Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences.&quot;, [&quot;D&quot;]), (&quot;Sylvia is an industrial engineer working for a sporting goods company. She is developing a baseball bat that can hit balls with higher accuracy and asks their software engineering team to develop a simulation to verify the design.Which of the following details is most important to include in this simulation?&quot;, &quot;A) Realistic sound effects based on the material of the baseball bat and the velocity of the hit.&quot;, &quot;B) A depiction of an audience in the stands with lifelike behavior in response to hit accuracy.&quot;, &quot;C) Accurate accounting for the effects of wind conditions on the movement of the ball.&quot;, &quot;D) A baseball field that is textured to differentiate between the grass and the dirt.&quot;, [&quot;C&quot;]), (&quot;Ashlynn is an industrial engineer who is trying to design a safer parachute. She creates a computer simulation of the parachute opening at different heights and in different environmental conditions. What are advantages of running the simulation versus an actual experiment?&quot;, &quot;A) The simulation will not contain any bias that favors one body type over another, while an experiment will be biased.&quot;, &quot;B) The simulation can be run more safely than an actual experiment.&quot;, &quot;C) The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design.&quot;, &quot;D) The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment.&quot;, [&quot;B&quot;, &quot;D&quot;]), (&quot;What module in python could be used to generate random values in simulation experiments?&quot;, &quot;A) tensorflow&quot;, &quot;B) randint&quot;, &quot;C) turtle&quot;, &quot;D) random&quot;, [&quot;D&quot;]), (&quot;True or false, simulations are terrible at emulating real world scenarios and variables&quot;, &quot;A) True&quot;, &quot;B) False&quot;, &quot;C) What&#39;s a simulation?&quot;, &quot;D) What scenarios?&quot;, [&quot;B&quot;]) ] correct = 0 total = 6 def printQuestions(tuple): print(tuple[0]) print(tuple[1]) print(tuple[2]) print(tuple[3]) print(tuple[4]) def questionloop(): correct = 0 for i in range(len(quiz)): printQuestions(quiz[i]) ans = input(&quot;What is your answer? &quot;) if ans in quiz[i][5]: print(&quot;Nice, you get a bronze medal!!&quot;) correct+=1 else: print(&quot;L bozo&quot;) return correct correct = questionloop() print(&quot;You got &quot;, correct, &quot;/&quot;, total, &quot; questions right!&quot;) . A researcher gathers data about the effect of Advanced Placement®︎ classes on students&#39; success in college and career, and develops a simulation to show how a sequence of AP classes affect a hypothetical student&#39;s pathway.Several school administrators are concerned that the simulation contains bias favoring high-income students, however. A) The simulation is an abstraction and therefore cannot contain any bias. B) The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output. C) If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation. D) The simulation may accidentally contain bias due to the exclusion of details. Nice, you get a bronze medal!! Jack is trying to plan his financial future using an online tool. The tool starts off by asking him to input details about his current finances and career. It then lets him choose different future scenarios, such as having children. For each scenario chosen, the tool does some calculations and outputs his projected savings at the ages of 35, 45, and 55.Would that be considered a simulation and why? A) No, it&#39;s not a simulation because it does not include a visualization of the results. B) No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment. C) Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output. D) Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences. Nice, you get a bronze medal!! Sylvia is an industrial engineer working for a sporting goods company. She is developing a baseball bat that can hit balls with higher accuracy and asks their software engineering team to develop a simulation to verify the design.Which of the following details is most important to include in this simulation? A) Realistic sound effects based on the material of the baseball bat and the velocity of the hit. B) A depiction of an audience in the stands with lifelike behavior in response to hit accuracy. C) Accurate accounting for the effects of wind conditions on the movement of the ball. D) A baseball field that is textured to differentiate between the grass and the dirt. Nice, you get a bronze medal!! Ashlynn is an industrial engineer who is trying to design a safer parachute. She creates a computer simulation of the parachute opening at different heights and in different environmental conditions. What are advantages of running the simulation versus an actual experiment? A) The simulation will not contain any bias that favors one body type over another, while an experiment will be biased. B) The simulation can be run more safely than an actual experiment. C) The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design. D) The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment. Nice, you get a bronze medal!! What module in python could be used to generate random values in simulation experiments? A) tensorflow B) randint C) turtle D) random Nice, you get a bronze medal!! True or false, simulations are terrible at emulating real world scenarios and variables A) True B) False C) What&#39;s a simulation? D) What scenarios? L bozo You got 5 / 6 questions right! . Hack #6 / Challenge - Taking real life problems and implementing them into code . Create your own simulation based on your experiences/knowledge! Be creative! Think about instances in your own life, science, puzzles that can be made into simulations . Some ideas to get your brain running: A simulation that breeds two plants and tells you phenotypes of offspring, an adventure simulation... . from random import randint as r lucky_numbers = [] user_numbers = [] correct_numbers = 0 print(&#39;Welcome To SimuLotto!&#39;) print(&#39;Enter 5 Numbers:&#39;) # For generating random lucky numbers for num in range(0,5): random_num = r(1, 100) lucky_numbers.append(random_num) # For getting user numbers for num in range(0,5): user_num = int(input()) user_numbers.append(user_num) # For checking if got any lucky numbers for lucky_num in lucky_numbers: for user_num in user_numbers: if user_num == lucky_num: correct_numbers = correct_numbers + 1 print(f&#39;You got {correct_numbers} correct numbers&#39;) print(f&#39;Result: {lucky_numbers}&#39;) . Welcome To SimuLotto! Enter 5 Numbers: You got 0 correct numbers Result: [92, 94, 99, 60, 10] .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/12/12/hw.html",
            "relUrl": "/2022/12/12/hw.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post48": {
            "title": "Unit 3.14 Libraries Lesson",
            "content": "Purpose: Help students streamline and make their coding experience easier through built in packages and methods from a library Objective: By the end of the lesson, students should be able to fluently use methods from the turtle and math packages, and be able to look up documentation for any python package and us it. . fill in the blanks! . Libararies . Okay, so we&#39;ve learned a lot of code, and all of you now can boast that you can code at least some basic programs in python. But, what about more advanced stuff? What if there&#39;s a more advanced program you don&#39;t know how to make? Do you need to make it yourself? Well, not always. . You&#39;ve already learned about functions that you can write to reuse in your code in previous lessons. But,there are many others who code in python just like you. So why would you do again what someone has already done, and is available for any python user? . Packages allow a python user to import methods from a library, and use the methods in their code. Most libraries come with documentation on the different methods they entail and how to use them, and they can be found with a quick google search. methods are used with the following: . Note: a method from a package can only be used after the import statement. . Some libraries are always installed, such as those with the list methods which we have previously discussed. But others require a special python keyword called import. We will learn different ways to import in Challenge 1. . Sometimes we only need to import a single method from the package. We can do that with the word &quot;import&quot;, followed by the package name, then the word &quot;import&quot;, then the method. This will alllow you to use the method without mentioning the package&#39;s name, unlike what we did before, however other methods from that package cannot be used. To get the best of both worlds you can use &quot;*&quot;. . To import a method as an easier name, just do what we did first, add the word &quot;as&quot;, and write the name you would like to use that package as. . Challenge 1: Basic Libraries . Find a python package on the internet and import it | Choose a method from the package and import only the method | import the package as a more convenient name. | from math import sqrt as m from random import randint as rd print(m(rd(1,10))) . 2.0 . Challenge 2: Turtle . Turtle is a python drawing library which allows you to draw all kinds of different shapes. It&#39;s ofter used to teach beginning python learners, but is really cool to use anywhere. Turtle employs a graphics package to display what you&#39;ve done, but unfortunately it&#39;s kind of annoying to make work with vscode. Use: repl.it Click &quot;+ Create&quot;, and for language, select &quot;Python (with Turtle)&quot; Documentation Task: Have fun with turtle! Create something that uses at least 2 lines of different lengths and 2 turns with different angles, and changes at least one setting about either the pen or canvas. Also use one command that isn&#39;t mentioned on the table below(there are a lot). Paste a screenshot of the code and the drawing from repl.it . Commands . forward(pixels) | . right(degrees) | . left(degrees) | . setpos(x,y) | . speed(speed) | . pensize(size) | . pencolor(color) | . Note: Color should be within quotes, like &quot;brown&quot;, or &quot;red&quot; . CHECK THE REVIEW TICKET. IMGS NOT WORKING. . Challenge 3: Math . The math package allows for some really cool mathematical methods! . methods Action . ceil(x) | Rounds up to the nearest inteer | . floor(x) | rounds to largest integer less than or equal to x | . factorial(x) | returns the factorial of the specified number | . gcf(x,y) | returns the greatest common denominator of x and y | . lcm(x,y) | returns the least common mulitple of x and y | . Challenge: Create a program which asks for a user input of two numbers, and returns the following: . each number rounded up | each number rounded down | the lcm of the rounded down numbers | the gcf of the rounded up numbers | the factorial of each number | something else using the math package! Documentation | . from math import ceil as c from math import floor as f x = int(input(&quot;What number do you want to choose?&quot;)) y = int(input(&quot;one more...&quot;)) def floor(): z = int(x / y) N = f(z) return N print(floor()) . 0 . Homework: Putting it all together(complete only after the random values lesson) . Option 1: Create a python program which generates a random number between 1 and 10, and use turtle to draw a regular polygon with that many sides. As a hint, remember that the total sum of all the angles in a polygon is (the number of sides - 2) * 180. Note: a regular polygon has all sides and angles the same size. Paste a screenshot of the code and the drawing from repl.it . Option 2: use the &quot;datetime&quot; package, and looking up documentation, create a program to generate 2 random dates and find the number of days between . Extra ideas: customize the settings, draw a picture, or something else! . import random as r scaleDict = { 1 : 31, 2 : 28, 3 : 31, 4 : 30, 5 : 31, 6 : 30, 7 : 31, 8 : 31, 9 : 30, 10 : 31, 11 : 30, 12 : 31, } fmonth = int(input(&quot;Enter a month&quot;)) fday = int(input(&quot;Enter a day&quot;)) year = int(input(&quot;Enter a year&quot;)) fdate = str(fmonth) + &quot;-&quot; + str(fday) + &quot;-&quot; + str(year) print(fdate) pmonth = r.randint(1,12) pdayrange = scaleDict.get(pmonth) pday = r.randint(0,pdayrange) pdate = str(pmonth) + &quot;-&quot; + str(pday) + &quot;-&quot; + str(year) print(pdate) def days(months ,day): start = 0 for i in range (1,months): start += (scaleDict.get(i)) start += int(day) return(start) uabs = days(fmonth, fday) rabs = days(pmonth,pday) dist = abs(uabs - rabs) print(&quot;There are &quot; + str(dist) + &quot; days between &quot; + fdate + &quot; &amp; &quot; + pdate) . 12-6-2007 5-25-2007 There are 195 days between 12-6-2007 &amp; 5-25-2007 . 3.15 Student Copy . ADD YOUR ADDITIONAL NOTES HERE: . Lists make it so every number has an equal chance of being picked if chosen at random. | Some topics that use luck are rolling dice, cryptography, etc. | . What are Examples of Random outputs in the world? Add a few you can think of. . Ex: Marbles | Cryptography | Dice | Statistics | The Lottery | . Why do we need Random Values for code? . We need random values for code because when we want to run things like simulations, we need to be able to simulate the randomness of the real world. Furthurmore, it&#39;s good for testing and debugging code. . import random random_number = random.randint(1,100) print(random_number) . 28 . import random def randomlist(): list = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;, &quot;blueberry&quot;] element = random.choice(list) print(element) randomlist() . blueberry . import random for i in range(3): roll = random.randint(1,6) print(&quot;Roll &quot; + str(i + 1) + &quot;:&quot; + str(roll)) . Roll 1:1 Roll 2:6 Roll 3:4 . CHALLENGE 1 . from random import randint as r def coinflip(): roll = r(1,2) if roll == 1: return &quot;heads&quot; else: return &quot;tails&quot; print(coinflip()) . tails . HOMEWORK . import random as r x = r.randint(0, 255) def decToBin(N): return bin(N) def decToHex(N): i = 0 hexDec = [] while N!=0: rm = N % 16 if rm&lt;10: rm = rm+48 else: rm = rm+55 hexDec.insert(i, chr(rm)) i = i+1 N = int(N / 16) print(&quot; nEquivalent Hexadecimal Value = &quot;, end=&quot;&quot;) i = i-1 while i&gt;=0: print(end=hexDec[i]) i = i-1 print(&quot;Original number: &quot; + str(x)) print(&quot; nBinary: &quot; + str(decToBin(x))) decToHex(x) . Original number: 62 Binary: 0b111110 Equivalent Hexadecimal Value = 3E .",
            "url": "https://h4seeb-cmd.github.io/turtle/week-13/big-idea-3/2022/12/10/3.14-LibrariesANDrandomvalues.html",
            "relUrl": "/week-13/big-idea-3/2022/12/10/3.14-LibrariesANDrandomvalues.html",
            "date": " • Dec 10, 2022"
        }
        
    
  
    
        ,"post49": {
            "title": "Unit 3.14 Libraries Lesson",
            "content": "Purpose: Help students streamline and make their coding experience easier through built in packages and methods from a library Objective: By the end of the lesson, students should be able to fluently use methods from the turtle and math packages, and be able to look up documentation for any python package and us it. . fill in the blanks! . Libraries . Okay, so we&#39;ve learned a lot of code, and all of you now can boast that you can code at least some basic programs in python. But, what about more advanced stuff? What if there&#39;s a more advanced program you don&#39;t know how to make? Do you need to make it yourself? Well, not always. . You&#39;ve already learned about functions that you can write to reuse in your code in previous lessons. But,there are many others who code in python just like you. So why would you do again what someone has already done, and is available for any python user? . Libraries allow a python user to import methods from a library, and use the methods in their code. Most libraries come with documentation on the different methods they entail and how to use them, and they can be found with a quick google search. methods are used with the following: . Note: a method from a package can only be used after the import statement. . Some libraries are always installed, such as those with the methods which we have previously discussed. But others require a special python keyword called __. We will learn different ways to __ in Challenge 1. . Sometimes we only need to import a single ___ from the package. We can do that with the word , followed by the package name, then the word _, then the method. This will alllow you to use the method without mentioning the package&#39;s name, unlike what we did before, however other methods from that package cannot be used. To get the best of both worlds you can use ___. . To import a method as an easier name, just do what we did first, add the word __, and write the name you would like to use that package as. . Challenge 1: Basic Libraries . Find a python package on the internet and import it | Choose a method from the package and import only the method | import the package as a more convenient name. | from math import sqrt as m from random import randint as rd print(m(rd(1,10))) . 2.6457513110645907 . Challenge 2: Turtle . Turtle is a python __ library which allows you to draw all kinds of different shapes. It&#39;s ofter used to teach beginning python learners, but is really cool to use anywhere. Turtle employs a __ __ to display what you&#39;ve done, but unfortunately it&#39;s kind of annoying to make work with vscode. Use: repl.it Click &quot;+ Create&quot;, and for language, select &quot;Python (with Turtle)&quot; Documentation Task: Have fun with turtle! Create something that uses at least 2 lines of different lengths and 2 turns with different angles, and changes at least one setting about either the pen or canvas. Also use one command that isn&#39;t mentioned on the table below(there are a lot). Paste a screenshot of the code and the drawing from repl.it . Commands . forward(pixels) | . right(degrees) | . left(degrees) | . setpos(x,y) | . speed(speed) | . pensize(size) | . pencolor(color) | . Note: Color should be within quotes, like &quot;brown&quot;, or &quot;red&quot; . Challenge 3: Math . The math package allows for some really cool mathematical methods! . methods Action . ceil(x) | Rounds up to the nearest inteer | . __ | rounds to largest intefer less than or equal to x | . factorial(x) | returns the factorial of the specified number | . gcf(x,y) | returns the greatest common denominator of x and y | . lcm(x,y) | returns the least common mulitple of x and y | . Challenge: Create a program which asks for a user input of two numbers, and returns the following: . each number rounded up | each number rounded down | the lcm of the rounded down numbers | the gcf of the rounded up numbers | the factorial of each number | something else using the math package! Documentation | . from math import ceil as c from math import floor as f x = int(input(&quot;What number do you want to choose?&quot;)) y = int(input(&quot;one more...&quot;)) def floor(): z = int(x / y) N = f(z) return N print(floor()) . 2 . Homework: Putting it all together(complete only after the random values lesson) . Option 1: Create a python program which generates a random number between 1 and 10, and use turtle to draw a regular polygon with that many sides. As a hint, remember that the total sum of all the angles in a polygon is (the number of sides - 2) * 180. Note: a regular polygon has all sides and angles the same size. Paste a screenshot of the code and the drawing from repl.it . Option 2: use the &quot;datetime&quot; package, and looking up documentation, create a program to generate 2 random dates and find the number of days between . Extra ideas: customize the settings, draw a picture, or something else! .",
            "url": "https://h4seeb-cmd.github.io/turtle/week-13/big-idea-3/2022/12/10/3.14-Libraries.html",
            "relUrl": "/week-13/big-idea-3/2022/12/10/3.14-Libraries.html",
            "date": " • Dec 10, 2022"
        }
        
    
  
    
        ,"post50": {
            "title": "Unit 3 Lesson 9 & 11 HW",
            "content": "Developing Algorithms Tasks and HW . Tasks: . def mystery(num, num2): if (num % num2 == 0): print(&quot;True&quot;) else: print(&quot;False&quot;) mystery(20, 4) . What does the algorithm do? Please explain in words.An algorithm checks whether or not the remainder of the expression above = 0. If that&#39;s the case, it prints True, if it isn&#39;t, it prints False. . | What if I put in 30 as num and 4 as num2. What would be the output?The output would be False, as 30 divided by 4 does not equal 0. . | What is the output of this algorithm? . it is too hot outside . temp = 95 if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) if (temp &gt;= 65): print(&quot;I will go outside&quot;) else: print(&quot;it is too cold outside&quot;) . What is the output of this algorithm? it looks similar but the output is different! . it is too hot outside i will go outside . temp = 95 if (temp &gt;= 65): if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) else: print(&quot;i will go outside&quot;) if (temp &lt; 65): print(&quot;it is too cold outside&quot;) . sum = 0 counter = 1 sum = 0 for i in range (1, 10, 2): sum = sum + i print(sum) . 25 . HW: . def collatz(N): if N == 1: # If the variable = 1, simply print it print(N) return elif N % 2 == 0: # However, if this number is not one and an even number, print it and divide it by 2 print(N) collatz(N // 2) else: # If it&#39;s not 1 or even, it must be an odd number that isn&#39;t 1 and in that case, multiply by 3 and add 1 print(N) collatz(N * 3 + 1) collatz(6) # Calls the function with the argument 6 . 6 3 10 5 16 8 4 2 1 . Searching Introduction HW . HW: . def sqrt(N): # Checking to see if the number is 1 or 0, as the sqrt of 1 = 1 and the sqrt 0 = 0. if N &lt; 2: return N # If the number is not 1 or 0, it will proceed to do the following: else: y = N # Creating a variable y, and setting that = N, which is a variable that represents whatever integer that is put into the function z = (y + (N/y)) // 2 # creating the equation that divides N down while y - z &gt;= 0.00001: # this while loop continues this process until we get our desired answer y = z z = (y + (N/y)) / 2 return z # returns our answer if __name__ == &#39;__main__&#39;: # setting N to a placeholder value of 25 in this cell to test N = 25 answer = round(sqrt(N)) # set final answer to the rounded product of the function. print(answer) . 5 . test_cases = [0,1,4,85248289,22297284,18939904,91107025,69122596,9721924,37810201,1893294144,8722812816,644398225] answers = [int(sqrt(x)) for x in test_cases] def checkValid(): for i in range(len(test_cases)): if sqrt(test_cases[i]) == answers[i]: print(&quot;Check number {} passed&quot;.format(i+1)) else: print(&quot;Check number {} failed&quot;.format(i+1)) checkValid() . Check number 1 passed Check number 2 passed Check number 3 passed Check number 4 passed Check number 5 passed Check number 6 passed Check number 7 passed Check number 8 passed Check number 9 passed Check number 10 passed Check number 11 passed Check number 12 passed Check number 13 passed .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/12/09/u3L9&11.html",
            "relUrl": "/2022/12/09/u3L9&11.html",
            "date": " • Dec 9, 2022"
        }
        
    
  
    
        ,"post51": {
            "title": "Student Lesson Vocabulary",
            "content": "Unit 2… Binary/Data Terms . Bits: The smallest unit of data that a computer can process and solve | Bytes: Unit of data that is 8 binary digits long | Hexadecimal: Numbering system that uses base 16 | Nibbles: 4 consectutive binary digits | Binary Numbers: Numbering system that just uses 1s and 0s | Unsigned Integer: Integers but have the property that they have a sign attached to them | Signed Integer: 32 bit data that encodes an integer in a specific range | Floating Point: Positive or negative whole numbers Binary Data Abstractions: . | Boolean: True or false statements | ASCII: American Standard Code for Information interchange, a standard data-encoding format for electronic communication between computers | Unicode: International encoding standard for use with different languages and scripts, by which each letter, digit, or symbol is assigned a unique numeric value that applies across different platforms and programs | RGB: RGB (red, green, and blue) refers to a system for representing the colors to be used on a computer display. Red, green, and blue can be combined in various proportions to obtain any color in the visible spectrum. Levels of red, green, and blue can each range from 0 to 100 percent of full intensity. Data Compression: . | Lossy, Lossless (not discussed) Unit 3… Algorithm/Programming Terms . | Variables: Values that can change, depending on the conditions and code written. Often assigned by the programmer. | Data Types: A particular kind of data item, can be defined by the values it can take, the programming language used, or the operations that can be performed on it. | Assignment Operators: Used to assign values, functions, and variables to something. Managing Complexity with Variables: . | Lists: A sequence of several variables, grouped together under a single name. | 2D Lists: A two-dimensional list can also be used to store objects, which is especially convenient for programming sketches that involve some sort of “grid” or “board” | Dictionaries: A dictionary has a set of keys and each key has a single associated value | Class: Extensible program-code-template for creating objects, providing initial values for state and implementations of behavior | Algorithms: Step-by-step procedure that defines a set of instructions that must be carried out in a specific order to produce the desired result | Sequence: Order that commands are executed by a computer, allows us to carry out tasks that have multiple steps | Selection: Programming construct where a section of code is run only if a condition is met | Iteration: Sequence of instructions or code being repeated until a specific end result is achieved | Expressions: A combination of values and functions that are combined and interpreted by the compiler to create a new value | Comparison Operators: Operators that compare two expressions and return a Boolean value that represents the relationship of their values | Booleans Expressions and Selection: Ture or false, compares data of any type as long as types are the same. | Booleans Expressions and Iteration: and/or, not. | Truth Tables: a way of summarising and checking the logic of a circuit. The table shows all possible combinations of inputs and, for each combination, the output that the circuit will produce. You can produce truth tables for parts of a circuit to check the logic at any stage. | Characters: Display unit of information equating to one alphabetic letter or symbol | Strings: Traditionally a sequence of characters, either as a literal constant or as some kind of variable | Length: Code which maps source symbols to a variable number of bits | Concatenation: Means obtaining a new string that contains both of the original strings | If: A conditional statement that only runs the code specified unless the defined conditons are met | Else: Use else to specify a block of code to be executed, if the same condition is false | Elif: used in conditional statements (if statements), and is short for else if | Nested Selection Statements: Used when more than one decision must be made before carrying out a task | Traversing Strings: To traverse a string means to accessing all the elements of the string one after the other by using the subscript. A string can be traversed using for loop or while loop. | Upper: Upper bounds of a function | Lower: Lower bounds of a fucntion Python If, Elif, Else conditionals; Nested Selection Statements . | Python For: A statement that is used to repeatedly execute code as long as the condition is satisfied. | While loops with Range: A loop that itereates through the code specified in it’s body | Combining loops with conditionals to Break: | Continue: Code that is written when the programmer wants to force the program to move on | Procedural Abstraction: Breaking up code in different pieces to add modularity with procedures | Python Def procedures: Def is used when defining a function/procedure in python | Parameters: Input values that help functions and procedures know what values to work with. | Return Values: What a procedure gives as an output/resut. | . Search . Sequential Search: search method that iterates through each index of a series of data (inefficient compared to binary) | Binary Search: A search method that checks the median of a series of data to find the target value. If it’s less than the median, than the search algorithm ignores the median and anything greater and repeats. Vice versa if the target is greater than the median. Calling/Developing Procedures . This was the lesson my group and I taught. See group fastpages for vocab. . Libraries . | Library: A database that contains many different procedures and functions. They are imported through packages. | Packages: A collection of methods that do certain things. | Documentation: Helpful written explanations to what certain packages in libraries do. Random Values . | Random Values : a number generated using a large set of numbers and a mathematical algorithm which gives equal probability to all number occuring, Simulations . | Simulation: Imitation of a situation or process that works like a virtual experiment Abstractions that mimic more complex objects or phenomena from the real world to draw inferences about things we cant observe Algorithmic Efficiency and Undecidable Problems . | . | Problem: A general description of a task that can or cannot be solved algorithmically Decision Problem: A problem with a yes or no answer | Organization Problem: A problem with the goal of finding the best answer | . | Instance: A problem with a specific input | Efficiency: Amount of computing needed to solve a problem Polynomial Efficiency (Good): More work take sa proportional amount of time. 1 job = +2 time | Exponential Efficiency (Bad): More work takes an exponential amount of time. 1 job = x2 time | . | Heuristic Approach: When optimal solutions are inefficient, look for a possibly optimal solution that is more effecient | Decidable Problem: A decision problme that has a clear solution that will always make a correct output | Undecidable Problem: A decision problem with no solution that is not guaranteed to produce the correct output | .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2015/2022/12/09/lesson-vocab.html",
            "relUrl": "/fastpages/jupyter/week%2015/2022/12/09/lesson-vocab.html",
            "date": " • Dec 9, 2022"
        }
        
    
  
    
        ,"post52": {
            "title": "Unit 3.15 Random Values Student Copy",
            "content": "Purpose/Objectives: Teach student how to implement randomness into their code to make their code simulate real life situations. . In this lesson students will learn: . How to import random to python | How to use random with a list or number range | How to code randomness in everyday scenarios | . ADD YOUR ADDITIONAL NOTES HERE: . Lists make it so every number has an equal chance of being picked if chosen at random. | Some topics that use luck are rolling dice, cryptography, etc. | . What are Random Values? . Random Values are a number generated using a large set of numbers and a mathematical algorithm which gives equal probability to all number occuring . Each Result from randomization is equally likely to occur Using random number generation in a program means each execution may produce a different result . What are Examples of Random outputs in the world? Add a few you can think of. . Ex: Marbles | Cryptography | Dice | Statistics | The Lottery | . Why do we need Random Values for code? . We need random values for code because when we want to run things like simulations, we need to be able to simulate the randomness of the real world. Furthurmore, it&#39;s good for testing and debugging code. . Random values can be used in coding: . import random random_number = random.randint(1,100) print(random_number) . 92 . import random def randomlist(): list = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;, &quot;blueberry&quot;] element = random.choice(list) print(element) randomlist() . blueberry . Real Life Examples: Dice Roll . import random for i in range(3): roll = random.randint(1,6) print(&quot;Roll &quot; + str(i + 1) + &quot;:&quot; + str(roll)) . Roll 1:6 Roll 2:4 Roll 3:4 . Challenge #1 . Write a function that will a simulate a coinflip and print the output . from random import randint as r def coinflip(): roll = r(1,2) if roll == 1: return &quot;heads&quot; else: return &quot;tails&quot; print(coinflip()) . heads . EXTRA: Create a function that will randomly select 5 playing Cards and check if the 5 cards are a Royal Flush . Homework . Given a random decimal number convert it into binary as Extra convert it to hexidecimal as well. . import random as r x = r.randint(0, 255) def decToBin(N): return bin(N) def decToHex(N): i = 0 hexDec = [] while N!=0: rm = N % 16 if rm&lt;10: rm = rm+48 else: rm = rm+55 hexDec.insert(i, chr(rm)) i = i+1 N = int(N / 16) print(&quot; nEquivalent Hexadecimal Value = &quot;, end=&quot;&quot;) i = i-1 while i&gt;=0: print(end=hexDec[i]) i = i-1 print(&quot;Original number: &quot; + str(x)) print(&quot; nBinary: &quot; + str(decToBin(x))) decToHex(x) . Original number: 165 Binary: 0b10100101 Equivalent Hexadecimal Value = A5 .",
            "url": "https://h4seeb-cmd.github.io/turtle/week-13/big-idea-3/2022/12/01/StudentCopyRandomValues.html",
            "relUrl": "/week-13/big-idea-3/2022/12/01/StudentCopyRandomValues.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post53": {
            "title": "Homework",
            "content": "Homework/Hacks . our homework we have decided for a decimal number to binary converter. You must use conditional statements within your code and have a input box for where the decimal number will go. This will give you a 2.7 out of 3 and you may add anything else to the code to get above a 2.7. . Below is an example of decimal number to binary converter which you can use as a starting template. . # strs = &quot;&quot; # while num: # # if (num &amp; 1) = 1 # if (num &amp; 1): # strs += &quot;1&quot; # if (num &amp; 1) = 0 # else: # strs += &quot;0&quot; # # right shift by 1 # num &gt;&gt;= 1 # return strs # function to reverse the string #def reverse(strs): # print(strs[::-1]) # Driver Code #num = 14 #print(&quot;Binary of num 19 is:&quot;, end=&quot; &quot;) #reverse(DecimalToBinary(num)) NumInput = int(input(&quot;What decimal number would you like to convert to binary?&quot;)) #x = int(NumInput) def DecBinConversion(x): for i in range(31, -1, -1): k = x &gt;&gt; i if (k &amp; 1): print(&quot;1&quot;, end=&quot;&quot;) else: print(&quot;0&quot;, end=&quot;&quot;) x = NumInput DecBinConversion(x) . 00000000000000000000000000000101 .",
            "url": "https://h4seeb-cmd.github.io/turtle/week%2013/2022/11/30/homework.html",
            "relUrl": "/week%2013/2022/11/30/homework.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post54": {
            "title": "Simulations- Unit 3 Section 16 Lesson",
            "content": "3.16 Intro to Simulations - Alexa . What is a simulation? A simulation is an imitation of a situation or process | Aka a virtual experiment | . | . Guiding questions for a simulation: . - What makes it a simulation? - What are it’s advantages and disadvantages? One advantage is that simulations can account for natural variables using random number generators. One disadvantage is that simulations can often contain bias. - In your opinion, would an experiment be better in this situation? . Examples of Simulations: . Simulations are used all the time over many different industries . testing safety of a car | games | testing the efficiency of a parking lot | testing a new train route | . import random as r range1 = int(input(&quot;Whats the lowest number you want to randomize by??&quot;)) range2 = int(input(&quot;Whats the highest number you want to randomize by??&quot;)) print(r.randint(range1,range2)) # CHALLENGE 2 #def clothingRemover(): . 3 . import random as r def coinFlip(): randomflip = r.randint(1, 3) # Weighting the coins, basically increasing the range that it will be heads. if randomflip &gt; 1: #assigning anything greater than 1 to be heads. If 2 or 3 is chosen then it will print, &quot;Heads&quot; print(&quot;Heads&quot;) else: print(&quot;Tails&quot;) #Tossing the coin 5 times: t1 = coinFlip() t2 = coinFlip() t3 = coinFlip() t4 = coinFlip() t5 = coinFlip() . Heads Tails Tails Heads Heads . Simulation vs. Experiment . Experiment definition: procedure undertaken to make a discovery, test a hypothesis, or demonstrate a known fact | . So, why use a simulation? . Advantages: Can be safer | More cost-effective | More efficient | More data in less time | . | Disadvantages: Not as accurate as experiments | outside factors not included (ex: in rolling dice simulation gravity and air resistance) | . | When do you not use a simulation? when a situation already has set results/data (won&#39;t change) | examples: a score in a game, most purchased food, average yearly wage | . | . leads into real life game example: . . . A Real Life Example: Four Corners - Lydia &amp; Ava . an example of a simulation and experiment = the game of 4 corners | games are simulations! | We are going to play a round of 4 corners here in class. This game is a real life version of our simulation. | Mr. Mortensen will be the person in the middle choosing corners. | Everyone will choose a corner, and if your corner is chosen, you are out! | . | . The rules of the game: . a person stands in the center of a room and the 4 coners are labeled 1-4 | Every player chooses a corner while the person in the middle closes their eyes | person in the middle chooses/calls out a number when instructed | every player in the chosen corner is now out | contine until there is a winner! | Let&#39;s play! . Below is the simulation of the four corners game! . import random status = &quot;in&quot; while status != &quot;out&quot;: chooseCorner = input(&quot;What corner do you choose?&quot;) corner = random.randint(1,4) if int(chooseCorner) == corner: status = &quot;out&quot; print(&quot;You chose corner number &quot; + chooseCorner + &quot; and you&#39;re OUT&quot;) else: print(&quot;You chose corner number &quot; + chooseCorner + &quot; and are still in!&quot;) . ValueError Traceback (most recent call last) /home/h4seeb/vscode/turtle/_notebooks/2022-11-30-SimulationStudentLesson.ipynb Cell 10 in &lt;cell line: 4&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu-20.04/home/h4seeb/vscode/turtle/_notebooks/2022-11-30-SimulationStudentLesson.ipynb#X11sdnNjb2RlLXJlbW90ZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; chooseCorner = input(&#34;What corner do you choose?&#34;) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu-20.04/home/h4seeb/vscode/turtle/_notebooks/2022-11-30-SimulationStudentLesson.ipynb#X11sdnNjb2RlLXJlbW90ZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; corner = random.randint(1,4) -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu-20.04/home/h4seeb/vscode/turtle/_notebooks/2022-11-30-SimulationStudentLesson.ipynb#X11sdnNjb2RlLXJlbW90ZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; if int(chooseCorner) == corner: &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu-20.04/home/h4seeb/vscode/turtle/_notebooks/2022-11-30-SimulationStudentLesson.ipynb#X11sdnNjb2RlLXJlbW90ZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; status = &#34;out&#34; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu-20.04/home/h4seeb/vscode/turtle/_notebooks/2022-11-30-SimulationStudentLesson.ipynb#X11sdnNjb2RlLXJlbW90ZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; print(&#34;You chose corner number &#34; + chooseCorner + &#34; and you&#39;re OUT&#34;) ValueError: invalid literal for int() with base 10: &#39;&#39; . Comparing Experiment to Simulation Code: . Mr. Mortensen (person in the middle) = random.randint | if statement = if player is out | else = safe/continue | while loop = repeats process until there is a winner of the game | . DEBRIEF QUESTIONS: . Why is it better to code simulations than experiement in real life? | What makes this game a simulation? | What are its advantages and disadvantages? | Would an experiment be better in this situation? (raise hands for each team) | . . Hack #1 . Create an idea for a simulation and describe it (you don’t actually have to code it just think about/answer the guiding questions). | . An idea for a simulation would be a simulation that shows the effects of climate change. It would simulate real world conditions and a change in the climate based off of previous statistics. An experiment would not work very well here as it would be very hard to simulate the world&#39;s climate an how it changes based on different variables. A simulation would work very well, as the computer can calculate all of these values with all of the world&#39;s data to compile it into a simulated world where we can view the effects of climate change. . Hack #2 (collegeboard based questions) . Simulations Quiz (either screenshot or paste quiz in your notebook): | . questions_number = 6 answers_correct = 0 questions = [ &quot;True or False: Simulations will always have the same result. n A: True, n B: False&quot;, &quot;True or False: A simulation has results that are more accurate than an experiment n A: True, n B: False&quot;, &quot;True or False: A simulation can model real world events that are not practical for experiments n A: True, n B: False&quot;, &quot;Which one of these is FALSE regarding simulations n A: Reduces Costs, n B: Is safer than real life experiments, n C: More Efficient, n D: More accurate than real life experiments&quot;, &quot;Which of the following scenarios would be the LEAST beneficial to have as a simulation n A: A retail company wants to identify the item which sold the most on their website, n B: A restaurant wants to determine if the use of robots will increase efficiency, n C: An insurance company wants to study the impact of rain on car accidents, n D: A sports car company wants to study design changes to their new bike design &quot;, &quot;Which of the following is better to do as a simulation than as a calculation n A: Keeping score at a basketball game, n B: Keeping track of how many games a person has won, n C: Determining the average grade for a group of tests, n D: Studying the impact of carbon emissions on the environment&quot; ] question_answers = [ &quot;B&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;A&quot;, &quot;D&quot; ] print(&quot;Welcome to the Simulations Quiz!&quot;) def ask_question (question, answer): print(&quot; n&quot;, question) user_answer = input(question) print(&quot;You said: &quot;, user_answer) if user_answer == answer: print(&quot;Correct!&quot;) global answers_correct answers_correct = answers_correct + 1 else: print(&quot;You are incorrect&quot;) for num in range(questions_number): ask_question(questions[num], question_answers[num]) print(&quot;You scored: &quot;, answers_correct, &quot;/6&quot;) . Welcome to the Simulations Quiz! True or False: Simulations will always have the same result. A: True, B: False You said: B Correct! True or False: A simulation has results that are more accurate than an experiment A: True, B: False You said: B Correct! True or False: A simulation can model real world events that are not practical for experiments A: True, B: False You said: A Correct! Which one of these is FALSE regarding simulations A: Reduces Costs, B: Is safer than real life experiments, C: More Efficient, D: More accurate than real life experiments You said: D Correct! Which of the following scenarios would be the LEAST beneficial to have as a simulation A: A retail company wants to identify the item which sold the most on their website, B: A restaurant wants to determine if the use of robots will increase efficiency, C: An insurance company wants to study the impact of rain on car accidents, D: A sports car company wants to study design changes to their new bike design You said: A Correct! Which of the following is better to do as a simulation than as a calculation A: Keeping score at a basketball game, B: Keeping track of how many games a person has won, C: Determining the average grade for a group of tests, D: Studying the impact of carbon emissions on the environment You said: D Correct! You scored: 6 /6 . import random as r def coinflip(): #def function randomflip = r.randint(1, 3) #picks either 0 or 1 randomly (50/50 chance of either) if randomflip &gt;= 2: #assigning 0 to be heads--&gt; if 0 is chosen then it will print, &quot;Heads&quot; print(&quot;Heads&quot;) else: if randomflip == 1: #assigning 1 to be tails--&gt; if 1 is chosen then it will print, &quot;Tails&quot; print(&quot;Tails&quot;) #Tossing the coin 5 times: t1 = coinflip() t2 = coinflip() t3 = coinflip() t4 = coinflip() t5 = coinflip() . Heads Tails Tails Heads Heads . import random as r def randomNumber(): n = r.randint(0,255) return n def binConvert(N): bin(N) return N def survivors(): household = [&quot;nathan&quot;, &quot;sorry&quot;, &quot;alex&quot;, &quot;haseeb&quot;, &quot;mort&quot;, &quot;yeung&quot;, &quot;chinmay&quot;, &quot;tanay&quot;] . . . Rolling a Dice Example - Sri . Below is a simulation of rolling dice! Examine the code and think about how this simulation works and its purpose! . def parse_input(input_string): if input_string.strip() in {&quot;1&quot;, &quot;2&quot;, &quot;3&quot;,&quot;4&quot;, &quot;5&quot;, &quot;6&quot;}: return int(input_string) else: print(&quot;Please enter a number from 1 to 6.&quot;) raise SystemExit(1) import random def roll_dice(num_dice): roll_results = [] for _ in range(num_dice): roll = random.randint(1, 6) roll_results.append(roll) return roll_results num_dice_input = input(&quot;How many dice do you want to roll? [1-6] &quot;) num_dice = parse_input(num_dice_input) roll_results = roll_dice(num_dice) print(&quot;you rolled:&quot;, roll_results) . you rolled: [5, 1, 2] . . . Game of Life - Lydia &amp; Ava . Below is a simulation of the Game of Life, originally written by John Horton Conway. Mr. Mortensen has this game on the APCSP site and we think that it is a great example of an interactive simulation. . What it is . This game is an unpredictable cellular automaton | automaton = simulates and imitates human life, hence why this is called the game of life | After creating the initial configuration, the game evolves without pattern | . How it works . Cells in this game are alive or dead, similar to binary where they are on or off | The user created an initial configuration of cells on the grid, and presses play (tap the squares on the grid) | a cells&#39;s status (alive or dead, on or off) depends on the surrounding 8 cells status (surrounding 8 boxes). Here are the rules: The birth rule= a dead cell (blue box) that is surrounded by at least 3 alive cells (yellow boxes), will become alive | The death rule= an alive cell (yellow) with no or only one surviving cell around it dies (becomes blue) | Cell survival= an alive cell (yellow) with 2 or 3 alive neighboring cells will stay alive | . | . Try it Out! . Use the grid below to create cell figurations, press play, and watch your cells die, live, and move around! . . Remix of Game of Life . start step . . Hack #3 . Describe the rolling dice simulation (answer guiding questions) | . Hack #4 . Add a feature onto the rolling dice simulation above ex: a 14-sided dice or expand the purpose of the simulation (hint: use conditionals to make dice part of a game/real life situation) | . | . . . Hacks Overview . Use these guiding questions for a simulation: . - What makes it a simulation? - What are it’s advantages and disadvantages? - In your opinion, would an experiment be better in this situation? . Hack #1 (0.3) . Create an idea for a simulation and describe it (you don’t actually have to code it just think about/answer the guiding questions). | . Hack #2 (0.1) . Simulations Quiz (either screenshot or paste quiz in your notebook) | . Hack #3 (0.2) . Describe the rolling dice simulation (answer guiding questions) | . Hack #4 (0.3) . Add a feature onto the rolling dice simulation above ex: a 14-sided dice or expand the purpose of the simulation (hint: use conditionals to make dice part of a game/real life situation) | . | . Extra Credit (0.1) . For the extra 0.1: try coding a simple simulation and describe it (guiding question) | .",
            "url": "https://h4seeb-cmd.github.io/turtle/studentlesson/simulations",
            "relUrl": "/studentlesson/simulations",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post55": {
            "title": "Searching Introduction",
            "content": "What is searching? . In certain computer programs and applications, one might find the need to locate and retrieve a data value and/or it&#39;s index. Searching algorithms could be done in either intervals or sequences, and certain algorithms could be more efficient than others, with benefits and drawbacks to each. . The Naive Approach . The most intuitively obvious solution to the searching problem is to sequentialy check each successful value in the data structure until either a matching value is found, or the entire structure has been transversed. This thought process could be explained graphically in this example . This algorithm could also be expressed in code, as shown below. . def sequentialSearch(arr, target): N = len(arr) # Declare N as length of array for i in range(N): # Iterate over the list if arr[i] == target: # Check for match return i # Match found, return index and end function call return -1 # Element not found . Sequential Search - Larger Inputs . Although for selection sort is seemingly fast for smaller inputs, it is clear that it cannot keep up with increasing input sizes. Because sequential search checks every value of the given array, the algorithm&#39;s overall runtime increases &quot;linearly&quot; with the input size. . i.e. Pretend that one check takes one second, and that we are searching for the last element in an array. If the array length is 4, it would take 4 seconds to find the last element, whereas if the array length is 86400 indices long, it would take a whole day to find the element. . Hence, although selection sort is known for its simplicity, it is unfeasible for large inputs . Below, we have created three sorted lists of length 100,1000000,100000000. . import time arr1 = [i for i in range(100)] arr2 = [i for i in range(1000000)] arr3 = [i for i in range(100000000)] . To analyze the sequential search algorithm, we will check for the worst case scenario, where runtime is maximized. This is because when measuring the efficiency of our algorithm, we want to be able to guarantee an upper limit or set amount of time for our program to finish running. To do this, we will attempt to search for the last element in the array . print(&quot;length of list: &quot;, len(arr1)) s = time.time() print(&quot;Index: &quot;, sequentialSearch(arr1,99)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 100 Index: 99 Execution time: 0.05602836608886719 ms . print(&quot;length of list: &quot;, len(arr2)) s = time.time() print(&quot;Index: &quot;, sequentialSearch(arr2,999999)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 1000000 Index: 999999 Execution time: 58.67457389831543 ms . print(&quot;length of list: &quot;, len(arr3)) s = time.time() print(&quot;Index: &quot;, sequentialSearch(arr3,99999999)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 100000000 Index: 99999999 Execution time: 5162.384986877441 ms . As you can see, as the input list grows larger and larger, the overall runtime of the program increases linearly as well, resulting in a lower scalability for the sequential search algorithm. . Binary Search . Binary search is an efficient way to iterate through a SORTED list to find a requested value. This is done through checking the middle value of a list and checking if the requested value is greater than or less than the middle value. You can start to see why the requested list must be sorted. If the list is not sorted, this logic is flawed, and the binary search algorithm will no longer work. . Unlike the sequential search method, binary search doesn&#39;t check for each successive element until a match is found. In every iteration the algorithm is making a binary decision; if the selected element is larger or smaller than the target. . How exactly does this work? Lets look at these amazing ms paint drawings: . i was too lazy to make a third so ur gonna have to live with 2 :) . This algorithm is extremely efficient as the maximum number of cycles in binary search is equal to log base 2 of the closest, next power of two, to length of list. . If the array is 8 items long, the maximum possible cycles would be 3 (log base 2 of 8 is 3) . If the array is 7 items long, the maximum possible cycles would STILL be 3 as the closest power of 2 to 7 is 8. . If the array is 9 items long, the maximum possible cycles INCREASES to 4, as the closest, next power of two, is 16. . def binarySearch(array, target): # Parameters: array is the given array and target is what we are looking for low = 0 # the starting lower bound high = len(array)-1 # the starting upper bound while high &gt;= low: # we will keep running until we run out of possible subarrays... mid = (high + low) // 2 # define the middle of the list to be the item at the index of the average of the lower and upper bound if array[mid] == target: # if item is in the middle of the list... we found what we are looking for! return mid # therefore, we return the index of where we found the item. elif array[mid] &gt; target: # if item is less than the middle of the list, this must mean that the item is on the lower half of the list high = mid-1 # therefore, we set the upper bound of the search to be the last item of the lower half else: # if item is neither less than or equal to the middle of the list, this must mean that the item is on the upper half of the list low = mid+1 # therefore, we set the lower bound of the search to be the first item of the upper half # if nothing is returned by the time the while loop ends, that means item MUST be missing from list return False # therefore we tell the user that the requested item was not found . Likewise, we can also take a recursive approach to this problem, note the similarities . def BinarySearchRecursion(arr, target, lo, hi): if lo &gt; hi: return False mid = (lo+hi)//2 if arr[mid] == target: return mid elif arr[mid] &gt; target: return BinarySearchRecursion(arr, target, lo, mid-1) elif arr[mid] &lt; target: return BinarySearchRecursion(arr, target, mid+1, hi) . Now, let&#39;s compare the runtime with the same lists we tried with the sequential search algorithm. . print(&quot;length of list: &quot;, len(arr1)) s = time.time() print(&quot;Index: &quot;, binarySearch(arr1,99)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 100 Index: 99 Execution time: 0.05507469177246094 ms . print(&quot;length of list: &quot;, len(arr2)) s = time.time() print(&quot;Index: &quot;, binarySearch(arr2,999999)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 1000000 Index: 999999 Execution time: 0.17070770263671875 ms . print(&quot;length of list: &quot;, len(arr3)) s = time.time() print(&quot;Index: &quot;, binarySearch(arr3,99999999)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 100000000 Index: 99999999 Execution time: 0.06628036499023438 ms . arr4 = [1,4,5,8,10,13,145,1938] print(&quot;Index: &quot;, binarySearch(arr4,17)) . Index: False . Challenges and Homework . You have one homework problem. . Yes just one. . Don&#39;t get excited though. . Problem: Given a specific integer N, return the square root of N (R) if N is a perfect square, otherwise, return the square root of N rounded down to the nearest integer . Input: N (Integer) . Output: R (Integer) . Constraints: Do not use any built-in math operations such as sqrt(x) or x**(0.5), Try complete the problem in logarithmic time. . Hint 1: Maybe you can use Binary Search to try and reduce the number of checks you have to perform? . Hint 2: Is there a mathematical pattern amongst numbers and their square roots that could help you reduce the number of searches or iterations you must execute? Is there some value or rule you can set before applying binary search to narrow the range of possible values? . Run the very last code segment below to load test cases and submission function . import math def sqrt(N): # Checking to see if the number is 1 or 0, as the sqrt of 1 = 1 and the sqrt 0 = 0. if N &lt; 2: return N y = N z = (y + (N/y)) // 2 while y - z &gt;= 0.00001: y = z z = (y + (N/y)) / 2 return z if __name__ == &#39;__main__&#39;: N = 25 answer = sqrt(N) print(answer) . 5.0 . from math import sqrt as sq test_cases = [0,1,4,85248289,22297284,18939904,91107025,69122596,9721924,37810201,1893294144,8722812816,644398225] answers = [int(sq(x)) for x in test_cases] def checkValid(): for i in range(len(test_cases)): if sqrt(test_cases[i]) == answers[i]: print(&quot;Check number {} passed&quot;.format(i+1)) else: print(&quot;Check number {} failed&quot;.format(i+1)) checkValid() . Check number 1 passed Check number 2 passed Check number 3 passed Check number 4 passed Check number 5 passed Check number 6 passed Check number 7 passed Check number 8 passed Check number 9 passed Check number 10 passed Check number 11 passed Check number 12 passed Check number 13 passed .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/11/29/searching-introduction.html",
            "relUrl": "/2022/11/29/searching-introduction.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post56": {
            "title": "Developing Algorithms (JavaScript)",
            "content": "Review . if-else statements . Syntax: . if (condition) { } else if (condition 2) { } else { } . for loops . for (let i = number; i &lt; number; i++) { // code } . Conditionals vs Booleans . Conditionals and booleans can be equivalent. . For example, let&#39;s say there are two booleans: rainy and sunny. . Let&#39;s look at the following code: . sunny = true; rainy = false; . if (sunny) { umbrella = false; } else if (rainy) { umbrella = true; } else { umbrella = false; } console.log(umbrella); . false . The code above is the same as below: . umbrella = !sunny &amp;&amp; rainy; console.log(umbrella); . false . To determine if two conditionals and booleans are the same, you can substitute the four possibilities that the two booleans (sunny and rainy) can be (listed below) into the conditional and boolean and see if both cases match: . sunny = true, rainy = true . sunny = true, rainy = false . sunny = false, rainy = true . sunny = false, rainy = false . Challenge . Using JavaScript, create an algorithm that takes in an IP address and a subnet mask and computes the network address. . Overview . As we&#39;ve seen in Unit 4.1, an IP address is a 32 bit number that uniquely identifies each device. (See this for a recap). Something extra is that an IP address also comes with a subnet mask. A subnet mask is also a 32 bit number that identifies what network an IP address in in through a process that uses the bitwise AND. . In ANDing: . 0 + 0 = 0 . 0 + 1 = 0 . 1 + 0 = 0 . 1 + 1 = 1 . The following are the steps to determine the network that an IP address is in given the subnet mask: . Example: IP address: 192.168.0.1 . Subnet mask: 255.255.255.0 . Convert the IP address into binary: 192.168.0.1 -&gt; 11000000.10101000.00000000.00000001 | Convert the subnet mask into binary: 255.255.255.0 -&gt; 11111111.11111111.11111111.00000000 | Do a bitwise AND operation on the binary IP address and subnet mask: | 11000000.10101000.00000000.00000001 +11111111.11111111.11111111.00000000 =11000000.10101000.00000000.00000000 . Convert the result back to decimal: 11000000.10101000.00000000.00000000 -&gt; 192.168.0.0 | The network address is 192.168.0.0 .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/11/29/developing-algorithms-js.html",
            "relUrl": "/2022/11/29/developing-algorithms-js.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post57": {
            "title": "Developing Algorithms",
            "content": "Algorithms can be written in different ways and still accomplish the same tasks. Algorithms that look similar often yield differnet outputs. To solve the same problem, many different algorithms can be used. . Therefore, algorithms are very important for programmers, and today we&#39;re going to explore how to determine the outcome of algorithms, how to deteremine the output of similar algorithms, how to edit existing algorithms, and how to develop our own algorithms. . Determine the outcome of algorithms . Consider the following algorithm. . def mystery(num, num2): if (num % num2 == 0): print(&quot;True&quot;) else: print(&quot;False&quot;) mystery(20, 4) . True . What does the algorithm do? Please explain in words.An algorithm checks whether or not the remainder of the expression above = 0. If that&#39;s the case, it prints True, if it isn&#39;t, it prints False. . | What if I put in 30 as num and 4 as num2. What would be the output?The output would be False, as 30 divided by 4 does not equal 0. . | Determine the outcome of similar algorithms . What is the output of this algorithm? . it is too hot outside . temp = 95 if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) if (temp &gt;= 65): print(&quot;I will go outside&quot;) else: print(&quot;it is too cold outside&quot;) . it is too hot outside . What is the output of this algorithm? it looks similar but the output is different! . it is too hot outside i will go outside . temp = 95 if (temp &gt;= 65): if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) else: print(&quot;i will go outside&quot;) if (temp &lt; 65): print(&quot;it is too cold outside&quot;) . it is too hot outside . Editing Algorithms . Task: Please edit the algorithm above to have it yield the same results as the previous algorithm! (no matter what temp you put in) . Developing Algorithms . To develop algorithms, we first need to understand what the question is asking. Then, think about how you would approach it as a human and then try to find what pattern you went through to arrive at the answer. Apply this to code, and there you have it! An algorithm! . Let&#39;s say you wanted to sum up the first five integers. How would you do this in real life? Your thought process would probably be: . The sum of the first integer is 1. | Then, increase that integer by 1. I now add 2 to my existing sum (1). My new sum is 3. | Repeat until I add 5 to my sum. The resulting sum is 15. | . Now let&#39;s translate this into code. . sum = 0 # start with a sum of 0 for i in range (1, 6): # you will repeat the process five times for integers 1-5 sum = sum + i # add the number to your sum print(sum) # print the result . 15 . Task: Write an algorithm in python that sums up the first 5 odd integers. You can use the following code as a starter. . sum = 0 counter = 1 sum = 0 for i in range (1, 10, 2): sum = sum + i print(sum) . 25 . Homework . Create an algorithm that will start with any positive integer n and display the full sequence of numbers that result from the Collatz Conjecture. The Collatz Conjecture is as follows: . start with any positive integer | if the number is even, divide by 2 | if the number is odd, multiply by 3 and add 1 | repeat steps 2 and 3 until you reach 1 | Example: if the starting number was 6, the output would be 6, 3, 10, 5, 16, 8, 4, 2, 1 .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/11/29/Developing-Algorithms.html",
            "relUrl": "/2022/11/29/Developing-Algorithms.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post58": {
            "title": "U3s1&2",
            "content": "",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/11/28/u3s1&2.html",
            "relUrl": "/2022/11/28/u3s1&2.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post59": {
            "title": "Title",
            "content": "title: Team 1 Presentation HMWK | toc: true | comments: true | branch: master | comments: true | badges: true | author: Haseeb Beg | categories: [fastpages, jupyter, Week 10] | layout: post | . data = [104, 101, 4, 105, 308, 103, 5, 107, 100, 306, 106, 102, 108] min_valid = 100 max_valid = 200 for i in range (len(data)): if data[i] &gt; max_valid: print(data[i],i) elif data[i] &lt; min_valid: print(data[i],i) . 4 2 308 4 5 6 306 9 . albums = [ (&quot;Welcome to my Nightmare&quot;, &quot;Alice Cooper&quot;, 1975, # First album list [ (1, &quot;Welcome to my Nightmare&quot;), (2, &quot;Devil&#39;s Food&quot;), (3, &quot;The Black Widow&quot;), (4, &quot;Some Folks&quot;), (5, &quot;Only Women Bleed&quot;), ] ), (&quot;Bad Company&quot;, &quot;Bad Company&quot;, 1974, # Second album list [ (1, &quot;Can&#39;t Get Enough&quot;), (2, &quot;Rock Steady&quot;), (3, &quot;Ready for Love&quot;), (4, &quot;Don&#39;t Let Me Down&quot;), (5, &quot;Bad Company&quot;), (6, &quot;The Way I Choose&quot;), (7, &quot;Movin&#39; On&quot;), (8, &quot;Seagull&quot;), ] ), (&quot;Nightflight&quot;, &quot;Budgie&quot;, 1981, [ (1, &quot;I Turned to Stone&quot;), (2, &quot;Keeping a Rendezvous&quot;), (3, &quot;Reaper of the Glory&quot;), (4, &quot;She Used Me Up&quot;), ] ), (&quot;More Mayhem&quot;, &quot;Imelda May&quot;, 2011, [ (1, &quot;Pulling the Rug&quot;), (2, &quot;Psycho&quot;), (3, &quot;Mayhem&quot;), (4, &quot;Kentish Town Waltz&quot;), ] ) ] albumChoice = int(input(&quot;What album do you want to play?&quot;)) songChoice = int(input(&quot;What song do you want to play?&quot;)) print(&quot;Playing &quot;{0} &quot; from album &quot;{1} &quot;&quot;.format(albums[albumChoice-1][3][songChoice-1][1],albums[albumChoice-1][0])) . Playing &#34;I Turned to Stone&#34; from album &#34;Nightflight&#34; .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/11/28/Team1HMWK.html",
            "relUrl": "/2022/11/28/Team1HMWK.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post60": {
            "title": "Lists and Iteration Homework",
            "content": "Overview and Notes: 3.10 - Lists . Make sure you complete the challenge in the challenges section while we present the lesson! | . Add your OWN Notes for 3.10 here: . Lists are collections of data that can store lots of information | You can manipulate lists to be changed automatically | Lists have indexs that represent the location of an element in their respective list. Normally start on 0 in most coding languages. | . Fill out the empty boxes: . Pseudocode Operation Python Syntax Description . aList[i] | aList[i] | Accesses the element of aList at index i | . x ← aList[i] | x = aList[i] | Assigns the element of aList at index i to a variable &#39;x&#39; | . aList[i] &lt;-- x | aList[i] = x | Assigns the value of a variable &#39;x&#39; to the element of a List at index i | . aList[i] ← aList[j] | aList[i] = aList[j] | Assigns value of aList[j] to aList[i] | . INSERT(aList, i, value) | aList.insert(i, value) | value is placed at index i in aList. Any element at an index greater than i will shiftone position to the right. | . APPEND(aList, value) | aList.append(value) | _value is placed in index i in aList. Any element with an index value greater than i will shift one position to the right. | . REMOVE(aList, i) | aList.pop(i)ORaList.remove(value) | Removes item at index i and any values at indices greater than i shift to the left. Length of aList decreased by 1. | . Overview and Notes: 3.8 - Iteration . Add your OWN Notes for 3.8 here: . To iterate is to repeat. In coding, it is used to describe repeating sections of code based on a set of programs. | Make sure to not have a dead loop that infinitely repeats. | Automating code is possible using various types of loops. | We can make loops inside loops. | . Homework Assignment . Instead of us making a quiz for you to take, we would like YOU to make a quiz about the material we reviewed. . We would like you to input questions into a list, and use some sort of iterative system to print the questions, detect an input, and determine if you answered correctly. There should be at least five questions, each with at least three possible answers. . You may use the template below as a framework for this assignment. . qCorrect: 0 qTotal: 5 questions = [ (&quot;Q1: what is the python syntax for accessing an element of a list?&quot;, &quot;A) aList[i]&quot;, &quot;B) x &lt;-- aList[3]&quot;, &quot;C) idk&quot;, &quot;A&quot;), (&quot;Q2: what is the psuedocode syntax for assigning a value of one index in a list to another?&quot;, &quot;A) aList.insert(i, value)&quot;, &quot;B) WHAT IS THIS&quot;, &quot;C) aList[i] = aList[j]&quot;, &quot;C&quot;), (&quot;Q3: what is the syntax for appending something into a string?&quot;, &quot;A) aList.append(value)&quot;, &quot;B) REMOVE(aList, i)&quot;, &quot;C) help&quot;, &quot;A&quot;), (&quot;Q4: what does it mean to append something?&quot;, &quot;A) To join something together&quot;, &quot;B) To seperate something&quot;, &quot;C) what is python?&quot;, &quot;A&quot;), (&quot;Q5: what is a recursive loop?&quot;, &quot;A) a loop that is for something&quot;, &quot;B) a function&quot;, &quot;C) loops that involve incrementing a variable until it reaches a certain break point.&quot;, &quot;C&quot;) ] def printQuestion(tuple): print(tuple[0]) print(tuple[1]) print(tuple[2]) print(tuple[3]) qCorrect = 0 qTotal = 5 def questionloop(): qCorrect = 0 qTotal = 5 for i in range(len(questions)): print(printQuestion(questions[i])) qAnswer = input(&quot;insert answer here...&quot;) if qAnswer == questions[i][4]: print(&quot;correct!&quot;) qCorrect += 1 else: print(&quot;L you got it wrong&quot;) return qCorrect qCorrect = questionloop() print(&quot;you got&quot; + &quot; &quot; + str(qCorrect) + &quot; &quot; + &quot;/&quot; + &quot; &quot; + str(qTotal) + &quot; &quot; + &quot;right!&quot;) . Q1: what is the python syntax for accessing an element of a list? A) aList[i] B) x &lt;-- aList[3] C) idk None correct! Q2: what is the psuedocode syntax for assigning a value of one index in a list to another? A) aList.insert(i, value) B) WHAT IS THIS C) aList[i] = aList[j] None correct! Q3: what is the syntax for appending something into a string? A) aList.append(value) B) REMOVE(aList, i) C) help None correct! Q4: what does it mean to append something? A) To join something together B) To seperate something C) what is python? None L you got it wrong Q5: what is a recursive loop? A) a loop that is for something B) a function C) loops that involve incrementing a variable until it reaches a certain break point. None L you got it wrong you got 3 / 5right! . Hacks . Here are some ideas of things you can do to make your program even cooler. Doing these will raise your grade if done correctly. . Add more than five questions with more than three answer choices | Randomize the order in which questions/answers are output | At the end, display the user&#39;s score and determine whether or not they passed | . Challenges . Important! You don&#39;t have to complete these challenges completely perfectly, but you will be marked down if you don&#39;t show evidence of at least having tried these challenges in the time we gave during the lesson. . 3.10 Challenge . Follow the instructions in the code comments. . grocery_list = [&#39;apples&#39;, &#39;milk&#39;, &#39;oranges&#39;, &#39;carrots&#39;, &#39;cucumbers&#39;] # Print the fourth item in the list print(grocery_list[3]) # Now, assign the fourth item in the list to a variable, x and then print the variable x = grocery_list[3] print(x) # Add these two items at the end of the list : umbrellas and artichokes grocery_list.append(&quot;umbrellas&quot;) grocery_list.append(&quot;artichokes&quot;) # Insert the item eggs as the third item of the list grocery_list.insert(2,&quot;eggs&quot;) # Remove milk from the list grocery_list.remove(&quot;milk&quot;) # Assign the element at the end of the list to index 2. Print index 2 to check grocery_list[2] = grocery_list[-1] print(grocery_list[2]) # Print the entire list, does it match ours ? print(grocery_list) # Expected output # carrots # carrots # artichokes # [&#39;apples&#39;, &#39;eggs&#39;, &#39;artichokes&#39;, &#39;carrots&#39;, &#39;cucumbers&#39;, &#39;umbrellas&#39;, &#39;artichokes&#39;] . carrots carrots artichokes [&#39;apples&#39;, &#39;eggs&#39;, &#39;artichokes&#39;, &#39;carrots&#39;, &#39;cucumbers&#39;, &#39;umbrellas&#39;, &#39;artichokes&#39;] . 3.8 Challenge . Create a loop that converts 8-bit binary values from the provided list into decimal numbers. Then, after the value is determined, remove all the values greater than 100 from the list using a list-related function you&#39;ve been taught before. Print the new list when done. . Once you&#39;ve done this with one of the types of loops discussed in this lesson, create a function that does the same thing with a different type of loop. . binarylist = [&quot;01001001&quot;, &quot;10101010&quot;, &quot;10010110&quot;, &quot;00110111&quot;, &quot;11101100&quot;, &quot;11010001&quot;, &quot;10000001&quot;] declist = [] # how would I reverse engineer binary bit-by-bit? I don&#39;t understand an ounce as to what to do. def binary_convert(binarylist): print(int(binarylist[0])) # i guess i could try and reverse the remainder stuff from dec -&gt; bin but i don&#39;t know how i could go about it # the issue lies with the fact that this is a list with strings. binary_convert(binarylist) . 1001001 .",
            "url": "https://h4seeb-cmd.github.io/turtle/homework/",
            "relUrl": "/homework/",
            "date": " • Nov 26, 2022"
        }
        
    
  
    
        ,"post61": {
            "title": "Big idea 3!",
            "content": "3.3 Expressions(Show video 1 and 3) . Vocab: fill in the blanks . the symbol for exponent is * the symbol for addition is + the symbol for subtraction is - the symbol for multiplication is the symbol for division is / the symbol for modulus is % an algorithm is a sequence of actions that serves to create . Sequencing Practice: the code below does not follow the intended steps below. change the code so that it does so. . divide value1 by 10(value1 = 5) | multiply 2 from the result of the step 1 | subtract 4 from the result of the step 2 | print the result of step 3 | value1 = 5 value2 = value1 / 10 #step 1 value3 = value2 * 2 #step 2 value4 = value3 - 4 #step 3 print(value4) . -3.0 . Selection/Iteration Practice: Create a function to print ONLY the numbers of numlist that are divisble by 3. Hint: use the MOD operator (a % b) to find the remainder when a is divided by b. . numlist = [3,4,9,76,891] for i in range(len(numlist)): if int(numlist[i])%3==0: print(str(numlist[i]) + &quot; is divisible by 3&quot;) continue else: continue . 3 is divisible by 3 9 is divisible by 3 891 is divisible by 3 . Homework/Binary Adaptation: Create a python function that will convert a decimal number 1-255 to binary using mathematical operations and powers of 2. Challenge: add frontend with javascript or html. . import random def convert(dec): bin = &quot;&quot; i = 7 while i &gt;=0: if dec % (2**i) == dec: bin = bin + &quot;0&quot; i -= 1 else: bin = bin + &quot;1&quot; dec -= 2**i i -= 1 print(bin) convert(random.randint(0,255)) . 01011101 . 3.4 Strings(Show video 1) . Vocab: fill in the blanks using the video . Index is a number representing a position, like a character&#39;s position in a string or a string&#39;s position in a list. Concatenation is the process of combining 2 strings. Length is the amount of characters in a string. A substring is a part of a string :) . What is psuedocode? . Pseudocode is writing out a program in plain language with keywords that are used to refer to common coding concepts. . Can you think of some benefits of using pseudocode prior to writing out the actual code? . Choose an everyday activity | Imagine that you are providing instructions for this activity to a person who has never done it before | Challenge someone to do the steps you wrote out | Ex. Brushing Teeth . Pick up your toothbrush | Rinse toothbrush | Pick up toothpaste | Place toothpaste on the toothbrush | Rinse toothbrush again | Brush teeth in a circular motion | Spit | Wash mouth | Rinse toothbrush | You have brushed your teeth! | Substring/Length Practice: change the print functions to print &quot;hello&quot;, &quot;bye&quot;, and the string length . #the substring will have the characters including the index &quot;start&quot; to the character BEFORE the index &quot;end&quot; #len(string) will print the length of string string = &quot;hellobye&quot; x = string[0:5] print(x) y = string[5:9] print(y) print(len(string)) . hello bye 8 . Concatenation Practice: combine string1 and string2 to make string3, then print string3. . string1 = &quot;computer&quot; string2 = &quot;science&quot; string3 = string1 + &quot; &quot; + string2 print(string3) . computer science . Homework/List Adaptation: create a function that prints the name of each string in the list and the string&#39;s length. Challenge: add frontend with javascript or html. . names = [&quot;jaden&quot;,&quot;max&quot;,&quot;dylan&quot;,&quot;orlando&quot;] def length(list): for name in names : print(name + &quot;: &quot; + str(len(name))) length(names) . jaden: 5 max: 3 dylan: 5 orlando: 7 . Stuck? . Check out what we did. | . Have any questions? . Ask us if you have any questions! | .",
            "url": "https://h4seeb-cmd.github.io/turtle/week-13/big-idea-3/2022/11/18/expressions-and-strings.html",
            "relUrl": "/week-13/big-idea-3/2022/11/18/expressions-and-strings.html",
            "date": " • Nov 18, 2022"
        }
        
    
  
    
        ,"post62": {
            "title": "Binary",
            "content": "Type any number and hit tab to convert to binary Binary :",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/11/17/binary.html",
            "relUrl": "/2022/11/17/binary.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post63": {
            "title": "Night at the Museum Notes",
            "content": "CSP . Alan, Steven, Ederick, Noor, Liav: . Calendar that takes date and weather. Can check weather in other areas as well. Search bar to search cities. . Paraas, Samarth, AJ, Haoxuan: . Motivational quote app that shows motivational quotes under different categories. Using API to pull the assigned quote list and there is a voting counter as well, similar to that of mort’s jokes API. . Team Peacock-Justin, James, Shruti and Joslyn: . API that pulls city names inputted by user and gives relevant info. Also there is a broken tetris game. . Fitness Forever-Advay, Krishiv, Dhruva, and Shivansh: . API gives motivational workout quotes. Also has a calorie calculator, along with workout tracking?? Fitness goals recorder and BMI calculator as well. . Swag Math Games-Aiden, Dash, Sabime, Ahad: . Pokemon guessing game, tetris, cookie clicker, and blackjack. APIs to track info for all of them. Extensive use of GET protocol and connecting apis. . TeamBerries: . Dictionary that uses API to get words and definitons. Survey present to get user feedback on website. Word of the day shown. Randomized. . Lyntax-Lucas, Aniket, Soham, Ryan . Hangman game that has the API usage with words and definitions. Backend has dictionary with words and definitions that randomize each game. . CSA . DN Marketplace: . Del Norte students can buy and sell things. API usage with storing user sale stuff, also input for item, price, and user info. . TeamCheese: . Quiz project with many different projects. API usage in the quiz content, however it’s janky and not well designed. . NBA Stats Site: . NBA database of teams and their best players. API usage shown in stored stats. Also, there is a search bar to search a desired team. . Reflection . Throughout NatM, I have seen various projects with various skill levels attached. Something interesting that I noticed was that the CSA projects were not too far off from the CSP projects. If anything, it was the little things, like cool hover animations, that seperated the two. .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2012/2022/11/09/NatM-notes.html",
            "relUrl": "/fastpages/jupyter/week%2012/2022/11/09/NatM-notes.html",
            "date": " • Nov 9, 2022"
        }
        
    
  
    
        ,"post64": {
            "title": "Collegeboard Final Test Corrections/Reflection",
            "content": "Test Corrections: . Question 6: . Documentation for procedure with a loop: . In the following procedure, the parameter max is a positive integer. . PROCEDURE printNums(max) { count ← 1 REPEAT UNTIL(count &gt; max) { DISPLAY(count) count ← count + 2 } } . Which of the following is the most appropriate documentation to appear with the printNums procedure? . Correct answer: B, Prints all positive odd integers that are less than or equal to max. The loop terminates when count exceeds max, so only values less than or equal to max are printed. . Question 17: . Purpose of Internet protocols: . Which of the following is a primary reason for the use of open protocols on the Internet? . Correct answer: D, Open protocols provide a way to standardize data transmission between different devices. Protocols are agreed-upon sets of rules that specify the behavior of a system. Protocols used on the Internet enable devices from different manufacturers to communicate in a standard way. . Question 43: . Value of x after REPEAT UNTIL block: . Consider the following code segment. . x ← 0 result ← 0 REPEAT UNTIL x is greater than 5 result ← result plus x x ← x plus 1 . What is the value of result after the code segment is executed? . Correct answer: C, The variables x and result are initialized to 0. Inside the loop, result is increased by x and x is increased by 1. The loop terminates when x exceeds 5. Therefore, result is assigned the sum of the integers from 0 to 5, or 15. . Question 45: . Values of counts after traversing theList: . Consider the following code segment. . theList ← [-2, -1, 0, 1, 2] count1 ← 0 count2 ← 0 FOR EACH value IN theList { IF(value &gt; 0) { count1 ← count1 + 1 } ELSE { count2 ← count2 + 1 } } . What are the values of count1 and count2 as a result of executing the code segment? . Correct answer: B, The code segment iterates through each element in the list, incrementing count1 for each positive value and incrementing count2 otherwise. The list contains two positive values, so count1 is 2 and count2 is 3. . Reflection: . Overall, the test went pretty well. I did increase my understanding of the Collegeboard pseudo-code since the last quiz. However, there are still gaps in my understanding. For one, I had to mostly guess the questions on bits, and I did have to communicate with our group with members that had not completeted the assessment at the time of collaberation to understand the concepts involved. One key thing I learned was how sensors pull at multiple intervals per second measured in Hz. .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2012/2022/11/09/CB-final-test-corrections.html",
            "relUrl": "/fastpages/jupyter/week%2012/2022/11/09/CB-final-test-corrections.html",
            "date": " • Nov 9, 2022"
        }
        
    
  
    
        ,"post65": {
            "title": "Web-API Tutorial Lecture Stuff",
            "content": "// prepare HTML defined &quot;result&quot; container for new output const resultContainer = document.getElementById(&quot;result&quot;); // keys for joke reactions const HAHA = &quot;haha&quot;; const BOOHOO = &quot;boohoo&quot;; // prepare fetch urls const url = &quot;https://flask.nighthawkcodingsociety.com/api/jokes&quot;; const like_url = url + &quot;/like/&quot;; // haha reaction const jeer_url = url + &quot;/jeer/&quot;; // boohoo reaction // prepare fetch GET options const options = { method: &#39;GET&#39;, // *GET, POST, PUT, DELETE, etc. mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;default&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;omit&#39;, // include, *same-origin, omit headers: { &#39;Content-Type&#39;: &#39;application/json&#39; // &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;, }, }; // prepare fetch PUT options, clones with JS Spread Operator (...) const put_options = {...options, method: &#39;PUT&#39;}; // clones and replaces method .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%2010/2022/10/19/webapi-tutorial-lecutre.html",
            "relUrl": "/fastpages/jupyter/week%2010/2022/10/19/webapi-tutorial-lecutre.html",
            "date": " • Oct 19, 2022"
        }
        
    
  
    
        ,"post66": {
            "title": "Qualcomm Presentation",
            "content": "Intro To Engineering . Engineering at it’s core is the practice of using math and science to solve problems. There are many different types of engineers. Some include: . Mechanical | Software | Civil | Aeronautical | Biotech One way to find your specific field that was mentioned was process of elimination. Personally for me, software and biotech seem equally lucrative and cool. | . Women in Engineering . One problem that was discussed in this presentation was that of the unfair treatment of women in STEM fields. Even in the year 2022, some companies do not take women seriously. There have even been scandals recently about companies like Activision-Blizzard harrassing women and treating them horribly. Engineering sees no gender, no concept of race, but rather, someone’s creativity and problem solving ability. . What Should I Do to Get Into a Good CS University? . Someone in the meeting asked a question regarding good CS universities and what to do in order to get into them. The response was what I expected for the most part. CS based extracurriculars and experience along with a good show of academic excellence and rigor would be ideal. I should try to find CS classes I can take at local community colleges. Additionally, in order to build my CS portfolio for the future, I should try and look to see if any companies are taking internships. 1 . Intersections Between STEM and Buisness at Qualcomm . The Tenets . There are 3 tenets to follow when working with STEM and buisness: . Stay curious | Do not give up, ever | Know the difference between invention and innovation. | . Staying curious is the key to bringing new, innovative things to the table. This desire to learn new things and implementing new ways of using said things is crucial. This leads into never giving up, as if you give up when the going gets tough, how will you find the new, innovative things. Bill Gates would not have made Microsoft if he had given up halfway through because “it was too hard” or “it had a very little chance of success.” Lastly, while invention is creating an entirely new thing, innovation is the proccess of refining said thing. .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%208/2022/10/18/QC-presi.html",
            "relUrl": "/fastpages/jupyter/week%208/2022/10/18/QC-presi.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post67": {
            "title": "CB Unit 1 Notes",
            "content": "Notes from College Board 1.1 . Learning Objectives CRD - 1.A Explain how innovations are improved through collaboration. CRD - 1.A.1 A computing innovation includes a program as an integral part of its function. CRD - 1.A.2 A computer innovation can be physica (i.e., self-driving car), non physical computing software (e.g., picture editing software), or a nonphysical computng concept (e.g., e-commerce). CRD - 1.A.3 Effective collaboration produces a computing innovation that reflects the diversity of talents and perspectives of those who designed it. CRD - 1.A.4 Collaboration that incudes diverse perspectives helps avoid bias in the development of computing innovations CRD - 1.C Demonstrate effective interpersonal skills during collaboration. CRD - 1.C.1 Effective collaborative teams practice interpersonal skills, including, but not limited to: Communication, Consesus Building, Conflict Resolution, Negotiation . Notes Different people in different departments work on different subjects and interests. . A program always start up with an idea, purpose and plan. A program must have requirements of the that meet the necessary constraints it must meet. . Developers are able to practice better interpersonal skills in a diverse team. . Pair Programming: One programmer types the code, while the other reviews each line of code. . Think-Pair-Share: Students think through a problem alone, pair with a partner to share ideas, and then share results with the class . This is the beginning of planning for the Create Performance Task assignment. More will be added to this post as weeks go by until it is time to code. . What I know that could help with the project: . How to make a quiz How to create list How to use dictionaries How to explain the code I have made What I need for the project: . Learn how to use different functions Learn how to display variables correctly Look at examples of bad, good, and great Performance Task Projects Look over the college board requirements . Notes from College Board 1.2 . Video Notes Computer programs accept input in a variety of different forms (tacile aka touch, audio, visual, text). Programs are mostly event-driven –&gt; events (mouse clicks, screen taps/swipes, physical button clicks, eyboard entries, audio keywords/phrases) are triggered by actions, which sends input to the program. Input affects output of a program. Outputs can be visual, audio,touch/feel(vibrations), text, etc. A program (aka software) is a collection of statements. A statement is a single command, a group of statements is a code segment. To describe a code segment, first state what it does, and then include how it does it. . Learning Objectives CRD - 2.A - Describe the purpose of a computing innovation. CRD - 2.A.1 - The purpose of computing innovations is to solve problems or to pursue interests through creative expression. CRD - 2.A.2 - An understanding of the purpose of a computing innovation provides developers with an improved abiltiy to develop that essential knowledge on. . Notes Different innovations are contained under different categories of innovations . Program inputs are pecies of data that are sent to computers for processing and interpretation. The computer will then perform operations and manipulate teh data in order to produce a desirable. Inputs can either come from the user themselves, or from another program. . Every event in a program is associated with an action that supplies an input to the program. . Event Driven Programming: Program segments and code fragments are executed based on events that trigger specific control flow structures rather an a smooth, sequential flow. . A program is a collection of software statements that collectively serves a specific use and performs a certain task. . The program works for a variety of inputs and situations. (Think of it like a function) . Notes from College Board 1.3 . There are multiple steps within the development process. The following phrases are commonly used when developing a program. Research, Designing, Prototyping, Testing, followed by revisions. Revisions are a key part of this process and will happen several times. This developmental process is iterative and requires refinement and revision based on testing and feedback. This may require revisiting earlier phrases of the process. Investigation is useful in development for understanding and identifying the program constraints, as well as the requirements of the people who will use the program. Investigation can be perfomed by collecting user data, having beta testing, interviews, and direct observations. . Learning Objectives CRD - 2.E - Develop a program using a development process. CRD - 2.F - Design a program and its user interface CRD - 2.E.1 - A development process can be ordered and intentional, or exploratory in nature. CRD - 2.E.2 - There are multiple development processes. The following phases are commonly used when developing a program: . Investigating and reflecting Designing Prototyping Testing CRD - 2.E.3 - A development process that is iterative requires refinement and revision based on feedback, testing, or reflection throughout the process. This may require revisiting earlier phases of the process. CRD - 2.F.1 - The design of a program incorporates investigation to determine its requirements. CRD - 2.F.2 - Investigation in a development process is useful for understanding and identifying the program constraints, as well as the concerns and interests of the people who will use the program. CRD - 2.F.3 - Some ways investigation can be performed are as follows: . Collecting data through surveys User testing Interviews CRD - 2.F.4 - Program requirements describe how a program functions and may include a description of user interactions that a program must provide. CRD - 2.F.5 - A program’s specification defines the requirements for the program. CRD - 2.F.6 - In a development process, the design phase outlines how to accomplish a given program specification. CRD - 2.F.7 - The design phase of a program may include: . Brainstorming Planning and storyboarding Organizing the program into modules and functional components Creation of diagrams that represent the layouts of the user interface Development of a testing strategy for the program . Notes from College Board 1.4 . Common Errors: To start, it’s important to note that no one is perfect. Errors are bound to happen but identifying, understanding, and fixing thoses errors is what matters more. There are 4 main types of errors when developing a program; Logic, Syntax, Run-time, and Overflow errors. . Logic errors are errors that are caused due to the programmer making a mistake in the algorithm. This causes the program to behave unexpectedly. A logic error can result in events in the program taking place in times that they are not suppose to happen in. . Syntax errors are very small mistakes made by the programmer that doesn’t match with the language. It could be a typo, unnecessary code, missing necessary code, missing characters or added characters. Characters include colon, semicolon, parenthesis, indentations, quotes, and so much more. These mistakes will cause the program to shut down. . Run-time errors happen when a program stops while it is running. This event is also known as “crashing” and the error is normally referred to as a “bug”. A run-time error can be caused by dividing by zero, wrong inputed data type, or many other errors that are commonly caused by incorrect data. . Over-flow errors occur in a program when it is required to perform a calculation that is not possible for it to run. The values in the calculations are outside the set range of values of the program. This is caused due to memory allocation constraints of the program’s language, resulting in restrictions. . Methods to Correct Errors: IDEs: Syntax errors are the easiest errors to fix because most IDEs display information on where and when there is a syntax error. . Test Cases: Unlike syntax errors, logic errors are more difficult to found because the IDEs doesn’t help you and it would normally look like nothing is wrong. This is when programmers use test cases. Test cases are a set of actions(like inputs) that are used to check if they get the correct result. . Hand Tracing: Another testing strategy is hand tracing. Hand tracing is putting in values of variables in a loop to find out if the outcome is correct. This is most useful with loops and other small code segments that repeat a number of times. . Extra Outputs: Lastly, a programmer could just add extra outputs. This strategy is used so that the programmer could find where the error is in the program. When the error is fixed, the extra output is normally removed. .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%207/2022/10/14/cb1.html",
            "relUrl": "/fastpages/jupyter/week%207/2022/10/14/cb1.html",
            "date": " • Oct 14, 2022"
        }
        
    
  
    
        ,"post68": {
            "title": "Code Corrections",
            "content": "menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99,} print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) total = 0 N = int(input(&quot;How many items do you wish to purchase?&quot;)) count = 0 while count &lt; N: item = input(&quot;Please select an item from the menu&quot;) try: total += menu[item] count+=1 except: print(&quot;Invalid input&quot;) print(str(total)) . Menu burger $3.99 fries $1.99 drink $0.99 4.98 .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%207/2022/10/11/code-corrections.html",
            "relUrl": "/fastpages/jupyter/week%207/2022/10/11/code-corrections.html",
            "date": " • Oct 11, 2022"
        }
        
    
  
    
        ,"post69": {
            "title": "Title",
            "content": "print(&quot;C&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) for weather in weatherData.dict[k,v]: for key, value in weatherData: print(key, value) .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/10/09/idk.html",
            "relUrl": "/2022/10/09/idk.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post70": {
            "title": "API Demonstration",
            "content": "JS Table | API Usage | Link 3 | . import requests url = &quot;https://spotify23.p.rapidapi.com/search/&quot; querystring = {&quot;q&quot;:&quot;&lt;REQUIRED&gt;&quot;,&quot;type&quot;:&quot;multi&quot;,&quot;offset&quot;:&quot;0&quot;,&quot;limit&quot;:&quot;10&quot;,&quot;numberOfTopResults&quot;:&quot;5&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;0588371053msha6940727d7c83aap107c98jsn19374300bf1d&quot;, &quot;X-RapidAPI-Host&quot;: &quot;spotify23.p.rapidapi.com&quot; } response1 = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(&quot;Albums&quot;) Music = response1.json().get(&quot;albums&quot;) Songs = list(Music.items()) for key, value in Songs: print(key, value) . Albums totalCount 28 items [{&#39;data&#39;: {&#39;uri&#39;: &#39;spotify:album:1rVhockt4RAiZFaK3M3zPB&#39;, &#39;name&#39;: &#39;No Jacket Required (2016 Remaster)&#39;, &#39;artists&#39;: {&#39;items&#39;: [{&#39;uri&#39;: &#39;spotify:artist:4lxfqrEsLX6N1N4OCSkILp&#39;, &#39;profile&#39;: {&#39;name&#39;: &#39;Phil Collins&#39;}}]}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0279553c4dcec1846d3a5c49ab&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485179553c4dcec1846d3a5c49ab&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27379553c4dcec1846d3a5c49ab&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;date&#39;: {&#39;year&#39;: 1985}}}, {&#39;data&#39;: {&#39;uri&#39;: &#39;spotify:album:7avlHipAwnKsxcXwC9Wpin&#39;, &#39;name&#39;: &#39;No Jacket Required (Deluxe Edition)&#39;, &#39;artists&#39;: {&#39;items&#39;: [{&#39;uri&#39;: &#39;spotify:artist:4lxfqrEsLX6N1N4OCSkILp&#39;, &#39;profile&#39;: {&#39;name&#39;: &#39;Phil Collins&#39;}}]}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0257480be4ce4fd7659a25b7d9&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485157480be4ce4fd7659a25b7d9&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27357480be4ce4fd7659a25b7d9&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;date&#39;: {&#39;year&#39;: 1985}}}, {&#39;data&#39;: {&#39;uri&#39;: &#39;spotify:album:3JalRx7hoyAC7pyoc7aaw7&#39;, &#39;name&#39;: &#39;Some Assembly Required&#39;, &#39;artists&#39;: {&#39;items&#39;: [{&#39;uri&#39;: &#39;spotify:artist:1dwRnam2taNMv8H3VR6isd&#39;, &#39;profile&#39;: {&#39;name&#39;: &#39;Assembly of Dust&#39;}}]}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e023a08256fb7ce8a38b41ea5ff&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048513a08256fb7ce8a38b41ea5ff&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2733a08256fb7ce8a38b41ea5ff&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;date&#39;: {&#39;year&#39;: 2009}}}, {&#39;data&#39;: {&#39;uri&#39;: &#39;spotify:album:5gxL1YPTDUtyUG2Qp3wVO0&#39;, &#39;name&#39;: &#39;Required Etiquette Vol. 1&#39;, &#39;artists&#39;: {&#39;items&#39;: [{&#39;uri&#39;: &#39;spotify:artist:0LyfQWJT6nXafLPZqxe9Of&#39;, &#39;profile&#39;: {&#39;name&#39;: &#39;Various Artists&#39;}}]}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e023f494786d82cc0f20a452dbe&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048513f494786d82cc0f20a452dbe&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2733f494786d82cc0f20a452dbe&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;date&#39;: {&#39;year&#39;: 2014}}}, {&#39;data&#39;: {&#39;uri&#39;: &#39;spotify:album:53aQdegVPKq4MgSGgCQuLz&#39;, &#39;name&#39;: &#39;No Faith Required&#39;, &#39;artists&#39;: {&#39;items&#39;: [{&#39;uri&#39;: &#39;spotify:artist:4DMlDJn7CPSSS0DuUf1vrH&#39;, &#39;profile&#39;: {&#39;name&#39;: &#39;Snowy White&#39;}}, {&#39;uri&#39;: &#39;spotify:artist:5zRIFTHDQwGWKZ7z61fFKb&#39;, &#39;profile&#39;: {&#39;name&#39;: &#39;The White Flames&#39;}}]}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02c3e11f275c54926f5bfcb411&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851c3e11f275c54926f5bfcb411&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273c3e11f275c54926f5bfcb411&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;date&#39;: {&#39;year&#39;: 1996}}}, {&#39;data&#39;: {&#39;uri&#39;: &#39;spotify:album:0BbeoTXqQv0qKki6CDcznI&#39;, &#39;name&#39;: &#39;Disassembly Required (Teaser Original Soundtrack)&#39;, &#39;artists&#39;: {&#39;items&#39;: [{&#39;uri&#39;: &#39;spotify:artist:0yXeAQirPMVzAlhxGvux1s&#39;, &#39;profile&#39;: {&#39;name&#39;: &#39;Liam Vickers&#39;}}]}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0226cf2e2751ee0aec2cf62479&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485126cf2e2751ee0aec2cf62479&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27326cf2e2751ee0aec2cf62479&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;date&#39;: {&#39;year&#39;: 2021}}}, {&#39;data&#39;: {&#39;uri&#39;: &#39;spotify:album:1nYOe3S7pWbZwbzS92IScH&#39;, &#39;name&#39;: &#39;Required Repertoire for the 46th PTNA Piano Competition 2022, Vol. 1&#39;, &#39;artists&#39;: {&#39;items&#39;: [{&#39;uri&#39;: &#39;spotify:artist:0LyfQWJT6nXafLPZqxe9Of&#39;, &#39;profile&#39;: {&#39;name&#39;: &#39;Various Artists&#39;}}]}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0258c6ffa1c61bed0f61ac1204&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485158c6ffa1c61bed0f61ac1204&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27358c6ffa1c61bed0f61ac1204&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;date&#39;: {&#39;year&#39;: 2022}}}, {&#39;data&#39;: {&#39;uri&#39;: &#39;spotify:album:3xEUUVwjNVvTaHQjcpea8O&#39;, &#39;name&#39;: &#39;Assembly Required&#39;, &#39;artists&#39;: {&#39;items&#39;: [{&#39;uri&#39;: &#39;spotify:artist:6ytGxUYeXamODJwiXuZvjO&#39;, &#39;profile&#39;: {&#39;name&#39;: &#39;Olivia Penalva&#39;}}]}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02e098b0f0c819f5075263fd0c&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851e098b0f0c819f5075263fd0c&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273e098b0f0c819f5075263fd0c&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;date&#39;: {&#39;year&#39;: 2022}}}, {&#39;data&#39;: {&#39;uri&#39;: &#39;spotify:album:55bIeFDVLsLwa3WEnSJe0C&#39;, &#39;name&#39;: &#39;No Fantasy Required&#39;, &#39;artists&#39;: {&#39;items&#39;: [{&#39;uri&#39;: &#39;spotify:artist:5l9wiTZVfqQTfMDOt0HtwC&#39;, &#39;profile&#39;: {&#39;name&#39;: &#39;Tiga&#39;}}]}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e023542e4268c5a12d41a98b164&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048513542e4268c5a12d41a98b164&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2733542e4268c5a12d41a98b164&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;date&#39;: {&#39;year&#39;: 2016}}}, {&#39;data&#39;: {&#39;uri&#39;: &#39;spotify:album:2ZNhj2qao5CEasrS2NH45J&#39;, &#39;name&#39;: &#39;No Assembly Required&#39;, &#39;artists&#39;: {&#39;items&#39;: [{&#39;uri&#39;: &#39;spotify:artist:70BRQ5tBte6kVqHviL3srE&#39;, &#39;profile&#39;: {&#39;name&#39;: &#39;Pieces Of A Dream&#39;}}]}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0238b547096e33bf308c492a4b&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485138b547096e33bf308c492a4b&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27338b547096e33bf308c492a4b&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;date&#39;: {&#39;year&#39;: 2004}}}] . import requests from sqlalchemy import values url = &quot;https://weatherbit-v1-mashape.p.rapidapi.com/current&quot; querystring = {&quot;lon&quot;:&quot;-82.996216&quot;,&quot;lat&quot;:&quot;40.367474&quot;,&quot;units&quot;:&quot;imperial&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;0588371053msha6940727d7c83aap107c98jsn19374300bf1d&quot;, &quot;X-RapidAPI-Host&quot;: &quot;weatherbit-v1-mashape.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(&quot;Ohio Weather&quot;) weatherData = response.json().get(&quot;data&quot;) OHweather = list(weatherData[0].items()) for key, value in OHweather: print(key, value) . Ohio Weather app_temp 70.4 aqi 46 city_name Kilbourne clouds 7 country_code US datetime 2022-10-11:20 dewpt 40.7 dhi 93.3 dni 784.3 elev_angle 29.6 ghi 474.34 gust 14.5 h_angle 45 lat 40.3675 lon -82.9962 ob_time 2022-10-11 20:30 pod d precip 0 pres 988 rh 33 slp 1021.00433 snow 0 solar_rad 474.3 sources [&#39;rtma&#39;] state_code OH station G1320 sunrise 11:39 sunset 22:58 temp 72 timezone America/New_York ts 1665520235 uv 3.0414183 vis 9.3 weather {&#39;code&#39;: 800, &#39;icon&#39;: &#39;c01d&#39;, &#39;description&#39;: &#39;Clear sky&#39;} wind_cdir S wind_cdir_full south wind_dir 177 wind_spd 9.9 .",
            "url": "https://h4seeb-cmd.github.io/turtle/submenu2/APIUsage",
            "relUrl": "/submenu2/APIUsage",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post71": {
            "title": "AP Exam Practice",
            "content": "Proof of Completion: . . I notice that I still need to work on understanding the Collegeboard code and understanding code logic. That is the main thing holding me back at the minute. I also need to work on my speed as well. . Problem 1: . DineOutHelper is a mobile application that people can use to select a restaurant for a group meal. Each user creates a profile with a unique username and a list of food allergies or dietary restrictions. Each user can then build a contact list of other users of the app. . A user who is organizing a meal with a group selects all the members of the group from the user’s contact list. The application then recommends one or more nearby restaurants based on whether the restaurant can accommodate all of the group members’ allergies and dietary restrictions. . Suppose that Alejandra is using DineOutHelper to organize a meal with Brandon and Cynthia. Which of the following data are needed for DineOutHelper to recommend a restaurant for the group? . 1) Each group member’s list of food allergies or dietary restrictions 2) Alejandra’s geographic location 3) The usernames of the people on Brandon and Cynthia’s contact lists . Problem 2: . To direct a call to the appropriate destination, which of the following input data is needed by the upgraded system that was NOT needed by the original system? . 1) Audio signal of the customer’s voice 2) The customer’s keypad selection 3) The customer’s phone number . Problem 3: . The figure below represents a network of physically linked computers labeled A through G. A line between two computers indicates that the computers can communicate directly with each other. Any information sent between two computers that are not directly connected must go through at least one other computer. For example, information can be sent directly between computers A and B, but information sent between computers A and C must go through other computers. What is the minimum number of connections that must be broken or removed in the network before computer E can no longer communicate with computer F? . 1) 1 2) 3 3) 4 4) 2 . Answers: . Problem 1: 1 and 2 only | Problem 2: 1 only | Problem 3: 3 only | .",
            "url": "https://h4seeb-cmd.github.io/turtle/markdown/week%206/2022/10/09/AP-practice.html",
            "relUrl": "/markdown/week%206/2022/10/09/AP-practice.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post72": {
            "title": "Title",
            "content": "print(&quot;C&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/10/08/idk.html",
            "relUrl": "/2022/10/08/idk.html",
            "date": " • Oct 8, 2022"
        }
        
    
  
    
        ,"post73": {
            "title": "Collegeboard MCQs",
            "content": "Proof of Completion: . . Things I Found Difficult: . - The Pseudo-Code . I found that working with the psuedo-code proved to be a challenge for many reasons. For one, it was something I am not entirely familiar with, as I have had very little exposure and I have never actually used it for anything. Due to this sense of unfamiliarity, figuring out the logic behind certain pieces of code was very challenging for me. . - The Word Problems . Additionally, I found that the word problems were also challenging for me. It felt like they were extremely bloated and there was some useless information for the purpose of throwing me off. . Overall Thoughts . I think that I will definetely need to train myself to learn the CollegeBoard psuedocode a little bit more, as that will for sure show up on the AP exam. Additionally, I will have to get better at seeing the logic in code. In order to do that I must practice to analyze different pieces of code to pick apart their funciton. I should also strive to get better at the word problems, as they gave me quite a lot of trouble. .",
            "url": "https://h4seeb-cmd.github.io/turtle/markdown/week%206/2022/10/02/collegeboard-mcqs.html",
            "relUrl": "/markdown/week%206/2022/10/02/collegeboard-mcqs.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post74": {
            "title": "Title",
            "content": "This is my table. . It was created using HTML Fragments: . JS More Table . JavaScript Usage | JavaScript Demonstration | . More Table | More Table | .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/09/25/javascript-testing.html",
            "relUrl": "/2022/09/25/javascript-testing.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post75": {
            "title": "JavaScript Demonstration",
            "content": "JS Table | API Usage | Link 3 | . var Letters = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;, &quot;o&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;u&quot;, &quot;v&quot;, &quot;w&quot;, &quot;x&quot;, &quot;y&quot;, &quot;z&quot;]; var numbers = [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;]; var rLetters = Math.floor(Math.random()*Letters.length); var rNumbers = Math.floor(Math.random()*numbers.length); var user = Letters[rLetters] + numbers[rNumbers]; console.log (user); . w5 . // Defining variable team var team = { Haseeb: &quot;h4seeb-cmd&quot;, Shaurya: &quot;STG-7&quot;, Tirth: &quot;Tirth-Thakkar&quot;, Evan: &quot;chewy-boba10&quot;, Alex: &quot;YLu-1258&quot; }; // Creating the function to make the table function createTable(values){ var table = &quot;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;GitHub Username&lt;/th&gt;&lt;/tr&gt;&quot; var keys = Object.keys(values); // Printing the values into the table for(var index in keys){ const key = keys[index]; const value = team[key]; table += &quot;&lt;tr&gt;&lt;td&gt;&quot;+key+&quot;&lt;/td&gt;&lt;td&gt;&quot;+value+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;; } table += &quot;&lt;/table&gt;&quot;; return table; } $$.html(createTable(team)); . NameGitHub Username . Haseeb | h4seeb-cmd | . Shaurya | STG-7 | . Tirth | Tirth-Thakkar | . Evan | chewy-boba10 | . Alex | YLu-1258 | .",
            "url": "https://h4seeb-cmd.github.io/turtle/submenu/js-trial-and-error",
            "relUrl": "/submenu/js-trial-and-error",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post76": {
            "title": "My First Notebook",
            "content": "Welcome to... my FIRST NOTEBOOK! . WOAH IS THAT PYTHON? . print(&quot;YES IT IS!!!&quot;) . YES IT IS!!! .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%200/2022/09/15/first-notebook.html",
            "relUrl": "/fastpages/jupyter/week%200/2022/09/15/first-notebook.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post77": {
            "title": "Happy Essay",
            "content": "Haseeb Beg . Mrs. Paulson . HSE-3 . 26 September 2022 . Happy Essay . In this day and age, there are many ways to be truly fulfilled and happy. Two ways that people find happiness are by working on their passions and by having a positive impact on the world. . Working on your passions is one of the things in life that can truly fulfill someone and give them a true sense of happiness. One person who has lived by this sentiment is Ronaldo Fadul. He has rejected the world’s materialistic nature for a humble house on the beach where he surfs day in and day out for over 50 years now. He expresses that, “This is the life that I chose. This is not the life of a PhD, but I live well.” He doesn’t quite have as much money as Elon Musk, but he lives a life that he is passionate about, and that’s enough for him. He has stepped off the hedonic treadmill, and in stepping away from the dystopian materialism that has affected Western society, he has found solace. . Another example of honing a skill and focusing on passions is actually a personal example. What surfing is to Ronaldo Fadul, making music is to me. I find tranquility and peace within the confines of my headphones, when making music, it seems as if everything else fades away. It’s just me and the music, in a sense. The thoughts that plague my mind in my day to day life seem to be silenced and my mind is whisked away into a state of flow. This state of flow has helped me through any mental health problems that I have struggled with in the past. One example I can give was a couple weeks ago. I knew that school was starting soon, and whatever I thought about it, I had a sense of dread and anxiety that would just not go away. Even as I would try to sleep, I would think about all the things that could go wrong. My only way of escaping this sense of dread was with music. Whenever I would go onto my DAW (Digital Audio Workstation) to work on projects, I would feel a sense of tranquility. As a result, eventually my passion for music helped me overcome the anxiety that gripped me during the summer. The flow state I was constantly entering on the daily helped me focus more on the present and what is happening right in front of me. . Additionally, it is known that doing acts of kindness and having a positive impact on the world is amazing for one’s mental health. A prime example of this is Andy Wimmer, who works at the Home for the Dying and Destitute in Kolkata, India. He has been helping people for 17 years and before his time in India, he was a rich banker. He lived a normal life, and he was quite into fashion. He spent lots of money on clothes, and materialistic things. However, when he was introduced to the Home for the Dying and Destitute, he thought that there must be more to life than a big house and a fast car. He started living in India and regularly volunteering, and he is living out his intrinsic goals. This is yet another example of people rejecting materialism and how it has made them happier. . Another example of the link between being kind and being happy was found in a study conducted by Kathyrn E. Buchanan and Anat Bardi in 2009. According to berkeley.edu, the study was conducted by sorting 86 participants into three groups for ten days and measuring their life satisfaction via survey before and after the study period. Group one was instructed to do at least one genuinely kind thing every day. Group two was instructed to do something new each day, and group three was not instructed to do anything. At the end of the study, it was found that after being surveyed, groups one and two had roughly equal increases in happiness. Even though group one only had to do one kind thing every day, they managed to feel the same amount of happiness as the group who were constantly doing new things. Additionally, both groups were focused on more intrinsic goals, and that’s why the happiness in the study grew. . Now looking back at this evidence, it’s no wonder that the general population has gotten unhappier and unhappier. If the American Dream of having a big house and fast cars was really the peak of the human experience, if money really was the key to happiness, then why did the suicide rate in the United States soar by 30 percent? .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/09/15/Happy-Essay.html",
            "relUrl": "/2022/09/15/Happy-Essay.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post78": {
            "title": "College Board Performance Task Brainstorming",
            "content": "DISCLAIMER: IDEAS SUBJECT TO CHANGE . Idea 1: Working Calculator . Task Outline/Desc. . I was thinking about making an online calculator that can handle equations. It would also play nice, calming music in the background. It would also be cool if I could add a function to let the user play their own songs on the site by linking it to spotify. The equations . College Board Requirements . Program Purpose and Function . The purpose of this calculator is to assist people with mathematical calculations. The calculator will be robust, and the site will work seamlessly, to provide the user with the best experience possible. . Data Abstraction . The data that will be stored is the integers inputed by the user. Once they hit the calculate button, the code will compile the user data and calculate the output. Additionally, the site will allow users to sign into their spotify. It will use this information to let the user play whatever song they want on the site, provided they sign in. . Managing Complexity . Ideally, my calculator should be able to calculate semi-complex equations using order of operations and print out the output. Adding the order of operations into the mix would spike up the complexity of the code. Additionally, the option to sign in to a Spotify account and play music would prove to be quite complex as well. . Procedural Abstraction . The code will abstract user data from what they inputted, and it will also collect the user’s Spotify details so that they can access their music playlists and play songs from the website UI. This will make the calculator more personalized, and it would add another level of depth to the project. . Algorithm Implementation . The main algorithm in this website would work to calculate the solution to the equations users would input. There will be a secondary algorithm that will pull user data in order to let them access their Spotify from the calculator. . Testing . In order to test my idea, I will screen record myself going through every function. . Learning Preperation . In order to create this idea, I need to learn about: . Integrations with other sites | How to implement an order to the code’s math | How to further customize webpages | . Ideas . Fallback ideas if the calculator project hits the fan: . More refined quiz game | 2-D platfoming game | .",
            "url": "https://h4seeb-cmd.github.io/turtle/markdown/week%203/2022/09/12/CollegeBoardPerformaceTaskOutline.html",
            "relUrl": "/markdown/week%203/2022/09/12/CollegeBoardPerformaceTaskOutline.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post79": {
            "title": "Hello World",
            "content": "Ideas for My Quiz (9/9/22) . Short, text based questions. | Mix CS questions with some other, random questions. | A quiz about CS vocab? | A math quiz? | . My Plan for How I Would Make My Quiz (9/9/22) . Have a question on the top, have a box where user types answer. | If correct, lead to a correct screen and vice versa. | Keep score by using variables. | At the end, display the score the user obtained. | . Completed Tangible (9/11/22) . As of the date, the quiz is now complete: https://studio.code.org/projects/applab/byjBO37c2ri4OQLnzNk4YrF40bVfgn9oxhQbJa8_aRg. I added a mix bag of questions that vary from CS terminology to mathematical questions. Some challenges I faced while working were: . Not having my score tallied correctly at the end card | Hitting submit indiscriminately sent you to the correct screen, regardless of answer | Suffering from organizational issues | . In order to overcome these challenges, I had to do lots of debugging. For one, I labled most of the components in my quiz, as my lack of organization really started to weigh me down later on. In order to fix the submit button only sending you to the correct screen, I had to use the getText code to run a check through the user input. . Improvements I Should Keep in Mind for the Future . Some things I could have done better were: . Make the quiz more visually appealing | Manage my work time better | Write better, more robust code | . Thoughts on AppLab . I feel like AppLab is a great concept and tool for those taking their first steps into CS, but I feel like because it’s not using an actual language, there’s not a lot of room for going above and beyond. Looking for ways to improve my code, and advice as to how to do certain things online was nigh impossible, as there isn’t too much documentation on the way AppLab works at a higher level. At the end of the day, this feels like a Dollar Tree, less robust version of Scratch. .",
            "url": "https://h4seeb-cmd.github.io/turtle/markdown/week%203/2022/09/09/App-Lab-Planning.html",
            "relUrl": "/markdown/week%203/2022/09/09/App-Lab-Planning.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post80": {
            "title": "Welcome!",
            "content": "Row 3, Managing Complexity . Always try to plan a way to make the code less complex. Be a “lazy programmer” . Row 5, Algortithm Implementation . Algorithm- Code that does things. . Row 6, Testing . Make sure to test your code. Test different possibilities and fix the code acoordingly. Before turning your work in, make sure to test. .",
            "url": "https://h4seeb-cmd.github.io/turtle/markdown/2022/09/08/CollegeBoardLecture.html",
            "relUrl": "/markdown/2022/09/08/CollegeBoardLecture.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post81": {
            "title": "Changing My Theme",
            "content": "My Theme Changing Experience . I was wondering what Turtle would look like under a new coat of paint, and I decided that I wanted to try out a new theme! I ended up choosing the theme Midnight, and this is how it turned out: . . I noticed that my home page broke, and all my subpages were gone. The font changed and on top of that, I had to hide all my custom css to get the layout to function. It added some new text that wasn’t there before and the color scheme completely changed. .",
            "url": "https://h4seeb-cmd.github.io/turtle/markdown/week%202/2022/09/05/theme-change.html",
            "relUrl": "/markdown/week%202/2022/09/05/theme-change.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post82": {
            "title": "Title",
            "content": "Changing My Theme .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/09/05/change_theme.html",
            "relUrl": "/2022/09/05/change_theme.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post83": {
            "title": "My Team",
            "content": "My Team . About Us! . toc:true- branch: master | layout: post | badges: true | comments: true | author: Haseeb Beg | categories: [fastpages, jupyter, Week 2] | . Team_Info = [] Team_Info.append({ &quot;First_Name&quot;: &quot;Mirza&quot;, &quot;Middle_Initial&quot;: &quot;H.&quot;, &quot;Last_Name&quot;: &quot;Beg&quot;, &quot;Date_of_Birth&quot;: &quot;December 6th, 2007&quot;, &quot;Grade&quot;: &quot;10th&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;mirzahbeg123@gmail.com&quot;, &quot;Likes&quot;: [&quot;Video Games&quot;, &quot;Coding&quot;, &quot;Working Out&quot;,] }) Team_Info.append({ &quot;First_Name&quot;: &quot;Tirth&quot;, &quot;Middle_Initial&quot;: &quot;S.&quot;, &quot;Last_Name&quot;: &quot;Thakkar&quot;, &quot;Date_of_Birth&quot;: &quot;December 26th, 2005&quot;, &quot;Grade&quot;: &quot;11th&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;tirth1226@gmail.com&quot;, &quot;Likes&quot;: [&quot;Reading&quot;, &quot;Board Games&quot;,] }) Team_Info.reverse() print(Team_Info) . [{&#39;First_Name&#39;: &#39;Tirth&#39;, &#39;Middle_Initial&#39;: &#39;S.&#39;, &#39;Last_Name&#39;: &#39;Thakkar&#39;, &#39;Date_of_Birth&#39;: &#39;December 26th, 2005&#39;, &#39;Grade&#39;: &#39;11th&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;tirth1226@gmail.com&#39;, &#39;Likes&#39;: [&#39;Reading&#39;, &#39;Board Games&#39;]}, {&#39;First_Name&#39;: &#39;Mirza&#39;, &#39;Middle_Initial&#39;: &#39;H.&#39;, &#39;Last_Name&#39;: &#39;Beg&#39;, &#39;Date_of_Birth&#39;: &#39;December 6th, 2007&#39;, &#39;Grade&#39;: &#39;10th&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;mirzahbeg123@gmail.com&#39;, &#39;Likes&#39;: [&#39;Video Games&#39;, &#39;Coding&#39;, &#39;Working Out&#39;]}] . def print_data(d_rec): print(&quot; x1b[1;93m&quot;, d_rec[&quot;First_Name&quot;], d_rec[&quot;Middle_Initial&quot;], d_rec[&quot;Last_Name&quot;], &quot; x1b[0m&quot;) print(&quot;&quot;) print(&quot; t&quot;, &quot; x1b[3;96m&quot;, &quot;Grade: &quot;, d_rec[&quot;Grade&quot;], &quot; x1b[0m&quot;) print(&quot;&quot;) print(&quot; t&quot;, &quot; x1b[3;94m&quot;, &quot;Birthday:&quot;, d_rec[&quot;Date_of_Birth&quot;], &quot; x1b[0m&quot;) print(&quot;&quot;) print(&quot; t&quot;, &quot; x1b[3;96m&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;], &quot; x1b[0m&quot;) print(&quot;&quot;) print(&quot; t&quot;, &quot; x1b[3;94m&quot;, &quot;Interests:&quot;, d_rec[&quot;Likes&quot;], &quot; x1b[0m&quot;) print(&quot;&quot;) print(&quot; t&quot;, &quot; x1b[3;96m&quot;, &quot;Contact Info:&quot;, d_rec[&quot;Email&quot;], &quot; x1b[0m&quot;) print() # for loop algorithm iterates on length of InfoDb def for_loop(): for record in Team_Info: print_data(record) for_loop() . Tirth S. Thakkar Grade: 11th Birthday: December 26th, 2005 Residence: San Diego Interests: [&#39;Reading&#39;, &#39;Board Games&#39;] Contact Info: tirth1226@gmail.com Mirza H. Beg Grade: 10th Birthday: December 6th, 2007 Residence: San Diego Interests: [&#39;Video Games&#39;, &#39;Coding&#39;, &#39;Working Out&#39;] Contact Info: mirzahbeg123@gmail.com .",
            "url": "https://h4seeb-cmd.github.io/turtle/2022/09/05/My-Team.html",
            "relUrl": "/2022/09/05/My-Team.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post84": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Lists and Dictionaries . As a quick review we used variables in the introduction last week. Variables all have a type: String, Integer, Float, List and Dictionary are some key types. In Python, variables are given a type at assignment, Types are important to understand and will impact operations, as we saw when we were required to user str() function in concatenation. . Developers often think of variables as primitives or collections. Look at this example and see if you can see hypothesize the difference between a primitive and a collection. | Take a minute and see if you can reference other elements in the list or other keys in the dictionary. Show output. | examplelist = [&quot;hola,&quot;, &quot;como estas?&quot;] print (&quot;examplelist&quot;, examplelist, type(examplelist), &quot;length&quot;, len(examplelist)) print(&quot;- examplelist[0]&quot;, examplelist[0], type(examplelist[1])) print(&quot;What is variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection?&quot;) print(&quot;What is different about the list output?&quot;) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;Bash&quot;, &quot;HTML&quot;, &quot;C++&quot;, &quot;C&quot;] print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) . examplelist [&#39;hola,&#39;, &#39;como estas?&#39;] &lt;class &#39;list&#39;&gt; length 2 - examplelist[0] hola, &lt;class &#39;str&#39;&gt; What is variable name/key? value? type? primitive or collection? What is different about the list output? langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;, &#39;HTML&#39;, &#39;C++&#39;, &#39;C&#39;] &lt;class &#39;list&#39;&gt; length 7 - langs[0] Python &lt;class &#39;str&#39;&gt; . name = &quot;MORT&quot; print(&quot;What is the variable value?&quot;, name) . What is the variable value? MORT . # variable of type string print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) name = &quot;Haseeb B&quot; print(&quot;name&quot;, name, type(name)) print() 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222 # variable of type integer print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) age = 14 print(&quot;age&quot;, age, type(age)) print() # variable of type float print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) score = 420 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) print(&quot;What is variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection?&quot;) print(&quot;What is different about the list output?&quot;) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;Bash&quot;, &quot;HTML&quot;, &quot;C++&quot;, &quot;C&quot;] print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) print() # variable of type dictionary (a group of keys and values) print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) print(&quot;What is different about the dictionary output?&quot;) person = { &quot;Haseeb&quot;: name, &quot;14&quot;: age, &quot;420&quot;: score, &quot;engrish&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) . What is the variable name/key? value? type? primitive or collection, why? name Haseeb B &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? age 14 &lt;class &#39;int&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? score 420 &lt;class &#39;int&#39;&gt; What is variable name/key? value? type? primitive or collection? What is different about the list output? langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;, &#39;HTML&#39;, &#39;C++&#39;, &#39;C&#39;] &lt;class &#39;list&#39;&gt; length 7 - langs[0] Python &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? What is different about the dictionary output? person {&#39;Haseeb&#39;: &#39;Haseeb B&#39;, &#39;14&#39;: 14, &#39;420&#39;: 420, &#39;engrish&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;, &#39;HTML&#39;, &#39;C++&#39;, &#39;C&#39;]} &lt;class &#39;dict&#39;&gt; length 4 . Notes . Change up the categories on front matter. | Organize website better. | . List and Dictionary purpose . Our society is being built on information. List and Dictionaries are used to collect information. Mostly, when information is collected it is formed into patterns. As that pattern is established you will be able collect many instances of that pattern. . List is used to collect many instances of a pattern | Dictionary is used to define data patterns. | Iteration is often used to process through lists. | . To start exploring more deeply into List, Dictionary and Iteration this example will explore constructing a List of people and cars. . As we learned above, a List is a data type: class &#39;list&#39; | A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list. A class usually has extra method to support working with its objects/instances. | In the example below, the expression is appended to the &#39;list&#39; is the data type: class &#39;dict&#39; | At the end, you see a fairly complicated data structure. This is a list of dictionaries, or a collection of many similar data patterns. The output looks similar to JavaScript Object Notation (JSON), Jekyll/GitHub pages yml files, FastPages Front Matter. As discussed we will see this key/value patter often, you will be required to understand this data structure and understand the parts. Just believe it is peasy ;) and it will become so. | . InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;GPA&quot;: &quot;4&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;GPA&quot;: &quot;Over 9000&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;GPA&#39;: &#39;4&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;GPA&#39;: &#39;Over 9000&#39;, &#39;Owns_Cars&#39;: [&#39;4Runner&#39;]}] . Formatted output of List/Dictionary - for loop . Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet, to applications, or preparing it to be stored into a database. It is a great way to exchange data between programs and programmers. Exchange of data between programs includes the data type the method/function and the format of the data type. These concepts are key to learning how to write functions, receive, and return data. This process is often referred to as an Application Programming Interface (API). . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process... . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. | Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. | Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. | . # print function: given a dictionary of InfoDb content def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;GPA:&quot;, d_rec[&quot;GPA&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output John Mortensen Residence: San Diego Birth Day: October 21 GPA: 4 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 GPA: Over 9000 Cars: 4Runner . Alternate methods for iteration - while loop . In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a &quot;while&quot; loop and &quot;recursion&quot;. . The while_loop() function contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() | . # while loop algorithm contains an initial n and an index incrementing statement (n += 1) def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output John Mortensen Residence: San Diego Birth Day: October 21 GPA: 4 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 GPA: Over 9000 Cars: 4Runner . Calling a function repeatedly - recursion . This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with &quot;recursive_loop(0)&quot; | the last statement indented inside the if statement &quot;recursive_loop(i + 1)&quot; activates another call to the recursive_loop(i) function, each time i is increasing | ultimately the &quot;if i &lt; len(InfoDb):&quot; will evaluate to false and the program ends | . # recursion algorithm loops incrementing on each call (n + 1) until exit condition is met def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output John Mortensen Residence: San Diego Birth Day: October 21 GPA: 4 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 GPA: Over 9000 Cars: 4Runner . Hacks . Add a couple of records to the InfoDb | Try to do a for loop with an index | Pair Share code somethings creative or unique, with loops and data. Hints... Would it be possible to output data in a reverse order? | Are there other methods that can be performed on lists? | Could you create new or add to dictionary data set? Could you do it with input? | Make a quiz that stores in a List of Dictionaries. | . | .",
            "url": "https://h4seeb-cmd.github.io/turtle/lecture/python_lists_lecture",
            "relUrl": "/lecture/python_lists_lecture",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post85": {
            "title": "Tool Install Check",
            "content": "Conda Check . %%bash conda list . # packages in environment at /home/h4seeb/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 . %%bash echo &quot;Conda Check&quot; test=&quot;jupyter&quot; check=`conda list | grep $test` n=${#check} if [[ {n} &gt; 0 ]]; then echo &quot;$check&quot; else echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . Jupyter Check . %%bash jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.4.0 ipykernel : 6.15.1 ipywidgets : not installed jupyter_client : 7.3.4 jupyter_core : 4.11.1 jupyter_server : not installed jupyterlab : not installed nbclient : not installed nbconvert : not installed nbformat : not installed notebook : not installed qtconsole : not installed traitlets : 5.3.0 Available kernels: bash /home/h4seeb/.local/share/jupyter/kernels/bash javascript /home/h4seeb/.local/share/jupyter/kernels/javascript python3 /home/h4seeb/.local/share/jupyter/kernels/python3 . %%bash test=&quot;python3&quot; check=`jupyter kernelspec list | grep $test` n=${#check} if [[ ${n} &gt; 0 ]]; then echo &quot;$check&quot; else echo &quot;$test not found&quot; fi . python3 /home/h4seeb/.local/share/jupyter/kernels/python3 . Python Check . %%bash python --version python2 --version . Python 3.9.12 . Python 2.7.18 .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%201/2022/08/28/tool-check.html",
            "relUrl": "/fastpages/jupyter/week%201/2022/08/28/tool-check.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post86": {
            "title": "LECTURE 3",
            "content": "Notes . You can remotely git pull using bash. | Make your own toolsCheck page. | . export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/turtle # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/h4seeb-cmd/turtle.git&quot; # change to project of choice .",
            "url": "https://h4seeb-cmd.github.io/turtle/lecture/bashlecture",
            "relUrl": "/lecture/bashlecture",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post87": {
            "title": "LECTURE 2",
            "content": "NOTES . Make a google doc, put it on docx, then proceed to somehow organize it in the blog. . | In front matter, there is a key and a value. . Ex:branch: master (branch is the key master is the value.) . | If key is present you MUST have a value. . | Go to _pages to add/edit subpages. . ie:About Me . | Special key known as site.baseurl. If you add curly brackets on it you can make a directory to a file. . | Secrets are in _config.yml, you can add images there. . | In config.yml, you can make show_image: true and you can now add images to posts. . to add an img to a post, do /image:{insert image link here, it should start with /images} . | .",
            "url": "https://h4seeb-cmd.github.io/turtle/lecture/vscodelecture",
            "relUrl": "/lecture/vscodelecture",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post88": {
            "title": "Quiz Time",
            "content": "import getpass, sys QUESTIONS = { &quot;What is used to create parameters in Python?&quot;: [ &quot;def&quot;, &quot;define&quot; ], &quot;Where are the secrets stored in your VSCode?&quot;: [ &quot;_config.yml&quot;, &quot;config.yml&quot;, &quot;config&quot; ], &quot;True or false: We can use docx files in our Fastpages site?&quot;: [ &quot;true&quot;, &quot;false&quot;, &quot;what in the world is docx?&quot; ], &quot;True or false: Static Text often changes when you run code&quot;: [ &quot;false&quot;, &quot;true&quot;, &quot;idk&quot; ], &quot;True or false: A sequence of code is only used on the AP exam and it is used to refer to mulitple lines of code&quot;: [ &quot;false&quot;, &quot;true&quot;, &quot;what&#39;s a sequence?&quot; ], &quot;Can we get an A in this class AND keep our sanity?&quot;: [ &quot;no&quot;, &quot;yes&quot;, &quot;maybe&quot; ], &quot;What is the syntax for remotely opening a file in VSCode from Terminal?&quot;: [ &quot;code .&quot;, &quot;Code.&quot;, &quot;. Code&quot; &quot;code.&quot; ], &quot;What do we call the defining parameters we set at the top of a markdown file or jupyter notebook?&quot;: [ &quot;front matter&quot;, &quot;define&quot; ], &quot;What is the name of the piece of code that lets you access and bring in other people&#39;s code?&quot;: [ &quot;import&quot;, &quot;port&quot;, &quot;rejuvenate&quot; ], &quot;What is the teacher&#39;s social security number?&quot;: [ &quot;how is that relevant&quot;, &quot;idk&quot;, &quot;why is this even a question&quot;, &quot;5014&quot; ], } for question, alternatives in QUESTIONS.items(): correct_answer = alternatives[0] for alternative in sorted(alternatives): print(f&quot; - {alternative}&quot;) answer = input(f&quot;{question}? &quot;) if answer == correct_answer: print(&quot;yay you got it right! here&#39;s your bronze medal!&quot;) else: print(f&quot;LOL imagine getting it wrong. The correct answer was {correct_answer!r}, not {answer!r}&quot;) . - def - define yay you got it right! here&#39;s your bronze medal! - _config.yml - config - config.yml LOL imagine getting it wrong. The correct answer was &#39;_config.yml&#39;, not &#39;idk&#39; - false - true - what in the world is docx? LOL imagine getting it wrong. The correct answer was &#39;true&#39;, not &#39;&#39; - false - idk - true LOL imagine getting it wrong. The correct answer was &#39;false&#39;, not &#39;&#39; - false - true - what&#39;s a sequence? LOL imagine getting it wrong. The correct answer was &#39;false&#39;, not &#39;&#39; - maybe - no - yes LOL imagine getting it wrong. The correct answer was &#39;no&#39;, not &#39;&#39; - . Codecode. - Code. - code . LOL imagine getting it wrong. The correct answer was &#39;code .&#39;, not &#39;&#39; - define - front matter LOL imagine getting it wrong. The correct answer was &#39;front matter&#39;, not &#39;&#39; - import - port - rejuvenate LOL imagine getting it wrong. The correct answer was &#39;import&#39;, not &#39;&#39; - 5014 - how is that relevant - idk - why is this even a question LOL imagine getting it wrong. The correct answer was &#39;how is that relevant&#39;, not &#39;&#39; .",
            "url": "https://h4seeb-cmd.github.io/turtle/fastpages/jupyter/week%201/2022/08/23/quiz-time.html",
            "relUrl": "/fastpages/jupyter/week%201/2022/08/23/quiz-time.html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post89": {
            "title": "LECTURE 1",
            "content": "Notes . -def = define, used to create parameters and functions in python. . -sequence = college board vocab for many lines of code in an order. . -static text = text that doesn&#39;t change. . ex:print(&quot;helloWorld&quot;) &gt; in this case, helloWorld is the static text, it doesn&#39;t change. . -import = imports commands that other people develop. . ex:import getpass sys -if statements are used in python to evaluate a correct or incorrect response. ex:if rsp == &quot;2&quot;&gt; print (rsp + &quot; is right!&quot;) correct += 1 else:print(rsp + &quot; is WRONG! :&lt; &quot;) -rsp is used in if statements, represents &quot;response&quot; .",
            "url": "https://h4seeb-cmd.github.io/turtle/lecture/pythonintrolecture",
            "relUrl": "/lecture/pythonintrolecture",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post90": {
            "title": "Welcome!",
            "content": "Hello World! . This is my very first blog post on this website! My name is Haseeb Beg, and I can’t wait to learn more about CS! . My Interests . I have a lot of things I like to do, some of them are: . Music Production 🎹 | Working Out 💪 | Gaming 🎮 | . Thanks For Reading! . Comment down below if you have any suggestions as to how I could improve my blog! .",
            "url": "https://h4seeb-cmd.github.io/turtle/markdown/2022/08/21/turtle-egg.html",
            "relUrl": "/markdown/2022/08/21/turtle-egg.html",
            "date": " • Aug 21, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://h4seeb-cmd.github.io/turtle/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Leaderboard Prototype",
          "content": "Game 1 Leaderboard | Game 2 Leaderboard | Game 3 Leaderboard | Game 4 Leaderboard | . Username Score . h4seeb-cmd | 10 | . nsk | 9 | . fishyflow | 2 | . .",
          "url": "https://h4seeb-cmd.github.io/turtle/leaderboardView/",
          "relUrl": "/leaderboardView/",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "Class Lectures",
          "content": "All the class lectures: . Lecture Date Lecture Lecture topic . 08-30-22 | Lecture 4 | Python Lists | . 08-25-22 | Lecture 3 | Bash | . 08-24-22 | Lecture 2 | VSCode | . 08-23-22 | Lecture 1 | Intro to Python | .",
          "url": "https://h4seeb-cmd.github.io/turtle/lectures/",
          "relUrl": "/lectures/",
          "date": ""
      }
      
  

  
  

  

  
  

  
      ,"page8": {
          "title": "Work Sprints",
          "content": "Work Sprints: . Sprint # Review Ticket . Sprint 2 | SReview Ticket | . Sprint 1 | Review Ticket | . Sprint 0 | Review Ticket | .",
          "url": "https://h4seeb-cmd.github.io/turtle/sprints/",
          "relUrl": "/sprints/",
          "date": ""
      }
      
  

  
      ,"page9": {
          "title": "Submenu2",
          "content": "JS Table | API Usage | Link 3 | . .",
          "url": "https://h4seeb-cmd.github.io/turtle/submenu/",
          "relUrl": "/submenu/",
          "date": ""
      }
      
  

  

  
      ,"page11": {
          "title": "Trivia Prototype",
          "content": "Question: What IDE is reccomended for APCSP? . Pycharm . VSCode . Scratch . IntelliJ .",
          "url": "https://h4seeb-cmd.github.io/turtle/triv/",
          "relUrl": "/triv/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  

  

  

  

  

  

  
  

  
      ,"page22": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://h4seeb-cmd.github.io/turtle/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}